<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<questions>
    <question id="29">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/ajax/what_is_ajax.htm"&gt;http://www.tutorialspoint.com/ajax/what_is_ajax.htm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://searchwindevelopment.techtarget.com/definition/Ajax"&gt;http://searchwindevelopment.techtarget.com/definition/Ajax&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;AJAX (Asynchronous JavaScript and XML) is a client-side script which is used to get the data from Server&amp;nbsp;without refreshing the current page.&lt;br /&gt;
&lt;br /&gt;
&lt;a href="http://4.bp.blogspot.com/-XV8gKfnGpJk/VP1b4DvFfFI/AAAAAAAAATc/n2lUniENmKs/s1600/ajax.gif"&gt;&lt;img alt="How Ajax Works" src="http://4.bp.blogspot.com/-XV8gKfnGpJk/VP1b4DvFfFI/AAAAAAAAATc/n2lUniENmKs/s1600/ajax.gif" style="height:182px; margin:0px; width:320px" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;p&gt;Conventional web applications transmit information to and from the server using synchronous requests. It means you fill out a form, hit submit, and get directed to a new page with new information from the server.&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;p&gt;With AJAX, when you hit submit, JavaScript will make a request to the server, interpret the results, and update the current screen. In the purest sense, the user would never know that anything was even transmitted to the server.&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;
</answer>
        <description>&lt;p&gt;What is AJAX?&lt;/p&gt;
</description>
        <topic parent_id="javascript" id="ajax" name="AJAX" type="sub"/>
    </question>
    <question id="30">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.web-technology-experts-notes.in/2015/03/ajax-interview-questions-and-answers-for-experienced.html"&gt;http://www.web-technology-experts-notes.in/2015/03/ajax-interview-questions-and-answers-for-experienced.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/ajax/ajax_in_action.htm"&gt;http://www.tutorialspoint.com/ajax/ajax_in_action.htm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.afterhoursprogramming.com/tutorial/JavaScript/XMLHttpRequest-Object/"&gt;http://www.afterhoursprogramming.com/tutorial/JavaScript/XMLHttpRequest-Object/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;XMLHttpRequest is an API available to web browser scripting languages (i.e. JavaScript).&lt;br /&gt;
It is used to send HTTP/HTTPS requests to a web server and load the server&amp;#39;s response into the script.&lt;br /&gt;
XMLHttpRequest was developed by Mozilla from an ActiveX object named XMLHTTP and created by Microsoft.&lt;/p&gt;

&lt;p&gt;Following are different stats(0-4) of ready state in XMLHttpRequest&lt;br /&gt;
&lt;strong&gt;0&lt;/strong&gt;&amp;nbsp;Ajax Request not initialized&amp;nbsp;&lt;br /&gt;
&lt;strong&gt;1&lt;/strong&gt;&amp;nbsp;Ajax Request&amp;#39;s server connection established&lt;br /&gt;
&lt;strong&gt;2&lt;/strong&gt;&amp;nbsp;Ajax Request received&amp;nbsp;&lt;br /&gt;
&lt;strong&gt;3&lt;/strong&gt;&amp;nbsp;Ajax Request processing&amp;nbsp;&lt;br /&gt;
&lt;strong&gt;4&lt;/strong&gt;&amp;nbsp;request finished and response is ready.&lt;/p&gt;

&lt;h2&gt;Steps of AJAX Operation&lt;/h2&gt;

&lt;ul&gt;
	&lt;li&gt;A client event occurs.&lt;/li&gt;
	&lt;li&gt;An XMLHttpRequest object is created.&lt;/li&gt;
	&lt;li&gt;The XMLHttpRequest object is configured.&lt;/li&gt;
	&lt;li&gt;The XMLHttpRequest object makes an asynchronous request to the Webserver.&lt;/li&gt;
	&lt;li&gt;The Webserver returns the result containing XML document.&lt;/li&gt;
	&lt;li&gt;The XMLHttpRequest object calls the callback() function and processes the result.&lt;/li&gt;
	&lt;li&gt;The HTML DOM is updated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;br /&gt;
function doGET()&lt;br /&gt;
{&lt;/p&gt;

&lt;blockquote&gt;&amp;nbsp;var xmlhttp;&lt;br /&gt;
if (window.XMLHttpRequest)&lt;br /&gt;
{
&lt;blockquote&gt;&amp;nbsp;xmlhttp=new XMLHttpRequest();&lt;/blockquote&gt;
}&lt;br /&gt;
else&lt;br /&gt;
{
&lt;blockquote&gt;&amp;nbsp;xmlhttp=new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);&lt;/blockquote&gt;
}&lt;br /&gt;
xmlhttp.onreadystatechange=function() //This part is actually executed last&lt;br /&gt;
{
&lt;blockquote&gt;&amp;nbsp;if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200) // Was the request processed successfully?&lt;br /&gt;
{
&lt;blockquote&gt;&amp;nbsp;document.getElementById(&amp;quot;sampleDiv&amp;quot;).innerHTML=xmlhttp.responseText;&lt;/blockquote&gt;
}&lt;/blockquote&gt;
}&lt;br /&gt;
xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;ajaxTest2.php?sampleVar=&amp;quot; + Math.random());&lt;br /&gt;
xmlhttp.send();&lt;/blockquote&gt;

&lt;p&gt;}&lt;br /&gt;
&amp;lt;/script&amp;gt;&lt;br /&gt;
&amp;lt;button type=&amp;quot;button1&amp;quot; onclick=&amp;quot;doGET()&amp;quot;&amp;gt;GET&amp;lt;/button&amp;gt;&lt;br /&gt;
&amp;lt;div id=&amp;quot;sampleDiv&amp;quot;&amp;gt;Nothing is here&amp;lt;/div&amp;gt;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;what is XMLHTTPRequest?&lt;/p&gt;
</description>
        <topic parent_id="javascript" id="ajax" name="AJAX" type="sub"/>
    </question>
    <question id="154">
        <references></references>
        <answer>&lt;p&gt;Ajax call to server&lt;/p&gt;&lt;pre&gt;&lt;code class="language-javascript"&gt;function getListOfStringsById(id,callback){
      var promise = $.ajax({
          cache: false,
          type: "GET",
          url: '/someUrl/'+id
        });
      promise.done(callback);
  }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Calling above ajax method&lt;/p&gt;&lt;pre&gt;&lt;code&gt;getListOfStringsById(id, function(response){
//do something with response
});&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;JQuery Ajax examples&lt;/p&gt;</description>
        <topic parent_id="javascript" id="ajax" name="AJAX" type="sub"/>
    </question>
    <question id="9">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://tutorials.jenkov.com/java-collections/hashcode-equals.html"&gt;http://tutorials.jenkov.com/java-collections/hashcode-equals.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://javarevisited.blogspot.in/2013/08/10-equals-and-hashcode-interview.html"&gt;http://javarevisited.blogspot.in/2013/08/10-equals-and-hashcode-interview.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://important-java-interview-questions.blogspot.in/2013/03/why-hashcode-and-equals-methods-are.html"&gt;http://important-java-interview-questions.blogspot.in/2013/03/why-hashcode-and-equals-methods-are.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.programcreek.com/2011/07/java-equals-and-hashcode-contract/"&gt;http://www.programcreek.com/2011/07/java-equals-and-hashcode-contract/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;code&gt;hashCode()&lt;/code&gt;&amp;nbsp;method is used to get a unique integer for given object. This integer is used for determining the bucket location, when this object needs to be stored in some&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Hash_table"&gt;HashTable&lt;/a&gt;&amp;nbsp;like data structure. By default, Object&amp;rsquo;s&amp;nbsp;&lt;code&gt;hashCode()&lt;/code&gt;&amp;nbsp;method returns and integer representation of memory address where object is stored.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;equals()&lt;/code&gt;&amp;nbsp;method, as name suggest, is used to simply verify the equality of two objects. Default implementation simply check the object references of two objects to verify their equality.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Why should we override hashcode() and equals() methods always?&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="basics_java" name="Basics" type="sub"/>
    </question>
    <question id="10">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://howtodoinjava.com/core-java/related-concepts/how-to-make-a-java-class-immutable/"&gt;http://howtodoinjava.com/core-java/related-concepts/how-to-make-a-java-class-immutable/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://java-questions.com/ImmutableClass-interview-questions.html"&gt;http://java-questions.com/ImmutableClass-interview-questions.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.journaldev.com/129/how-to-write-an-immutable-class"&gt;http://www.journaldev.com/129/how-to-write-an-immutable-class&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Immutable classes are Java classes whose objects can not be modified once created. Any modification in Immutable object result in new object. For example is&amp;nbsp;String is immutable in Java. Mostly Immutable are also final in Java, in order to prevent sub class from&amp;nbsp;overriding methods in Java&amp;nbsp;which can compromise Immutability. You can achieve same functionality by making member as non&amp;nbsp;final&amp;nbsp;but private and not modifying them except in constructor.&lt;/p&gt;

&lt;p&gt;To create an immutable class following steps should be followed:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Create a final class.&lt;/li&gt;
	&lt;li&gt;Set the values of properties using constructor only.&lt;/li&gt;
	&lt;li&gt;Make the properties of the class final and private&lt;/li&gt;
	&lt;li&gt;Do not provide any setters for these properties.&lt;/li&gt;
	&lt;li&gt;If the instance fields include references to mutable objects, don&amp;#39;t allow those objects to be changed:
	&lt;ol&gt;
		&lt;li&gt;Don&amp;#39;t provide methods that modify the mutable objects.&lt;/li&gt;
		&lt;li&gt;Don&amp;#39;t share references to the mutable objects. Never store references to external, mutable objects passed to the constructor; if necessary, create copies, and store references to the copies. Similarly, create copies of your internal mutable objects when necessary to avoid returning the originals in your methods.&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ol&gt;
</answer>
        <description>&lt;p&gt;What is an immutable class?&amp;nbsp;How to make any Java Class Immutable?&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="basics_java" name="Basics" type="sub"/>
    </question>
    <question id="160">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://java-questions.com/InnerClass-interview-questions.html"&gt;http://java-questions.com/InnerClass-interview-questions.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.in/2012/12/inner-class-and-nested-static-class-in-java-difference.html"&gt;http://javarevisited.blogspot.in/2012/12/inner-class-and-nested-static-class-in-java-difference.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javadecodedquestions.blogspot.in/2013/03/java-inner-class.html"&gt;http://javadecodedquestions.blogspot.in/2013/03/java-inner-class.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://tutorials.jenkov.com/java/nested-classes.html"&gt;http://tutorials.jenkov.com/java/nested-classes.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;There are two main types of inner classes &amp;ndash;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static member class&lt;/li&gt;&lt;li&gt;Inner class&lt;ul&gt;&lt;li&gt;Member class&lt;/li&gt;&lt;li&gt;Anonymous class&lt;/li&gt;&lt;li&gt;Local class&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="http://techestate.files.wordpress.com/2013/02/nested_classes.png" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Static class :&amp;nbsp;&lt;/strong&gt;A static member class behaves much like an ordinary top-level class, except that it can access the static members of the class that contains it. The static nested class can be accessed as the other static members of the enclosing class without having an instance of the outer class. The static class can contain non-static and static members and methods.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Member class&lt;/strong&gt;&amp;nbsp;- Classes declared outside a function (hence a &amp;quot;member&amp;quot;) and not declared &amp;quot;static&amp;quot;.&lt;br /&gt;The member class can be declared as public, private, protected, final and abstract.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Method local class&lt;/strong&gt;&amp;nbsp;&amp;ndash; The inner class declared inside the method is called method local inner class. Method local inner class can only be declared as final or abstract. Method local class can only access global variables or method local variables if declared as final&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Anonymous inner class&lt;/strong&gt;&amp;nbsp;- These are local classes which are automatically declared and instantiated in the middle of an expression. Also, like local classes, anonymous classes cannot be public, private, protected, or static. They can specify arguments to the constructor of the superclass, but cannot otherwise have a constructor. They can implement only one interface or extend a class.&lt;br /&gt;Anonymous class cannot define any static fields, methods, or classes, except for static final constants.&lt;br /&gt;Also, like local classes, anonymous classes cannot be public, private, protected, or static&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;public class InnerClassDemo {
	public static void main(String[] args) {
		Outer.Inner inner = new Outer().new Inner(); // without outer instance,inner instance doesnt exist
		inner.method();
		Outer.StaticInner staticInner = new Outer.StaticInner();
		staticInner.method();
		Person p = new Person() { //anonymous class
			void eat() {
				System.out.println("nice fruits");
			}
			void talk(){
				System.out.println("talking");
			}
		};
		p.eat();
		//p.talk(); Compliation error, no method talk in Person class
		MyInterface mi = new MyInterface() {
			public void m1() {
				System.out.println("m1");
			}
		};
	}
}

class Outer{
	static int x=3;
	int y = 5;
	//inner class
	class Inner{
		public void method(){
			System.out.println(x);
			StaticInner si = new StaticInner();
			si.method();
		}
	}
	//static inner class
	static class StaticInner{
		int z=8;
		public void method(){
			//Inner i = new Inner(); compilation error
			System.out.println(x);
			//System.out.println(y); compilation error: y should be static
			System.out.println(z);
		}
	}
	
}

abstract class Person {
	abstract void eat();
}
interface MyInterface{
	void m1();
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Inner classes&lt;/p&gt;</description>
        <topic parent_id="core_java" id="basics_java" name="Basics" type="sub"/>
    </question>
    <question id="161">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.programmerinterview.com/index.php/java-questions/how-system-out-println-works/"&gt;http://www.programmerinterview.com/index.php/java-questions/how-system-out-println-works/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javapapers.com/core-java/system-out-println/"&gt;http://javapapers.com/core-java/system-out-println/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;The &lt;strong&gt;System&lt;/strong&gt; class contains several useful class fields&amp;nbsp;and methods. It cannot be instantiated.&lt;br /&gt;Among the facilities provided by the &lt;strong&gt;System&lt;/strong&gt; class&amp;nbsp;are &lt;strong&gt;&lt;em&gt;standard input, standard output, and error output streams&lt;/em&gt;&lt;/strong&gt;,&amp;nbsp;access to externally defined properties and environment&amp;nbsp;variables,&amp;nbsp;&lt;br /&gt;a means of loading files and libraries&amp;nbsp;and a utility&amp;nbsp;method for quickly copying a portion of an array.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;public final class System {

    /* register the natives via the static initializer. VM will invoke the initializeSystemClass method to complete the initialization for this class separated from clinit.
     * Note that to use properties set by the VM, see the constraints described in the initializeSystemClass method.
     */
    private static native void registerNatives();
    static {
        registerNatives();
    }

    /** Don't let anyone instantiate this class */
    private System() {
    }
    /**
     * The "standard" input stream. This stream is already
     * open and ready to supply input data. Typically this stream
     * corresponds to keyboard input or another input source specified by
     * the host environment or user.
     */
    public final static InputStream in = null;

    /**
     * The "standard" output stream. This stream is already
     * open and ready to accept output data. Typically this stream
     * corresponds to display output or another output destination
     * specified by the host environment or user.
     */
    public final static PrintStream out = null;

    /**
     * The "standard" error output stream. This stream is already
     * open and ready to accept output data.
     */
    public final static PrintStream err = null;

     /**
     * Reassigns the "standard" output stream.
     */
    public static void setOut(PrintStream out) {
        checkIO();
        setOut0(out);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Redirect System.out.println() methods to write to text file instead of console&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;System.setOut(new PrintStream(new FileOutputStream(new File("log.txt"))));
System.out.println("printing in log text file using syso");&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;System.out.println()&lt;/p&gt;</description>
        <topic parent_id="core_java" id="basics_java" name="Basics" type="sub"/>
    </question>
    <question id="17">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://javarevisited.blogspot.in/2012/12/how-classloader-works-in-java.html"&gt;http://javarevisited.blogspot.in/2012/12/how-classloader-works-in-java.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.journaldev.com/349/java-interview-questions-understanding-and-extending-java-classloader"&gt;http://www.journaldev.com/349/java-interview-questions-understanding-and-extending-java-classloader&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://javapapers.com/core-java/java-class-loader/"&gt;http://javapapers.com/core-java/java-class-loader/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;ClassLoader in Java is a class which is used to load&amp;nbsp;&lt;a href="http://javarevisited.blogspot.ca/2012/05/10-points-about-class-file-in-java.html"&gt;class files in Java&lt;/a&gt;. Java code is compiled into class file by&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2012/12/javac-is-not-recognized-as-internal-or-external-command.html"&gt;javac&lt;/a&gt;&lt;a href="http://javarevisited.blogspot.sg/2012/12/javac-is-not-recognized-as-internal-or-external-command.html"&gt;&amp;nbsp;&lt;/a&gt;compiler and&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2011/12/jre-jvm-jdk-jit-in-java-programming.html"&gt;JVM&amp;nbsp;&lt;/a&gt;executes Java program, by executing byte codes written in class file. ClassLoader is responsible for loading class files from file system, network or any other source. There are three default class loader used in Java,&amp;nbsp;&lt;strong&gt;Bootstrap&lt;/strong&gt;&amp;nbsp;,&amp;nbsp;&lt;strong&gt;Extension&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;System or Application class loader&lt;/strong&gt;.&amp;nbsp;&lt;br /&gt;
&lt;br /&gt;
Class loaders are the part of the Java Runtime Environment that dynamically loads Java classes into the Java virtual machine. It is responsible for locating libraries, reading there content and loading the classes contained within the libraries.&lt;/p&gt;

&lt;p&gt;Java class loaders are used to load classes at runtime. ClassLoader in Java works on three principle:&amp;nbsp;delegation,&amp;nbsp;visibility&amp;nbsp;and&amp;nbsp;uniqueness. Delegation principle forward request of class loading to parent class loader and only loads the class, if parent is not able to find or load class. Visibility principle allows child class loader to see all the classes loaded by parent ClassLoader, but parent class loader can not see classes loaded by child. Uniqueness principle allows to load a class exactly once, which is basically achieved by delegation and ensures that child ClassLoader doesn&amp;#39;t reload the class already loaded by parent. Correct understanding of class loader is must to resolve issues like&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2011/06/noclassdeffounderror-exception-in.html"&gt;NoClassDefFoundError in Java&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2011/08/classnotfoundexception-in-java-example.html"&gt;java.lang.ClassNotFoundException&lt;/a&gt;, which are related to class loading.&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;What is ClassLoader in Java?&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="classloader" name="Class Loader" type="sub"/>
    </question>
    <question id="18">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.careerride.com/java-class-loaders-and-types.aspx"&gt;http://www.careerride.com/java-class-loaders-and-types.aspx&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.enterjava.com/2014/05/class-loaders-in-java.html"&gt;http://www.enterjava.com/2014/05/class-loaders-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;1. Bootstrap class loader&lt;br /&gt;&lt;br /&gt;2. Extensions class loader&lt;br /&gt;&lt;br /&gt;3. System class loader&lt;br /&gt;&lt;br /&gt;Bootstrap class loader loads the core java libraries. It is written in native code. The bootstrap class loader is responsible for loading key java classes like java.lang.Object and other runtime code into memory. The runtime classes are packaged inside jre/lib/rt.jar file.&amp;nbsp;Every class loader has a predefined location, from where they loads class files. Bootstrap ClassLoader is responsible for loading standard JDK class files from&amp;nbsp;rt.jar&amp;nbsp;and it is parent of all class loaders in Java.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Extensions class loader loads the code in the extension directories.&amp;nbsp;Extension ClassLoader delegates class loading request to its parent,&amp;nbsp;Bootstrap&amp;nbsp;and if unsuccessful, loads class form&amp;nbsp;jre/lib/ext&amp;nbsp;directory or any other directory pointed by&amp;nbsp;java.ext.dirs&amp;nbsp;system property. Extension ClassLoader in JVM is implemented by&amp;nbsp;&amp;nbsp;sun.misc.Launcher$ExtClassLoader.&amp;nbsp;&lt;/p&gt;&lt;p&gt;System or Application class loader and it is responsible for loading application specific classes from&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2011/01/how-classpath-work-in-java.html"&gt;CLASSPATH&lt;/a&gt;&amp;nbsp;environment variable,&amp;nbsp;-classpath&amp;nbsp;or&amp;nbsp;-cp&amp;nbsp;command line option,&amp;nbsp;Class-Path&amp;nbsp;attribute of Manifest file inside JAR. Application class loader is a child of Extension ClassLoader and its implemented by&amp;nbsp;sun.misc.Launcher$AppClassLoader&amp;nbsp;class. Also, except Bootstrap class loader, which is implemented in native language mostly in C,&amp;nbsp;&amp;nbsp;all&amp;nbsp; Java class loaders are implemented using&amp;nbsp;java.lang.ClassLoader.&lt;/p&gt;&lt;p&gt;In short here is the location from which Bootstrap, Extension and Application ClassLoader load Class files.&lt;/p&gt;&lt;p&gt;1) Bootstrap ClassLoader - JRE/lib/rt.jar&lt;/p&gt;&lt;p&gt;2) Extension ClassLoader - JRE/lib/ext or any directory denoted by&amp;nbsp;java.ext.dirs&lt;/p&gt;&lt;p&gt;3) Application ClassLoader -&amp;nbsp;CLASSPATH&amp;nbsp;environment variable,&amp;nbsp;-classpath&amp;nbsp;or&amp;nbsp;-cp&amp;nbsp;option, Class-Path attribute of Manifest inside&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2012/03/how-to-create-and-execute-jar-file-in.html"&gt;JAR file&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-HCTsr-j_ojw/USTOh1f8JwI/AAAAAAAAAjg/YegPspR5K48/s1600/java_classloader_hierarchy.PNG"&gt;&lt;img src="https://2.bp.blogspot.com/-HCTsr-j_ojw/USTOh1f8JwI/AAAAAAAAAjg/YegPspR5K48/s400/java_classloader_hierarchy.PNG" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;What are the types of class loaders?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="classloader" name="Class Loader" type="sub"/>
    </question>
    <question id="25">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.programcreek.com/2013/03/leetcode-lru-cache-java/"&gt;http://www.programcreek.com/2013/03/leetcode-lru-cache-java/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://chriswu.me/blog/a-lru-cache-in-10-lines-of-java/"&gt;http://chriswu.me/blog/a-lru-cache-in-10-lines-of-java/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="https://alaindefrance.wordpress.com/2014/10/05/lru-cache-implementation/"&gt;https://alaindefrance.wordpress.com/2014/10/05/lru-cache-implementation/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and set.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;get(key)&lt;/code&gt;&amp;nbsp;- Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.&lt;br /&gt;
&lt;code&gt;set(key, value)&lt;/code&gt;&amp;nbsp;- Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.&lt;/p&gt;

&lt;p&gt;Analysis&lt;/p&gt;

&lt;p&gt;The key to solve this problem is using a double linked list which enables us to quickly move nodes.&lt;/p&gt;

&lt;p&gt;&lt;img alt="LRU-Cache" src="http://www.programcreek.com/wp-content/uploads/2013/03/LRU-Cache-650x296.png" style="height:240px; margin:0px; width:500px" /&gt;&lt;/p&gt;

&lt;p&gt;The LRU cache is a hash table of keys and double linked nodes. The hash table makes the time of get() to be O(1). The list of double linked nodes make the nodes adding/removal operations O(1).&lt;/p&gt;

&lt;p&gt;Java Solution&lt;/p&gt;

&lt;p&gt;Define a double linked list node.&lt;/p&gt;

&lt;pre&gt;
&lt;strong&gt;class&lt;/strong&gt; Node{
    &lt;strong&gt;int&lt;/strong&gt; key;
    &lt;strong&gt;int&lt;/strong&gt; value;
    Node pre;
    Node next;
&amp;nbsp;
    &lt;strong&gt;public&lt;/strong&gt; Node(&lt;strong&gt;int&lt;/strong&gt; key, &lt;strong&gt;int&lt;/strong&gt; value){
        &lt;strong&gt;this&lt;/strong&gt;.key = key;
        &lt;strong&gt;this&lt;/strong&gt;.value = value;
    }
}&lt;/pre&gt;

&lt;pre&gt;
&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;class&lt;/strong&gt; LRUCache {
    &lt;strong&gt;int&lt;/strong&gt; capacity;
    HashMap&amp;lt;Integer, Node&amp;gt; map = &lt;strong&gt;new&lt;/strong&gt; HashMap&amp;lt;Integer, Node&amp;gt;();
    Node head=&lt;strong&gt;null&lt;/strong&gt;;
    Node end=&lt;strong&gt;null&lt;/strong&gt;;
&amp;nbsp;
    &lt;strong&gt;public&lt;/strong&gt; LRUCache(&lt;strong&gt;int&lt;/strong&gt; capacity) {
        &lt;strong&gt;this&lt;/strong&gt;.capacity = capacity;
    }
&amp;nbsp;
    &lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;int&lt;/strong&gt; get(&lt;strong&gt;int&lt;/strong&gt; key) {
        &lt;strong&gt;if&lt;/strong&gt;(map.containsKey(key)){
            Node n = map.get(key);
            remove(n);
            setHead(n);
            &lt;strong&gt;return&lt;/strong&gt; n.value;
        }
&amp;nbsp;
        &lt;strong&gt;return&lt;/strong&gt; -1;
    }
&amp;nbsp;
    &lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; remove(Node n){
        &lt;strong&gt;if&lt;/strong&gt;(n.pre!=&lt;strong&gt;null&lt;/strong&gt;){
            n.pre.next = n.next;
        }&lt;strong&gt;else&lt;/strong&gt;{
            head = n.next;
        }
&amp;nbsp;
        &lt;strong&gt;if&lt;/strong&gt;(n.next!=&lt;strong&gt;null&lt;/strong&gt;){
            n.next.pre = n.pre;
        }&lt;strong&gt;else&lt;/strong&gt;{
            end = n.pre;
        }
&amp;nbsp;
    }
&amp;nbsp;
    &lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; setHead(Node n){
        n.next = head;
        n.pre = &lt;strong&gt;null&lt;/strong&gt;;
&amp;nbsp;
        &lt;strong&gt;if&lt;/strong&gt;(head!=&lt;strong&gt;null&lt;/strong&gt;)
            head.pre = n;
&amp;nbsp;
        head = n;
&amp;nbsp;
        &lt;strong&gt;if&lt;/strong&gt;(end ==&lt;strong&gt;null&lt;/strong&gt;)
            end = head;
    }
&amp;nbsp;
    &lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; set(&lt;strong&gt;int&lt;/strong&gt; key, &lt;strong&gt;int&lt;/strong&gt; value) {
        &lt;strong&gt;if&lt;/strong&gt;(map.containsKey(key)){
            Node old = map.get(key);
            old.value = value;
            remove(old);
            setHead(old);
        }&lt;strong&gt;else&lt;/strong&gt;{
            Node created = &lt;strong&gt;new&lt;/strong&gt; Node(key, value);
            &lt;strong&gt;if&lt;/strong&gt;(map.size()&amp;gt;=capacity){
                map.remove(end.key);
                remove(end);
                setHead(created);
&amp;nbsp;
            }&lt;strong&gt;else&lt;/strong&gt;{
                setHead(created);
            }    
&amp;nbsp;
            map.put(key, created);
        }
    }
}&lt;/pre&gt;
</answer>
        <description>&lt;p&gt;How to implement Least Recently Cache (LRU) in java?&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="26">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.javacodegeeks.com/2014/03/how-hashmap-works-in-java.html"&gt;https://www.javacodegeeks.com/2014/03/how-hashmap-works-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.dineshonjava.com/2013/06/how-does-java-hashmap-work-internally.html#.VvrOjCL43K0"&gt;http://www.dineshonjava.com/2013/06/how-does-java-hashmap-work-internally.html#.VvrOjCL43K0&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://netjs.blogspot.in/2015/05/how-hashmap-internally-works-in-java.html"&gt;http://netjs.blogspot.in/2015/05/how-hashmap-internally-works-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javahungry.blogspot.com/2013/08/hashing-how-hash-map-works-in-java-or.html"&gt;http://javahungry.blogspot.com/2013/08/hashing-how-hash-map-works-in-java-or.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/core-java/collections/how-hashmap-works-in-java/"&gt;http://howtodoinjava.com/core-java/collections/how-hashmap-works-in-java/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;ul&gt;&lt;li&gt;&lt;strong&gt;HashMap&lt;/strong&gt;&amp;nbsp;works on the principal of hashing.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Map.Entry interface&lt;/strong&gt;&amp;nbsp;- This interface gives a map entry (key-value pair). HashMap in Java stores both key and value object, in bucket, as an object of Entry class which implements this nested interface Map.Entry.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;hashCode()&lt;/strong&gt;&amp;nbsp;-HashMap provides put(key, value) for&amp;nbsp;&lt;strong&gt;storing&lt;/strong&gt;&amp;nbsp;and get(key) method for&lt;strong&gt;retrieving&lt;/strong&gt;&amp;nbsp;Values from HashMap. When put() method is used to store (Key, Value) pair, HashMap implementation&amp;nbsp;&lt;strong&gt;calls hashcode&lt;/strong&gt;&amp;nbsp;on Key object to calculate a hash that is used to find a bucket where Entry object will be stored. When get() method is used to retrieve value, again key object is used to calculate a hash which is used then to find a bucket where that particular key is stored.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;equals()&lt;/strong&gt;&amp;nbsp;- equals() method is used to&amp;nbsp;&lt;strong&gt;compare objects for equality&lt;/strong&gt;. In case of HashMap key object is used for comparison, also using equals() method Map knows how to handle&lt;strong&gt;hashing collision&lt;/strong&gt;&amp;nbsp;(hashing collision means more than one key having the same hash value, thus assigned to the same bucket. In that case objects are stored in a linked list, refer&lt;a href="http://netjs.blogspot.in/2015/05/how-hashmap-internally-works-in-java.html#hashmap"&gt;figure&lt;/a&gt;&amp;nbsp;for more clarity.&amp;nbsp;&lt;br /&gt;Where hashCode method helps in finding the bucket where that key is stored, equals method helps in finding the right key as there may be more than one key-value pair stored in a single bucket.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Now From above diagram, you can observe following points&lt;/p&gt;&lt;ol&gt;&lt;li&gt;There is an Entry[] array called table which has size 16.&lt;/li&gt;&lt;li&gt;This table stores Entry class&amp;rsquo;s object. HashMap class has a inner class called Entry.This Entry have key value as instance variable. Lets see structure of entry class Entry Structure.&lt;pre&gt;&lt;code class="language-java"&gt;static class Entry implements Map.Entry
{
        final K key;
        V value;
        Entry next;
        final int hash;
        ...//More code goes here
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;Whenever we try to put any key value pair in hashmap, Entry class object is instantiated for key value and that object will be stored in above mentioned Entry[](table). Now you must be wondering, where will above created Enrty object get stored(exact position in table). The answer&amp;nbsp; is, hash code is calculated for a key by calling Hascode() method. This hashcode is used to calculate index for above Entry[] table.&lt;/li&gt;&lt;li&gt;Now, If you see at array index 10 in above diagram, It has an Entry object named HashMap$Entry.&lt;/li&gt;&lt;li&gt;We have put 4 key-values in hashmap but it seems to have only 2!!!!This is because if two objects have same hashcode, they will be stored at same index. Now question arises how? It stores objects in a form of LinkedList(logically)&lt;br /&gt;.&lt;/li&gt;&lt;/ol&gt;</answer>
        <description>&lt;p&gt;how HashMap works internally in java?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="28">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.programcreek.com/2009/02/the-interface-and-class-hierarchy-for-collections/"&gt;http://www.programcreek.com/2009/02/the-interface-and-class-hierarchy-for-collections/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://javaconceptoftheday.com/collection-framework-class-hierarchy/"&gt;http://javaconceptoftheday.com/collection-framework-class-hierarchy/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://javahungry.blogspot.com/2015/05/50-java-collections-interview-questions-and-answers.html"&gt;http://javahungry.blogspot.com/2015/05/50-java-collections-interview-questions-and-answers.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-ifC30f-ZZ7M/VU7wWRwqo3I/AAAAAAAAAmQ/b1CIhOP5NU8/s1600/Java_collection_framework.jpg"&gt;&lt;img alt="Java Collection Interfaces or Hierarchy" src="http://1.bp.blogspot.com/-ifC30f-ZZ7M/VU7wWRwqo3I/AAAAAAAAAmQ/b1CIhOP5NU8/s640/Java_collection_framework.jpg" style="border-style:initial; border-width:0px; height:auto; margin:0px; width:auto" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="http://www.programcreek.com/wp-content/uploads/2009/02/java-collection-hierarchy.jpeg" style="height:385px; margin:0px; width:650px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="http://www.programcreek.com/wp-content/uploads/2009/02/MapClassHierarchy-600x354.jpg" style="height:324px; margin:0px; width:500px" /&gt;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Explain the collection framework&amp;nbsp;hierarchy.&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="71">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/04/list-hierarchy-in-java-detailed.html"&gt;http://www.javamadesoeasy.com/2015/04/list-hierarchy-in-java-detailed.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;img src="https://lh6.googleusercontent.com/F-qOwpBAz6xEQfomIKwGLpl-H8kG8FIFUyA6viKdkmJ0we0vvJJSdPzXzFmn22TmGKtE02hI4xOZMg9kIluVsRLHD79so7NSyP_K_5x8Sy78NWvelnCdJ4-MtQbCwiF_4YgtQO4" /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;List hierarchy&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="72">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/04/set-hierarchy-in-java-detailed-hashset.html"&gt;http://www.javamadesoeasy.com/2015/04/set-hierarchy-in-java-detailed-hashset.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;img src="https://lh6.googleusercontent.com/MgTtXFjGq7FN6LobfzR_nn6tuNpdOgwxs3nkTGF5QsPrhNSsFOwvajPXXfK1F5lhaRhxY_Vatf4znLVRYzsnFl97qH_Ufr6vLOtH_iyMN35uQL-ibbjJX_5BtOMEK5OIIS8TxiM" /&gt;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Set hierarchy&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="73">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/04/map-hierarchy-in-java-detailed-hashmap.html"&gt;http://www.javamadesoeasy.com/2015/04/map-hierarchy-in-java-detailed-hashmap.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;img src="https://lh4.googleusercontent.com/io6wTiFSn668hT9Y5dbvMy2wHR6T5z0aE0qUwA4idlgBeNLfQgMBRC6W1HJHyHQTzZI0PqzgCHbYiBO5O5OQapfZ5VygCSWyoWwarithx31i2wHYxyvrFR9FkZ0t4AesogcEegg" /&gt;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Map hierarchy&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="144">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javahungry.blogspot.com/2013/08/how-sets-are-implemented-internally-in.html"&gt;http://javahungry.blogspot.com/2013/08/how-sets-are-implemented-internally-in.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javaconceptoftheday.com/how-hashset-works-internally-in-java/"&gt;http://javaconceptoftheday.com/how-hashset-works-internally-in-java/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;HashSet&lt;/strong&gt;&amp;nbsp;uses HashMap internally to store&amp;nbsp;it&amp;rsquo;s objects. Whenever you create a HashSet object, one&amp;nbsp;&lt;strong&gt;HashMap&lt;/strong&gt;&amp;nbsp;object associated with it is&amp;nbsp;also created. This HashMap object is used to store the elements you enter in the HashSet. The elements you add into HashSet are stored as&amp;nbsp;&lt;strong&gt;keys&lt;/strong&gt;&amp;nbsp;of this HashMap object. The value associated with&amp;nbsp;those keys will be a&amp;nbsp;&lt;strong&gt;constant&lt;/strong&gt;.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;public class HashSet&amp;lt;E&amp;gt;
extends AbstractSet&amp;lt;E&amp;gt;
implements Set&amp;lt;E&amp;gt;, Cloneable, java.io.Serializable

{
    private transient HashMap&amp;lt;E,Object&amp;gt; map;
    
    // Dummy value to associate with an Object in the backing Map
    
    private static final Object PRESENT = new Object();
    
    
    
    public HashSet() {
        map = new HashMap&amp;lt;&amp;gt;();
    }
    
    // SOME CODE ,i.e Other methods in Hash Set
    
    
    public boolean add(E e) {
        return map.put(e, PRESENT)==null;
    }
    
    
    
    // SOME CODE ,i.e Other methods in Hash Set
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The main point to notice in above code is that put (key,value) will return&lt;br /&gt;&lt;br /&gt;1. &amp;nbsp;null , if key is unique and added to the map&lt;br /&gt;2. &amp;nbsp;Old Value of the key , if key is duplicate&lt;br /&gt;&lt;br /&gt;So , in HashSet add() method , &amp;nbsp;we check the return value of map.put(key,value) method with null value&amp;nbsp;&lt;br /&gt;i.e.&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;public boolean add(E e) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return map.put(e, PRESENT)==null;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;&lt;br /&gt;So , if map.put(key,value) returns null ,then&lt;br /&gt;map.put(e, PRESENT)==null &amp;nbsp; &amp;nbsp; &amp;nbsp;will return true and element is added to the HashSet.&lt;br /&gt;&lt;br /&gt;So , if map.put(key,value) returns old value of the key ,then&lt;br /&gt;map.put(e, PRESENT)==null &amp;nbsp; &amp;nbsp; &amp;nbsp;will return false and element is &amp;nbsp;not added to the HashSet&lt;/p&gt;</answer>
        <description>&lt;p&gt;How HashSet works internally&lt;/p&gt;</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="145">
        <references></references>
        <answer></answer>
        <description>&lt;p&gt;Different types of Queue and its methods&lt;/p&gt;</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="167">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.programcreek.com/2013/09/top-9-questions-for-java-map/"&gt;http://www.programcreek.com/2013/09/top-9-questions-for-java-map/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;How to iterate over a maps&amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;for(Entry entry: map.entrySet()) {
  // get key
  K key = entry.getKey();
  // get value
  V value = entry.getValue();
}&lt;/pre&gt;&lt;pre&gt;Iterator itr = map.entrySet().iterator();
while(itr.hasNext()) {
  Entry entry = itr.next();
  // get key
  K key = entry.getKey();
  // get value
  V value = entry.getValue();
}&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Sort a Map on the keys&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;pre&gt;List list = new ArrayList(map.entrySet());
Collections.sort(list, new Comparator() {
&amp;nbsp;
  @Override
  public int compare(Entry e1, Entry e2) {
    return e1.getKey().compareTo(e2.getKey());
  }
&amp;nbsp;
});&lt;/pre&gt;&lt;pre&gt;SortedMap sortedMap = new TreeMap(new Comparator() {
&amp;nbsp;
  @Override
  public int compare(K k1, K k2) {
    return k1.compareTo(k2);
  }
&amp;nbsp;
});
sortedMap.putAll(map);&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Sort a Map on the values&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;List list = new ArrayList(map.entrySet());
Collections.sort(list, new Comparator() {
&amp;nbsp;
  @Override
  public int compare(Entry e1, Entry e2) {
    return e1.getValue().compareTo(e2.getValue());
  }
&amp;nbsp;
});&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Initialize a static/immutable Map&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;public class Test {
&amp;nbsp;
  private static final Map map;
  static {
    map = new HashMap();
    map.put(1, &amp;quot;one&amp;quot;);
    map.put(2, &amp;quot;two&amp;quot;);
  }
}
public class Test {
&amp;nbsp;
  private static final Map map;
  static {
    Map aMap = new HashMap();
    aMap.put(1, &amp;quot;one&amp;quot;);
    aMap.put(2, &amp;quot;two&amp;quot;);
    map = Collections.unmodifiableMap(aMap);
  }
}&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;A Map with reverse view/lookup&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Sometimes, we need a set of key-key pairs, which means the map&amp;#39;s values are unique as well as keys (one-to-one map). This constraint enables to create an &amp;quot;inverse lookup/view&amp;quot; of a map. So we can look up a key by its value. Such data structure is called&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Bidirectional_map"&gt;&lt;strong&gt;bidirectional map&lt;/strong&gt;&lt;/a&gt;, which unfortunately is not supported by JDK.&lt;/p&gt;&lt;p&gt;Both Apache Common Collections and Guava provide implementation of bidirectional map, called&amp;nbsp;&lt;a href="http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/BidiMap.html"&gt;&lt;strong&gt;BidiMap&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://guava-libraries.googlecode.com/svn/tags/release09/javadoc/com/google/common/collect/BiMap.html"&gt;&lt;strong&gt;BiMap&lt;/strong&gt;&lt;/a&gt;, respectively. Both enforce the restriction that there is a 1:1 relation between keys and values.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Questions on Maps&lt;/p&gt;</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="174">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.enterjava.com/2014/05/internal-working-of-treemap.html"&gt;http://www.enterjava.com/2014/05/internal-working-of-treemap.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javahungry.blogspot.com/2014/06/how-treemap-works-ten-treemap-java-interview-questions.html"&gt;http://javahungry.blogspot.com/2014/06/how-treemap-works-ten-treemap-java-interview-questions.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://self-learning-java-tutorial.blogspot.in/2015/12/how-treemap-works-in-java.html"&gt;http://self-learning-java-tutorial.blogspot.in/2015/12/how-treemap-works-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;How TreeMap works internally&lt;/p&gt;</description>
        <topic parent_id="core_java" id="collections" name="Collections" type="sub"/>
    </question>
    <question id="51">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="https://sourcemaking.com/design_patterns"&gt;https://sourcemaking.com/design_patterns&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/design_pattern/index.htm"&gt;http://www.tutorialspoint.com/design_pattern/index.htm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.javatpoint.com/design-patterns-in-java"&gt;http://www.javatpoint.com/design-patterns-in-java&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;In software engineering, a&amp;nbsp;&lt;strong&gt;design pattern&lt;/strong&gt;&amp;nbsp;is a general repeatable solution to a commonly occurring problem in software design. A design pattern isn&amp;#39;t a finished design that can be transformed directly into code. It is a description or template for how to solve a problem that can be used in many different situations.&lt;/p&gt;

&lt;p&gt;Design patterns represent the best practices used by experienced object-oriented software developers. Design patterns are solutions to general problems that software developers faced during software development. These solutions were obtained by trial and error by numerous software developers over quite a substantial period of time.&lt;/p&gt;

&lt;h2&gt;1.Creational Design Pattern&lt;/h2&gt;

&lt;ol&gt;
	&lt;li&gt;Factory Pattern&lt;/li&gt;
	&lt;li&gt;Abstract Factory Pattern&lt;/li&gt;
	&lt;li&gt;Singleton Pattern&lt;/li&gt;
	&lt;li&gt;Prototype Pattern&lt;/li&gt;
	&lt;li&gt;Builder Pattern.&lt;/li&gt;
	&lt;li&gt;Object Pool&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;2. Structural Design Pattern&lt;/h2&gt;

&lt;ol&gt;
	&lt;li&gt;Adapter Pattern&lt;/li&gt;
	&lt;li&gt;Bridge Pattern&lt;/li&gt;
	&lt;li&gt;Composite Pattern&lt;/li&gt;
	&lt;li&gt;Decorator Pattern&lt;/li&gt;
	&lt;li&gt;Facade Pattern&lt;/li&gt;
	&lt;li&gt;Flyweight Pattern&lt;/li&gt;
	&lt;li&gt;Proxy Pattern&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;3. Behavioral Design Pattern&lt;/h2&gt;

&lt;ol&gt;
	&lt;li&gt;Chain Of Responsibility Pattern&lt;/li&gt;
	&lt;li&gt;Command Pattern&lt;/li&gt;
	&lt;li&gt;Interpreter Pattern&lt;/li&gt;
	&lt;li&gt;Iterator Pattern&lt;/li&gt;
	&lt;li&gt;Mediator Pattern&lt;/li&gt;
	&lt;li&gt;Memento Pattern&lt;/li&gt;
	&lt;li&gt;Observer Pattern&lt;/li&gt;
	&lt;li&gt;State Pattern&lt;/li&gt;
	&lt;li&gt;Strategy Pattern&lt;/li&gt;
	&lt;li&gt;Template Pattern&lt;/li&gt;
	&lt;li&gt;Visitor Pattern&lt;/li&gt;
&lt;/ol&gt;
</answer>
        <description>&lt;p&gt;Explain design patterns&lt;/p&gt;
</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="52">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/design_pattern/factory_pattern.htm"&gt;http://www.tutorialspoint.com/design_pattern/factory_pattern.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1392/factory-design-pattern-in-java"&gt;http://www.journaldev.com/1392/factory-design-pattern-in-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.oodesign.com/factory-pattern.html"&gt;http://www.oodesign.com/factory-pattern.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;In Factory pattern, we create object without exposing the creation logic to the client and refer to newly created object using a common interface.&lt;/p&gt;&lt;p&gt;public class FactoryDemo {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static void main(String[] args) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Car hatchbackCar = CarFactory.getCar(&amp;quot;HatchBack&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Car sedanCar = CarFactory.getCar(&amp;quot;Sedan&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;hatchbackCar.display();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sedanCar.display();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;abstract class Car {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;abstract void display();&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class HatchBack extends Car {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;void display() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;Car type is HatchBack&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class Sedan extends Car {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;void display() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;Car type is Sedan&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class CarFactory {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static Car getCar(String type) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;switch (type) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;HatchBack&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new HatchBack();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;Sedan&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new Sedan();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;default:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return null;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Factory Pattern : Creational&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="53">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/design_pattern/abstract_factory_pattern.htm"&gt;http://www.tutorialspoint.com/design_pattern/abstract_factory_pattern.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javapapers.com/design-patterns/abstract-factory-pattern/"&gt;http://javapapers.com/design-patterns/abstract-factory-pattern/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.&lt;/p&gt;&lt;p&gt;In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes. Each generated factory can give the objects as per the Factory pattern.&lt;/p&gt;&lt;p&gt;abstract class VehicleFactory{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static VehicleFactory getVehicleFactory(String vehicleType){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;switch(vehicleType){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;Car&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new CarFactory();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;Bike&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new BikeFactory();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;default:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return null;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;abstract class Car extends Vehicle{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;abstract void display();&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class HatchBack extends Car {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;void display() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;Car type is HatchBack&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class Sedan extends Car {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;void display() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;Car type is Sedan&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class CarFactory extends VehicleFactory {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static Car getCar(String type) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;switch (type) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;HatchBack&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new HatchBack();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;Sedan&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new Sedan();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;default:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return null;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class BikeFactory extends VehicleFactory {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static Bike getBike(String type) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;switch (type) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;Commute&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new CommuterBike();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;case &amp;quot;Sports&amp;quot;:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new SportsBike();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;default:&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return null;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;abstract class Vehicle{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;}&lt;br /&gt;abstract class Bike extends Vehicle{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public void display() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;I am just a protype of Bike&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class CommuterBike extends Bike{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public void display(){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;I am Commuter Bike&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class SportsBike extends Bike{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public void display(){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;I am Sports Bike&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Abstract Factory pattern :&amp;nbsp;Creational&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="62">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1440/prototype-pattern-in-java"&gt;http://www.journaldev.com/1440/prototype-pattern-in-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/design_pattern/prototype_pattern.htm"&gt;http://www.tutorialspoint.com/design_pattern/prototype_pattern.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javapapers.com/design-patterns/prototype-pattern/"&gt;http://javapapers.com/design-patterns/prototype-pattern/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.oodesign.com/prototype-pattern.html"&gt;http://www.oodesign.com/prototype-pattern.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Prototype pattern&amp;nbsp;is one of the Creational Design pattern, so it provides a mechanism of object creation. Prototype pattern is used when the Object creation is a costly affair and requires a lot of time and resources and you have a similar object already existing. So this pattern provides a mechanism to copy the original object to a new object and then modify it according to our needs. This pattern uses java cloning to copy the object.&lt;/p&gt;&lt;p&gt;Prototype pattern refers to creating duplicate object while keeping performance in mind. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.&lt;/p&gt;&lt;p&gt;This pattern involves implementing a prototype interface which tells to create a clone of the current object. This pattern is used when creation of object directly is costly. For example, an object is to be created after a costly database operation. We can cache the object, returns its clone on next request and update the database as and when needed thus reducing database calls.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Prototype pattern&amp;nbsp;:&amp;nbsp;Creational&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="63">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1425/builder-design-pattern-in-java"&gt;http://www.journaldev.com/1425/builder-design-pattern-in-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2012/06/builder-design-pattern-in-java-example.html"&gt;http://javarevisited.blogspot.com/2012/06/builder-design-pattern-in-java-example.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/design-patterns/creational/builder-pattern-in-java/"&gt;http://howtodoinjava.com/design-patterns/creational/builder-pattern-in-java/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/design_pattern/builder_pattern.htm"&gt;http://www.tutorialspoint.com/design_pattern/builder_pattern.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Builder design pattern is a&amp;nbsp;creational design pattern&amp;nbsp;like&amp;nbsp;&lt;a href="http://www.journaldev.com/1392/factory-design-pattern-in-java"&gt;Factory Pattern&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href="http://www.journaldev.com/1418/abstract-factory-design-pattern-in-java"&gt;Abstract Factory Pattern&lt;/a&gt;. This pattern was introduced to solve some of the problems with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.&lt;/p&gt;&lt;p&gt;There are three major issues with Factory and Abstract Factory design patterns when the Object contains a lot of attributes.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Too Many arguments to pass from client program to the Factory class that can be error prone because most of the time, the type of arguments are same and from client side its hard to maintain the order of the argument.&lt;/li&gt;&lt;li&gt;Some of the parameters might be optional but in Factory pattern, we are forced to send all the parameters and optional parameters need to send as NULL.&lt;/li&gt;&lt;li&gt;If the object is heavy and its creation is complex, then all that complexity will be part of Factory classes that is confusing.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;All implementations of&amp;nbsp;&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Appendable.html"&gt;java.lang.Appendable&lt;/a&gt;&amp;nbsp;are infact good example of use of Builder pattern in java. e.g.&lt;/p&gt;&lt;p&gt;&lt;a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html#append%28java.lang.CharSequence%29"&gt;java.lang.StringBuilder#append()&lt;/a&gt;&amp;nbsp;[Unsynchronized class]&lt;/p&gt;&lt;p&gt;&lt;a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuffer.html#append%28java.lang.CharSequence%29"&gt;java.lang.StringBuffer#append()&lt;/a&gt;&amp;nbsp;[Synchronized class]&lt;/p&gt;&lt;p&gt;&lt;a href="http://docs.oracle.com/javase/6/docs/api/java/nio/ByteBuffer.html#put%28java.nio.ByteBuffer%29"&gt;java.nio.ByteBuffer#put()&lt;/a&gt;&amp;nbsp;(also on CharBuffer, ShortBuffer, IntBuffer, LongBuffer, FloatBuffer and DoubleBuffer)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;public class BuilderDemo {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static void main(String[] args) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;User user1 = new User().firstName(&amp;quot;ajay&amp;quot;).lastName(&amp;quot;devgn&amp;quot;).age(47).address(&amp;quot;Mumbai&amp;quot;).build();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(user1);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;User user2 = new User().firstName(&amp;quot;vijay&amp;quot;).address(&amp;quot;Bengaluru&amp;quot;).build();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(user2);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;class User{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;private String firstName;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;private String lastName;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;private int age;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;private String address;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public User firstName(String firstName){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.firstName = firstName;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return this;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public User build() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;validateAllFields();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return this;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;private void validateAllFields() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//validate all fields here&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public User lastName(String lastName){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.lastName = lastName;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return this;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public User age(int age){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.age = age;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return this;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public User address(String address){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.address = address;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return this;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public String toString() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return &amp;quot;User [firstName=&amp;quot; + firstName + &amp;quot;, lastName=&amp;quot; + lastName + &amp;quot;, age=&amp;quot; + age + &amp;quot;, address=&amp;quot; + address&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;+ &amp;quot;]&amp;quot;;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Builder pattern&amp;nbsp;:&amp;nbsp;Creational&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="64">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://dzone.com/articles/creating-object-pool-java"&gt;https://dzone.com/articles/creating-object-pool-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.javatpoint.com/object-pool-pattern"&gt;http://www.javatpoint.com/object-pool-pattern&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.oodesign.com/object-pool-pattern.html"&gt;http://www.oodesign.com/object-pool-pattern.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;DB connection pool&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href="http://geekexplains.blogspot.in/2008/06/what-is-connection-pooling-why-do-we.html"&gt;http://geekexplains.blogspot.in/2008/06/what-is-connection-pooling-why-do-we.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/database-connection-pooling-with-java"&gt;https://devcenter.heroku.com/articles/database-connection-pooling-with-java&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;JVM performance has been multiplied manifold and so object creation is no longer considered as expensive as it was done earlier. But there are few objects, for which creation of new object still seems to be slight costly as they are not considered as lightweight objects. e.g.: database connection objects, parser objects, thread creation etc. In any application we need to create multiple such objects. Since creation of such objects is costly, it&amp;rsquo;s a sure hit for the performance of any application. It would be great if we can reuse the same object again and again.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Object Pools&lt;/strong&gt;&amp;nbsp;are used for this purpose. Basically, object pools can be visualized as a storage where we can store such objects so that stored objects can be used and reused dynamically. Object pools also controls the life-cycle of pooled objects.&lt;/p&gt;&lt;p&gt;As we understood the requirement, let&amp;rsquo;s come to real stuff. Fortunately, there are various open source object pooling frameworks available, so we do not need to reinvent the wheel.&lt;/p&gt;&lt;p&gt;The basic thing we need to create is-&lt;/p&gt;&lt;p&gt;&amp;nbsp;1. A pool to store heavyweight objects (pooled objects).&lt;/p&gt;&lt;p&gt;&amp;nbsp;2. A simple interface, so that client can -&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; a.) Borrow pooled object for its use.&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; b.) Return the borrowed object after its use.&lt;/p&gt;&lt;p&gt;Best example is Database connection pool&lt;/p&gt;</answer>
        <description>&lt;p&gt;Object pool pattern&amp;nbsp;:&amp;nbsp;Creational&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="65">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://important-java-interview-questions.blogspot.in/2013/05/singleton-class-in-java.html"&gt;http://important-java-interview-questions.blogspot.in/2013/05/singleton-class-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples"&gt;http://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;&lt;code class="language-java"&gt;public class SingletonDemp {
	public static void main(String[] args) throws IOException, ClassNotFoundException {
		SingletonStatic ssOne = SingletonStatic.getInstance();
		FileOutputStream fos = new FileOutputStream(new File("singleton.ser"));
		ObjectOutputStream oos = new ObjectOutputStream(fos);
		oos.writeObject(ssOne);
		oos.close();
		FileInputStream fis = new FileInputStream("singleton.ser");
		ObjectInputStream ois = new ObjectInputStream(fis);
		SingletonStatic ssTwo = (SingletonStatic) ois.readObject();
		ois.close();
		System.out.println(ssOne.hashCode());
		System.out.println(ssTwo.hashCode());
	}
}

class SingletonDC {
	private static SingletonDC singletonDC = null;

	private SingletonDC() {} // private constructor

	public static SingletonDC getInstance() {
		if (singletonDC == null) {
			synchronized (SingletonDC.class) {
				if (singletonDC == null) { // Double Checking
					singletonDC = new SingletonDC();
				}
			}
		}
		return singletonDC;
	}
}

class SingletonStatic implements Serializable {

	private static final long serialVersionUID = 5155548653166421341L;

	private SingletonStatic() {
	}

	private static class SingletonHolder {
		public static final SingletonStatic INSTANCE = new SingletonStatic();
	}

	public static SingletonStatic getInstance() {
		return SingletonHolder.INSTANCE;
	}

	Object readResolve() { // protect from creating multiple instances using serialization
		return getInstance();
	}
}

enum SingletonEnum {
	INSTANCE;
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Singleton pattern&amp;nbsp;:&amp;nbsp;Creational&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="66">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1617/chain-of-responsibility-design-pattern-in-java-example-tutorial"&gt;http://www.journaldev.com/1617/chain-of-responsibility-design-pattern-in-java-example-tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/design-patterns/behavioral/chain-of-responsibility-design-pattern/"&gt;http://howtodoinjava.com/design-patterns/behavioral/chain-of-responsibility-design-pattern/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://dzone.com/articles/design-patterns-uncovered-chain-of-responsibility"&gt;https://dzone.com/articles/design-patterns-uncovered-chain-of-responsibility&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javapapers.com/design-patterns/chain-of-responsibility-design-pattern/"&gt;http://javapapers.com/design-patterns/chain-of-responsibility-design-pattern/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Chain of responsibility&amp;nbsp;design pattern is one of the&amp;nbsp;behavioral design pattern. Chain of responsibility pattern is used to achieve&amp;nbsp;lose coupling&amp;nbsp;in software design where a request from client is passed to a chain of objects to process them. Then the object in the chain will decide themselves who will be processing the request and whether the request is required to be sent to the next object in the chain or not.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;public class ChainOfResponsibilityDemo {

    public static void main(String[] args) {
        // configure Chain of Responsibility
        Chain c1 = new NegativeProcessor();
        Chain c2 = new ZeroProcessor();
        Chain c3 = new PositiveProcessor();
        c1.setNext(c2);
        c2.setNext(c3);

        // calling chain of responsibility
        c1.process(99);
        c1.process(-30);
        c1.process(0);
        c1.process(100);
    }

}

interface Chain {

    public abstract void setNext(Chain nextInChain);

    public abstract void process(int number);
}

class NegativeProcessor implements Chain {

    private Chain nextInChain;

    public void setNext(Chain c) {
        nextInChain = c;
    }

    public void process(int number) {
        if (number &amp;lt; 0) {
            System.out.println("NegativeProcessor : " + number);
        } else {
            nextInChain.process(number);
        }
    }
}

class ZeroProcessor implements Chain {

    private Chain nextInChain;

    public void setNext(Chain c) {
        nextInChain = c;
    }

    public void process(int number) {
        if (number == 0) {
            System.out.println("ZeroProcessor : " + number);
        } else {
            nextInChain.process(number);
        }
    }
}

class PositiveProcessor implements Chain {

    private Chain nextInChain;

    public void setNext(Chain c) {
        nextInChain = c;
    }

    public void process(int number) {
        if (number &amp;gt; 0) {
            System.out.println("PositiveProcessor  : " + number);
        } else {
            nextInChain.process(number);
        }
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Chain of responsibility pattern :&amp;nbsp;Behavioral&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="67">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1624/command-design-pattern"&gt;http://www.journaldev.com/1624/command-design-pattern&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Command pattern :&amp;nbsp;Behavioral&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="68">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://dzone.com/articles/design-patterns-mediator"&gt;https://dzone.com/articles/design-patterns-mediator&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.codeproject.com/Articles/186187/Mediator-Design-Pattern"&gt;http://www.codeproject.com/Articles/186187/Mediator-Design-Pattern&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1730/mediator-design-pattern-java"&gt;http://www.journaldev.com/1730/mediator-design-pattern-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javapapers.com/design-patterns/mediator-design-pattern/"&gt;http://javapapers.com/design-patterns/mediator-design-pattern/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;&lt;code class="language-java"&gt;package com.learning.designpatterns.behavioral;

import java.util.ArrayList;

public class MediatorDemo {

	public static void main(String[] args) {
		ApplicationMediator mediator = new ApplicationMediator();
	    DesktopColleague desktop = new DesktopColleague(mediator);
	    MobileColleague mobile = new MobileColleague(mediator);
	    mediator.addColleague(desktop);
	    mediator.addColleague(mobile);
	    desktop.send("Hello World");
	    mobile.send("Hello");
	}
}

interface Mediator {
	  public void send(String message, Colleague colleague);
	}

abstract class Colleague{
	  private Mediator mediator;
	  public Colleague(Mediator m) {
	    mediator = m;
	  }
	  //send a message via the mediator
	  public void send(String message) {
	    mediator.send(message, this);
	  }
	  //get access to the mediator
	  public Mediator getMediator() {return mediator;}
	  public abstract void receive(String message);
	}

class ApplicationMediator implements Mediator {
	  private ArrayList&amp;lt;Colleague&amp;gt; colleagues;
	  public ApplicationMediator() {
	    colleagues = new ArrayList&amp;lt;Colleague&amp;gt;();
	  }
	  public void addColleague(Colleague colleague) {
	    colleagues.add(colleague);
	  }
	  public void send(String message, Colleague originator) {
	    //let all other screens know that this screen has changed
	    for(Colleague colleague: colleagues) {
	      //don't tell ourselves
	      if(colleague != originator) {
	    	  colleague.receive(message);
	      }
	    }
	  }
	}

class DesktopColleague extends Colleague {
	  public DesktopColleague(Mediator m) {
		super(m);
		
	}

	public void receive(String message) {
	    System.out.println("Colleague Received: " + message);
	  }
	}

class MobileColleague extends Colleague {
	  public MobileColleague(Mediator m) {
		super(m);
	}

	public void receive(String message) {
	    System.out.println("Mobile Received: " + message);
	  }
	}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Mediator pattern :&amp;nbsp;Behavioral&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="162">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1754/strategy-design-pattern-in-java-example-tutorial"&gt;http://www.journaldev.com/1754/strategy-design-pattern-in-java-example-tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/design_pattern/strategy_pattern.htm"&gt;http://www.tutorialspoint.com/design_pattern/strategy_pattern.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://stacktips.com/tutorials/design-patterns/strategy-design-pattern-in-java"&gt;http://stacktips.com/tutorials/design-patterns/strategy-design-pattern-in-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.oodesign.com/strategy-pattern.html"&gt;http://www.oodesign.com/strategy-pattern.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;In Strategy pattern, we create objects which represent various strategies and a context object whose behavior varies as per its strategy object. The strategy object changes the executing algorithm of the context object.&amp;nbsp;Strategy pattern is used when we have multiple algorithm for a specific task and client decides the actual implementation to be used at runtime.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Collections.sort()&lt;/li&gt;&lt;li&gt;Arrays.sort()&lt;/li&gt;&lt;li&gt;A data compression software like WinZip, provides different algorithms to perform gip, gzip, tar, jar, 7zip format. At runtime client chooses which type of algorithm to be performed.&lt;/li&gt;&lt;li&gt;Email client like outlook, supports various email types such as plain text and HTML type. It allow client to choose the email format.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Strategy Pattern : Behavioral&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="163">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1739/observer-design-pattern-in-java"&gt;http://www.journaldev.com/1739/observer-design-pattern-in-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://javarevisited.blogspot.com/2011/12/observer-design-pattern-java-example.html"&gt;https://javarevisited.blogspot.com/2011/12/observer-design-pattern-java-example.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;&lt;code class="language-java"&gt;public class ObserverDemo {
	public static void main(String[] args) {
		Topic topic = new Topic("topic1");
		Observer obs1 = new Subscriber("sub1");
		Observer obs2 = new Subscriber("sub2");
		Observer obs3 = new Subscriber("sub3");
		topic.registerObserver(obs1);
		topic.registerObserver(obs2);
		topic.registerObserver(obs3);
		topic.setValue("VIRAT KOHLI");
	}
}

interface Subject {
	void registerObserver(Observer obs);
	void removeObserver(Observer obs);
	void notifyObservers();
}

interface Observer {
	void update(String value);
}

class Topic implements Subject {
	Set&amp;lt;Observer&amp;gt; observers = new HashSet&amp;lt;Observer&amp;gt;();
	String name;
	String value;

	public Topic(String str) {
		this.name = str;
		System.out.println("Topic " + name + " created");
	}

	@Override
	public void registerObserver(Observer obs) {
		observers.add(obs);
	}

	@Override
	public void removeObserver(Observer obs) {
		observers.remove(obs);
	}

	@Override
	public void notifyObservers() {
		for (Observer obs : observers)
			obs.update(value);
	}

	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
		notifyObservers();
	}
	
}

class Subscriber implements Observer {
	private String name;

	public Subscriber(String str) {
		this.name = str;
		System.out.println("Subscriber " + name + " created");
	}

	@Override
	public void update(String value) {
		System.out.println("Subscriber " + this.name + " Notified with new value "+value);
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Observer pattern : Behavioral&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="design_patterns" name="Design Patterns" type="sub"/>
    </question>
    <question id="93">
        <references></references>
        <answer>&lt;p&gt;void rotateArray(int[] numbers,int k){&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int len = numbers.length;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;reverse(numbers,0,len-k-1);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;reverse(numbers,len-k,len-1);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;reverse(numbers,0,len-1);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;

&lt;p&gt;&amp;nbsp; &amp;nbsp; void reverse(int[] numbers, int start, int end) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(start&amp;lt;end){&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int tmp = numbers[end];&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;numbers[end] = numbers[start];&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;numbers[start] = tmp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;start++;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;end--;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Rotate array of integers k times&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="dsa_arrays" name="Arrays" type="sub"/>
    </question>
    <question id="97">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.programcreek.com/2014/05/leetcode-valid-sudoku-java/"&gt;http://www.programcreek.com/2014/05/leetcode-valid-sudoku-java/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://codereview.stackexchange.com/questions/46033/sudoku-checker-in-java"&gt;http://codereview.stackexchange.com/questions/46033/sudoku-checker-in-java&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;boolean isValidSudoku(int[][] sudoku){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Set&amp;lt;Integer&amp;gt; numbers = new HashSet&amp;lt;Integer&amp;gt;();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int sum=0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//check all rows&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;9;i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int k=0;k&amp;lt;9;k++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(numbers.add(sudoku[i][k])){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sum=sum+sudoku[i][k];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} else {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(sum!=45){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sum=0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;numbers.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//check all columns&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;9;i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int k=0;k&amp;lt;9;k++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(numbers.add(sudoku[i][k])){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sum=sum+sudoku[k][i];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} else {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(sum!=45){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sum=0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;numbers.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//check 3x3 squares&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int check=3;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(check&amp;lt;=9){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;9;i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int k=0;k&amp;lt;9;k++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(i&amp;lt;check &amp;amp;&amp;amp; i&amp;gt;=check-3 &amp;amp;&amp;amp; k&amp;lt;check &amp;amp;&amp;amp; k&amp;gt;=check-3){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sum=sum+sudoku[i][k];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;check=check+3;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(sum!=45){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sum=0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;numbers.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return true;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Check if sudoku [2D array] is valid&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_arrays" name="Arrays" type="sub"/>
    </question>
    <question id="32">
        <references></references>
        <answer>&lt;p&gt;public static boolean isUniqueChars2(String str) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;boolean[] char_set = new boolean[256];&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; str.length(); i++) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int val = str.charAt(i);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if (char_set[val])&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;char_set[val] = true;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return true;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Implement an algorithm to determine if a string has all unique characters. What if you can not use additional data structures?&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="33">
        <references></references>
        <answer>&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;boolean anagramUsingSort(String s, String t) {&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return sortString(s).equals(sortString(t));&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;boolean anagaramUsingCharCount(String s, String t) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if (s.length() != t.length()) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Map&amp;lt;Character, Integer&amp;gt; map1 = getCharacterCount(s);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Map&amp;lt;Character, Integer&amp;gt; map2 = getCharacterCount(t);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (Character c : map1.keySet()) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if (map1.get(c) != map2.get(c)) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return true;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;String sortString(String s) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;char[] sAry = s.toCharArray();&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Arrays.sort(sAry);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return new String(sAry);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Map&amp;lt;Character, Integer&amp;gt; getCharacterCount(String s) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Map&amp;lt;Character, Integer&amp;gt; charCountMap = new HashMap&amp;lt;Character, Integer&amp;gt;();&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; s.length(); i++) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;char c = s.charAt(i);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if (charCountMap.containsKey(c)) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;charCountMap.put(c, charCountMap.get(c) + 1);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} else {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;charCountMap.put(c, 1);&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return charCountMap;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Write a method to decide if two strings are anagrams or not&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="34">
        <references></references>
        <answer>&lt;p&gt;Assume you have a method &amp;quot;contains&amp;quot; which checks if one word is a substring of another.&lt;/p&gt;&lt;p&gt;Just do the following checks&lt;br /&gt;1. Check if length(s1) == length(s2). If not, return false.&lt;br /&gt;2. Else, concatenate s1 with itself and see whether s2 is substring of the result.&lt;br /&gt;input: s1 = apple, s2 = pleap ==&amp;gt; apple is a substring of pleappleap&lt;br /&gt;input: s1 = apple, s2 = ppale ==&amp;gt; apple is not a substring of ppaleppale&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;boolean isRotationOfString(String s1,String s2){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(s1.length()!=s2.length()){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;String s1s2 = s1 + s1;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return s1s2.contains(s2);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Given two strings, s1 and s2, write code to check if s2 is a rotation of s1(i.e., &amp;ldquo;waterbottle&amp;rdquo; is a rotation of &amp;ldquo;erbottlewat&amp;rdquo;).&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="87">
        <references></references>
        <answer>&lt;p&gt;boolean checkStringsPattern(String pattern, String sentence) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;String[] words = sentence.split(&amp;quot;\\s&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(words.length!=pattern.length()){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Map&amp;lt;Character,String&amp;gt; map = new HashMap&amp;lt;Character,String&amp;gt;();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;pattern.length();i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Character ch = pattern.charAt(i);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(map.containsKey(ch)){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;String word = map.get(ch);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(!word.equals(words[i])){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} else if(map.containsValue(words[i])){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return false;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} else{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;map.put(ch, words[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return true;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Write&amp;nbsp;a method to check if a sentence of words follows a pattern&lt;br /&gt;For ex: if pattern is &amp;quot;abcbb&amp;quot; and sentence is &amp;quot;cat dog fish dog dog&amp;quot;, then return true&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="88">
        <references></references>
        <answer>&lt;p&gt;String countAndSay(int n){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;String number = Integer.toString(n);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;StringBuilder sb = new StringBuilder();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;number.length();i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int count = 1;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(i&amp;lt;number.length()-1 &amp;amp;&amp;amp; number.charAt(i)==number.charAt(i+1)){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;count++;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;i++;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sb.append(count+&amp;quot;&amp;quot;+number.charAt(i));&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return sb.toString();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Count and Say - 1&lt;br /&gt;I/O: 122444 ==&amp;gt;&amp;nbsp;O/P: 112234,&amp;nbsp;I/O: 112122 ==&amp;gt;&amp;nbsp;O/P: 21121122&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="89">
        <references></references>
        <answer>&lt;p&gt;String longestCommonSubstring(String[] words){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;String firstWord = words[0];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;List&amp;lt;String&amp;gt; allSubStrings = new ArrayList&amp;lt;String&amp;gt;();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//prepare list of all substrings of first word&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;firstWord.length();i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int j=0;j&amp;lt;=i;j++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;String word = firstWord.substring(j,i+1);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//append length in the beginning to sort according to the length&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;allSubStrings.add(word.length()+&amp;quot;_&amp;quot;+word);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Collections.sort(allSubStrings);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//remove all substrings which are not common in all words&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(String word:words){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Iterator&amp;lt;String&amp;gt; itr = allSubStrings.iterator();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(itr.hasNext()){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(!word.contains(itr.next().substring(2))){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;itr.remove();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;//remove length from beginning and return the substring&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return allSubStrings.get(allSubStrings.size()-1).substring(2);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Longest common substring of all words in an array&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="90">
        <references></references>
        <answer>&lt;p&gt;String largestIntegerConstructed(int[] integers) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;List&amp;lt;String&amp;gt; numbers = new ArrayList&amp;lt;String&amp;gt;();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;// convert array of integers to list of strings&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; integers.length; i++) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;numbers.add(String.valueOf(integers[i]));&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;// sort the list with comparator&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Collections.sort(numbers, new LargestCombinationComparator());&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;StringBuilder sb = new StringBuilder();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;// construct the largest integer string by concatenating&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (String number : numbers) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sb.append(number);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return sb.toString();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;// Find largest integer string&lt;br /&gt;// for ex; {5,34}, compare 534 and 345&lt;br /&gt;class LargestCombinationComparator implements Comparator&amp;lt;String&amp;gt; {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public int compare(String o1, String o2) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return (o2 + o1).compareTo(o1 + o2);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Largest combination of Integer from an array of integers&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="91">
        <references></references>
        <answer>&lt;p&gt;String summaryOfRanges(int[] integers){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;StringBuilder sb = new StringBuilder();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(int i=0;i&amp;lt;integers.length;i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int start=integers[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(i&amp;lt;integers.length-1 &amp;amp;&amp;amp; integers[i]+1==integers[i+1]){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;i++;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int end=integers[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(start==end){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sb.append(&amp;quot;[&amp;quot;).append(start).append(&amp;quot;] &amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} else{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;sb.append(&amp;quot;[&amp;quot;).append(start).append(&amp;quot;-&amp;gt;&amp;quot;).append(end).append(&amp;quot;] &amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return sb.toString();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Find summary of all ranges in an array of integers&lt;br /&gt;for ex;{5,1,2,3,4,12,6,7,13}, return&amp;nbsp;[5] [1-&amp;gt;4] [12] [6-&amp;gt;7] [13]&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="92">
        <references></references>
        <answer>&lt;pre&gt;&lt;code class="language-java"&gt;int start,end,maxLen;

String longestPalindrome(String str){
        for(int i=0;i&amp;lt;str.length();i++){
            expand(str,i,i); // for odd length
            expand(str,i,i+1); // for even length
        }
        return str.substring(start,end);
    }

    void expand(String str, int j, int k) {
        while(j&amp;gt;=0 &amp;amp;&amp;amp; k&amp;lt;str.length() &amp;amp;&amp;amp; str.charAt(j)==str.charAt(k)){
            j--;
            k++;
        }
        if(k-j-1&amp;gt;1 &amp;amp;&amp;amp; maxLen&amp;lt;k-j-1){
            start = j+1;
            end = k;
            maxLen = k-j-1;
        }
    }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Longest palindrome substring in a string&lt;/p&gt;</description>
        <topic parent_id="dsa" id="dsa_strings" name="Strings" type="sub"/>
    </question>
    <question id="54">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/exceptions-top-60-interview-questions_16.html"&gt;http://www.javamadesoeasy.com/2015/05/exceptions-top-60-interview-questions_16.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;img src="http://1988780851.rsc.cdn77.org/wp-content/uploads/2013/07/exception-hierarchy-450x217.png" /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://java-questions.com/img/ExceptionClasses.png" /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/ULSZt5051OdQHFX8xwFfNYjwNkZ8Zszc2waDqKjae6jIinRFLc9JYngUq9oYfB7ADpb7O-bc2_lVmMrFXVEO8Fq-L1YS2_lwMZfKuol-0oyyExFbdnyCNvRDNhI6D9KpLwjvSG0" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Explain the exception hierarchy in java&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="98">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/checked-compile-time-exceptions-and.html"&gt;http://www.javamadesoeasy.com/2015/05/checked-compile-time-exceptions-and.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2011/12/checked-vs-unchecked-exception-in-java.html"&gt;http://javarevisited.blogspot.com/2011/12/checked-vs-unchecked-exception-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;table border="1"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Property&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;checked exception&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;unchecked exception&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;1&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Also known as&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;checked exceptions are also known as compileTime exceptions.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;unchecked exceptions are also known as runtime exceptions.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Should be solved at compile or runtime?&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Checked exceptions are those which need to be taken care at compile time.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Unchecked exceptions are those which need to be taken care at runtime.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;3&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Benefit/ Advantage&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;We cannot proceed until we fix compilation issues which are most likely to happen in program, this helps us in avoiding runtime problems upto lot of extent.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Whenever runtime exception occurs execution of program is interrupted, but by handling these kind of exception we avoid such interruptions and end up giving some meaningful message to user.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;4&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Creating custom/own exception&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;class UserException extends Exception {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; UserException(String s) {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; super(s);&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;By extending java.lang.Exception, we can create checked exception.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;class UserException extends RuntimeException {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; UserException(String s) {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; super(s);&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;By extending java.lang.RuntimeException, we can create unchecked exception.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;5&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/exception-propagation-in-java-deep.html"&gt;Exception propagation&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;For propagating checked exceptions method must throw exception by using throws keyword.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;unchecked exceptions are &lt;a href="http://www.javamadesoeasy.com/2015/05/exception-propagation-in-java-deep.html"&gt;automatically propagated&lt;/a&gt; in java.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;6&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;handling checked and unchecked exception while overriding superclass method&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;If superclass method throws/declare checked exception &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw narrower (subclass of) checked exception (As shown in &lt;a href="http://www.javamadesoeasy.com/2015/05/program-to-show-overridden-method-of_93.html"&gt;Program&lt;/a&gt;), or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass cannot declare/throw broader (superclass of) checked exception (As shown in &lt;a href="http://www.javamadesoeasy.com/2015/05/program-to-show-overridden-method-of_94.html"&gt;Program&lt;/a&gt;), or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw any unchecked /RuntimeException (As shown in &lt;a href="http://www.javamadesoeasy.com/2015/05/program-to-show-overridden-method-of_37.html"&gt;Program&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;If superclass method throws/declare unchecked &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw any unchecked /RuntimeException (superclass or subclass) (As shown in &lt;a href="http://www.javamadesoeasy.com/2015/05/program-to-show-overridden-method-of.html"&gt;Program&lt;/a&gt;), or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass cannot declare/throw any checked exception (As shown in &lt;a href="http://www.javamadesoeasy.com/2015/05/program-to-show-overridden-method-of_6.html"&gt;Program&lt;/a&gt;),&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Which classes are which type of exception? &amp;nbsp;either&lt;/p&gt;&lt;p&gt;checked or unchecked exception?&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The class Exception and all its subclasses that are not also subclasses of RuntimeException are checked exceptions.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The class RuntimeException and all its subclasses are unchecked exceptions.&lt;/p&gt;&lt;p&gt;Likewise,&lt;/p&gt;&lt;p&gt;The class Error and all its subclasses are unchecked exceptions.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;7&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Most frequently faced exceptions&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/sqlexception-in-java.html"&gt;SQLException&lt;/a&gt;,&lt;/p&gt;&lt;p&gt;IOException,&lt;/p&gt;&lt;p&gt;ClassNotFoundException&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/nullpointerexception-in-java.html"&gt;NullPointerException&lt;/a&gt;,&lt;/p&gt;&lt;p&gt;ArithmeticException ArrayIndexOutOfBoundsException.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;What are differences between checked and unchecked exceptions?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="99">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javaconceptoftheday.com/difference-between-error-vs-exception-in-java/"&gt;http://javaconceptoftheday.com/difference-between-error-vs-exception-in-java/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;table border="1"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Property&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/exception-handling-exception-hierarchy.html"&gt;Exception&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/javalangerror-in-exception-handling-in.html"&gt;Error&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;1&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;serious problem?&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Exception does not indicate any serious problem.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Error indicates some serious problems that our application should not try to catch.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;divided into&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/checked-compile-time-exceptions-and.html"&gt;checked and unchecked&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Exception are divided into checked and unchecked exceptions.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Error are not divided further into such classifications.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;3&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Which classes are which type of exception? either&lt;/p&gt;&lt;p&gt;checked or unchecked exception?&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The class Exception and all its subclasses that are not also subclasses of RuntimeException are checked exceptions.&lt;/p&gt;&amp;nbsp;&lt;p&gt;The class RuntimeException and all its subclasses are unchecked exceptions.&lt;/p&gt;&lt;p&gt;Likewise,&lt;/p&gt;&lt;p&gt;The class Error and all its subclasses are unchecked exceptions.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Error and its subclasses are regarded as unchecked exceptions&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;4&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Most frequently faced exception and errors&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;checked exceptions&amp;gt;&lt;/p&gt;&lt;p&gt;SQLException,&lt;/p&gt;&lt;p&gt;IOException,&lt;/p&gt;&lt;p&gt;ClassNotFoundException&lt;/p&gt;&amp;nbsp;&lt;p&gt;unchecked exceptions&amp;gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/nullpointerexception-in-java.html"&gt;NullPointerException&lt;/a&gt;, ArithmeticException,&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;VirtualMachineError, IOError, AssertionError, &lt;a href="http://www.javamadesoeasy.com/2015/04/threaddeath-error-calling-stop-method.html"&gt;ThreadDeath&lt;/a&gt;,&lt;/p&gt;&lt;p&gt;OutOfMemoryError, StackOverflowError.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;5&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Why to catch or not to catch?&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Application must catch the Exception because they does not cause any major threat to application.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Application must not catch the Error because they does cause any major threat to application.&lt;/p&gt;&lt;p&gt;Example &amp;gt;&lt;/p&gt;&lt;p&gt;Let&amp;rsquo;s say errors like OutOfMemoryError and StackOverflowError occur and are caught then JVM might not be able to free up memory for rest of application to execute, so it will be better if application don&amp;rsquo;t catch these errors and is allowed to terminate.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;What are differences between Exception and Error in java?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="100">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/exception-propagation-in-java-deep.html"&gt;http://www.javamadesoeasy.com/2015/05/exception-propagation-in-java-deep.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.javatpoint.com/exception-propagation"&gt;http://www.javatpoint.com/exception-propagation&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;An exception is first thrown from the top of the stack and if it is not caught, it drops down the call stack to the previous method,If not caught there, the exception again drops down to the previous method, and so on until they are caught or until they reach the very bottom of the call stack.This is called exception propagation.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;unchecked exceptions&lt;/strong&gt; are automatically propagated in java&lt;br /&gt;&lt;strong&gt;checked exceptions&lt;/strong&gt; method must throw exception by using &lt;a href="http://www.javamadesoeasy.com/2015/05/throws-exception-in-java.html"&gt;throws&lt;/a&gt; keyword.&lt;/p&gt;</answer>
        <description>&lt;p&gt;How exceptions are propagated?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="101">
        <references></references>
        <answer>&lt;p&gt;We can enclose exception prone code in &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/try-catch-finally-block-in-java.html"&gt;try-catch block&lt;/a&gt;, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;try-finally block, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;try-catch-finally block.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using try-catch block&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;try{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //Code to be enclosed in try-catch block &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }catch(Exception e){ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Using try-finally block&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; try{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //Code to be enclosed in try-finally block&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }finally{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;We cannot use try block alone, it must be followed by either catch or finally.&lt;/p&gt;&lt;p&gt;Using only try block will cause compilation error&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; try{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //only try block will cause compilation error&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Likewise, we cannot use catch block alone, it always follows try block.&lt;/p&gt;&lt;p&gt;Using only catch block will cause compilation error&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; catch{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //only catch block will cause compilation error&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Likewise, we cannot use finally block alone, it always follows try block.&lt;/p&gt;&lt;p&gt;Using only finally block will cause compilation error&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; finally{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //only finally block will cause compilation error&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;How to use try-catch-finally blocks?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="102">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/catch-block-and-automatic-resource.html"&gt;http://www.javamadesoeasy.com/2015/05/catch-block-and-automatic-resource.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/java-7/improved-exception-handling-in-java-7/"&gt;http://howtodoinjava.com/java-7/improved-exception-handling-in-java-7/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Features of multi catch syntax&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Has improved way of catching multiple &lt;a href="http://www.javamadesoeasy.com/2015/05/exception-handling-exception-hierarchy.html"&gt;exceptions&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This syntax does not looks clumsy.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Reduces developer efforts of writing multiple catch blocks.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Allows us to catch more than one exception in one catch block.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Helps in automatic resource management.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Here is the multi catch syntax &amp;gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//code . . . . .&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }catch(IOException | SQLException ex){&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//code . . . . .&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;We could separate different exceptions using pipe ( | )&lt;/p&gt;&lt;p&gt;we can catch IOException and SQLException in one catch block using multi catch syntax like this&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh5.googleusercontent.com/je3UfMtQg2YFmne0LjCv5yTuuq7hN4nO8LMzE2LLSjoOyNCEzkoCE2BfSUqwyeFy3BTJUVPQHvwi4r6vM9UqZyq6MtgxExETG4_SVXRLNXtOxi_NWWvO3NuedZnTM1dmkoL3IeY" /&gt;&lt;/p&gt;&lt;p&gt;Using multi catch syntax to catch subclass and its superclass exception.&lt;/p&gt;&lt;p&gt;When multiple catch blocks are used , first catch block could be subclass of Exception class handled in following catch blocks like this &amp;gt;&lt;/p&gt;&lt;p&gt;IOException is subclass of Exception.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh5.googleusercontent.com/hvgT0srQX-vJXuRcbEXKfNWxmc0xt2Q20Hc7FIrzXNa6o5_uZuik20Cb__gXkx5cjmKO08n-II8gYTmLe5PH84h137Y0XQaGiQONh9vta3HdltJRfBIj8nOlqocFOTmowkQZZEA" /&gt;&lt;/p&gt;&lt;p&gt;But in java 7, if multi catch syntax is used to catch subclass and its superclass than compilation error will be thrown.&lt;/p&gt;&lt;p&gt;IOException and Exception in multi catch syntax will cause compilation error &amp;ldquo;The exception IOException is already caught by the alternative Exception&amp;rdquo;.&lt;/p&gt;&lt;p&gt;IOException is subclass of Exception.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh4.googleusercontent.com/A5dsFc6teIkvzqDoV_eajzWqBj78tuMxU0jY8B9YLeKINoX2wgxTaaF3ySfMo9HBExjE_Ob-WZvfD7Rgt_A_UaHTMcsdIjT7c6-wcICfJqWdk78OmBZ2LPbuOquVKPUUDKFoK0E" /&gt;&lt;/p&gt;&lt;p&gt;We must use only Exception to catch its subclass like this &amp;gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh5.googleusercontent.com/_I8MIBFUZ4wF-SXRd_4rMZAwmmmnjZpuPkHY6QYzHG4sfk7rnauCVDhgRcKm3QXW_3cWhV_jnEKtMgUvlXxe4DAH9bZz9xrhg1T0dz5g0B58LQwb950Gc1WHg526839ag5Rm-98" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;How to use multiple catch blocks?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="103">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://tutorials.jenkov.com/java-exception-handling/try-with-resources.html"&gt;http://tutorials.jenkov.com/java-exception-handling/try-with-resources.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.mkyong.com/java/try-with-resources-example-in-jdk-7/"&gt;http://www.mkyong.com/java/try-with-resources-example-in-jdk-7/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Before java 7, we used to write explicit code for closing file in &lt;a href="http://www.javamadesoeasy.com/2015/05/finally-block-in-java.html"&gt;finally&lt;/a&gt; block by using &lt;a href="http://www.javamadesoeasy.com/2015/05/try-catch-finally-block-in-java.html"&gt;try-finally block&lt;/a&gt; like this &amp;gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;public class TryWithResourseTest {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; public static void main(String[] args) throws IOException {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; InputStream inputStream = null;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; try{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; inputStream = new FileInputStream(&amp;quot;c:/txtFile.txt&amp;quot;);&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //code......&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }finally{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(inputStream!=null)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; inputStream.close();&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;In java 7, using Try-with-resources &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;we need not to write explicit code for closing file.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;pre&gt;&lt;code class="language-java"&gt;import java.io.FileInputStream;

import java.io.IOException;

import java.io.InputStream;

public class TryWithResourseTest {

  public static void main(String[] args) throws IOException {

         try (InputStream inputStream = new FileInputStream("c:/txtFile.txt")) {

             //code...

         }

  }

}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Using multiple resources inside Try-with-resources is also allowed.&lt;/p&gt;&lt;p&gt;Now, question comes why we need not to close file when we are using Try-with-resources?&lt;/p&gt;&lt;p&gt;Because FileInputStream implements java.lang.AutoCloseable interface (AutoCloseable interface&amp;rsquo;s close method automatically closes resources which are no longer needed.)&lt;/p&gt;&lt;p&gt;Which classes can be used inside Try-with-resources?&lt;/p&gt;&lt;p&gt;All the classes which implements AutoCloseable interface can be used inside Try-with-resources.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Explain try-with-resource in java?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="104">
        <references></references>
        <answer>&lt;p&gt;When catch and finally block both return value, method will ultimately return value returned by &lt;a href="http://www.javamadesoeasy.com/2015/05/finally-block-in-java.html"&gt;finally&lt;/a&gt; block irrespective of value returned by &lt;a href="http://www.javamadesoeasy.com/2015/05/catch-block-and-automatic-resource.html"&gt;catch&lt;/a&gt; block.&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;public class ExceptionTest {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; public static void main(String[] args) {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.println(&amp;quot;method return -&amp;gt; &amp;quot;+m());&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; static String m(){&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; try{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int i=10/0; //will throw ArithmeticException&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }catch(ArithmeticException e){&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return &amp;quot;catch&amp;quot;;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }finally{&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return &amp;quot;finally&amp;quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp;}&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;/*OUTPUT&lt;/p&gt;&lt;p&gt;method return -&amp;gt; finally&lt;/p&gt;&lt;p&gt;*/&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;In above program, i=10/0 will throw ArithmeticException and enter catch block to return &amp;quot;catch&amp;quot;, but ultimately control will enter finally block to return &amp;quot;finally&amp;quot;.&lt;/p&gt;&lt;p&gt;Likewise, when &lt;a href="http://www.javamadesoeasy.com/2015/05/try-catch-finally-block-in-java.html"&gt;try and finally&lt;/a&gt; block both return value, method will ultimately return value returned by finally block irrespective of value returned by try block.&lt;/p&gt;</answer>
        <description>&lt;p&gt;What will happen when catch and finally block both return value, also when try and finally both return value?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="105">
        <references></references>
        <answer>&lt;p&gt;If superclass method throws/declare unchecked/RuntimeException &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw any unchecked /RuntimeException (superclass or subclass), or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass cannot declare/throw any checked exception, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw same exception, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass may not declare/throw any exception.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If superclass method throws/declare checked/compileTime exception &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw narrower (subclass of) checked exception, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass cannot declare/throw broader (superclass of) checked exception, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw any unchecked /RuntimeException, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw same exception, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass may not declare/throw any exception.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If superclass method does not throw/declare any exception &amp;gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass can declare/throw any unchecked /RuntimeException , or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass cannot declare/throw any checked exception, or&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;overridden method of subclass may not declare/throw any exception.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;Which checked and unchecked exception can be thrown/declared by subclass method while overriding superclass method in java?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="106">
        <references></references>
        <answer>&lt;table border="1"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/final-keyword-in-java-20-salient.html"&gt;final&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/finally-block-in-java.html"&gt;finally&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/finalize-method-in-java-10-salient.html"&gt;finalize&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;1&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/final-keyword-in-java-20-salient.html"&gt;final&lt;/a&gt; can be applied to variable, method and class in java.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/finally-block-in-java.html"&gt;finally&lt;/a&gt; is a block.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/finalize-method-in-java-10-salient.html"&gt;finalize&lt;/a&gt; is a method.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;2&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;p&gt;2.1) Final variable&lt;/p&gt;&lt;p&gt;final memberVariable&lt;/p&gt;&lt;p&gt;final local variable&lt;/p&gt;&lt;p&gt;final static variable&lt;/p&gt;&amp;nbsp;&lt;p&gt;Final memberVariable of class must be initialized at time of declaration, once initialized final memberVariable cannot be assigned a new value.&lt;/p&gt;&lt;p&gt;Final variables are called constants in java.&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;class FinalTest {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; final int x=1; //memberVariable/instanceVariable&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;If constructor is defined then final memberVariable can be initialized in constructor but &amp;nbsp;once initialized cannot be assigned a new value.&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;class FinalTest {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; final int x; //memberVariable/instanceVariable&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; FinalTest() {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; x = 1; //final memberVariable can be initialized in constructor.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;Final local variable can be left uninitialized at time of declaration and can be initialized later, but once initialized cannot be assigned a new value.&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;class FinalTest {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;void method(){ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final int x; //uninitialized at time of declaration&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x=1;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;Final static variable of class must be initialized at time of declaration or can be initialized in static block, once initialized final static variable cannot be assigned a new value.&lt;/p&gt;&amp;nbsp;&lt;p&gt;If static block is defined then final static variable can be initialized in static block, once initialized final static variable cannot be assigned a new value.&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;class FinalTest {&lt;/p&gt;&lt;p&gt;&amp;nbsp;final static int x; //static variable&lt;/p&gt;&lt;p&gt;&amp;nbsp;static{ //static block&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x=1;&lt;/p&gt;&lt;p&gt;&amp;nbsp;}&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;2.2) Final method&lt;/p&gt;&lt;p&gt;Final method cannot be overridden, any attempt to do so will cause compilation error.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh6.googleusercontent.com/9O1O5MRwg1NVPsVCuL-i3-M2HsZ4vFfyEkajayflbtUXS3PMil96r-z69VJigDDJKXyy4KE8UJbosx66qyqbojmEcvGAW__dHg6oKVB8-_cus4a6r_peqKFO-hmqx8CWgoWIOgh8" /&gt;&lt;/p&gt;&lt;p&gt;Runtime polymorphism is not applicable on final methods because they cannot be inherited.&lt;/p&gt;&amp;nbsp;&lt;p&gt;2.3) Final class&lt;/p&gt;&lt;p&gt;Final class cannot be extended, any attempt to do so will cause compilation error.&lt;/p&gt;&lt;p&gt;&lt;img src="https://lh3.googleusercontent.com/OWVRfY8Eqw9fRdxNxyFG6OAnxBnLo79ffiMTMK6vWzNgcb0yjyW9d5FzlIaRSNH9i4TazrkZxRnlN3spCOmw54iXR6AHwegwwF-3R1tZKHB0I3K88aCVaqHxvsWlr9ZFL5TYDbaK" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;p&gt;try or &lt;a href="http://www.javamadesoeasy.com/2015/05/try-catch-finally-block-in-java.html"&gt;try-catch&lt;/a&gt; block can be followed by finally block &amp;gt;&lt;/p&gt;&lt;p&gt;try-finally block, or&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;try{&lt;/p&gt;&lt;p&gt;//Code to be enclosed in try-finally block&lt;/p&gt;&lt;p&gt;}finally{&lt;/p&gt;&lt;p&gt;} &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;try-catch-finally block.&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;try{&lt;/p&gt;&lt;p&gt;//Code to be enclosed in try-catch-finally block&lt;/p&gt;&lt;p&gt;}catch(Exception e){&lt;/p&gt;&lt;p&gt;}finally{&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;finally block can can only exist if try or try-catch block is there, finally block can&amp;rsquo;t be used alone in java.&lt;/p&gt;&amp;nbsp;&lt;p&gt;finally block is not executed in following scenarios &amp;gt;&lt;/p&gt;&lt;p&gt;finally is not executed when System.exit is called.&lt;/p&gt;&lt;p&gt;if in case JVM crashes because of some java.util.&lt;a href="http://www.javamadesoeasy.com/2015/05/javalangerror-in-exception-handling-in.html"&gt;Error&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;p&gt;finalize method is called before garbage collection by JVM,&lt;/p&gt;&lt;p&gt;finalize method is called for any cleanup action that may be required before garbage collection.&lt;/p&gt;&amp;nbsp;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;/** Copyright (c), AnkitMittal JavaMadeSoEasy.com */&lt;/p&gt;&amp;nbsp;&lt;p&gt;@Override&lt;/p&gt;&lt;p&gt;protected void finalize() throws Throwable {&lt;/p&gt;&lt;p&gt;try {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;in&lt;/p&gt;&lt;p&gt;&amp;nbsp;finalize() method, &amp;quot;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; + &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;quot;doing cleanup activity&amp;quot;);&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;} catch (Throwable throwable) {&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw throwable;&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;&lt;p&gt;finalize() method is defined in java.lang.Object&lt;/p&gt;&lt;br /&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;3&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;-&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;finally block can only exist if try or try-catch block is there, finally block can&amp;rsquo;t be used alone in java.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;We can force early garbage collection in java by using following methods &amp;gt;&lt;/p&gt;&lt;p&gt;System.gc(); Runtime.getRuntime().gc();&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.runFinalization(); Runtime.getRuntime().runFinalization();&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;4&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;-&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;finally is always executed irrespective of exception thrown.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;If any uncaught &lt;a href="http://www.javamadesoeasy.com/2015/05/checked-compile-time-exceptions-and.html"&gt;exception&lt;/a&gt; is thrown inside finalize method -&lt;/p&gt;&lt;p&gt;exception is ignored,&lt;/p&gt;&lt;p&gt;thread is terminated and&lt;/p&gt;&lt;p&gt;object is discarded.&lt;/p&gt;&amp;nbsp;&lt;p&gt;Note : Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;5&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;-&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Currently executing thread calls finally method.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;JVM does not guarantee which &lt;a href="http://www.javamadesoeasy.com/2015/03/daemon-threads-12-salient-features-of.html"&gt;daemon&lt;/a&gt; &lt;a href="http://www.javamadesoeasy.com/2015/03/what-is-thread-in-java.html"&gt;thread&lt;/a&gt; will invoke the finalize method for an object.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;6&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;final is a keyword in java.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;finally Is a keyword in java.&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p&gt;finalize is not a keyword in java.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;Difference between Final, Finally and Finalize?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="107">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2014/02/why-catching-throwable-or-error-is-bad.html"&gt;http://javarevisited.blogspot.com/2014/02/why-catching-throwable-or-error-is-bad.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2013/03/0-exception-handling-best-practices-in-Java-Programming.html"&gt;http://javarevisited.blogspot.com/2013/03/0-exception-handling-best-practices-in-Java-Programming.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Exception best practices&lt;/p&gt;</description>
        <topic parent_id="core_java" id="exceptions" name="Exceptions" type="sub"/>
    </question>
    <question id="14">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://technicalinterviewquestionanswers.blogspot.in/2012/06/technical-architect-javaj2ee.html"&gt;http://technicalinterviewquestionanswers.blogspot.in/2012/06/technical-architect-javaj2ee.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.buggybread.com/2015/02/java-j2ee-technical-architect-interview.html"&gt;http://www.buggybread.com/2015/02/java-j2ee-technical-architect-interview.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.fromdev.com/2013/07/architect-interview-questions-and-answers.html"&gt;http://www.fromdev.com/2013/07/architect-interview-questions-and-answers.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;ol&gt;
	&lt;li&gt;Scalability&lt;/li&gt;
	&lt;li&gt;High Availability&lt;/li&gt;
	&lt;li&gt;Performance&lt;/li&gt;
	&lt;li&gt;Caching&lt;/li&gt;
	&lt;li&gt;Logging&lt;/li&gt;
	&lt;li&gt;UML&lt;/li&gt;
	&lt;li&gt;SOA - Service Oriented Architecture&lt;/li&gt;
	&lt;li&gt;Design Patterns&lt;/li&gt;
	&lt;li&gt;Transaction processing&lt;/li&gt;
	&lt;li&gt;Messaging Queue (JMS)&lt;/li&gt;
&lt;/ol&gt;
</answer>
        <description>&lt;p&gt;what are the topics to read for technical architect interview?&lt;/p&gt;
</description>
        <topic parent_id="design_architecture" id="general_da" name="General" type="sub"/>
    </question>
    <question id="165">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javajuggler.blogspot.in/2011/01/oo-design-for-parkinglot.html"&gt;http://javajuggler.blogspot.in/2011/01/oo-design-for-parkinglot.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Design a parking lot&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="general_da" name="General" type="sub"/>
    </question>
    <question id="166">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.web-feats.com/classes/dj/lessons/uml/elevator.htm"&gt;http://www.web-feats.com/classes/dj/lessons/uml/elevator.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Design an elevator system&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="general_da" name="General" type="sub"/>
    </question>
    <question id="94">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javapapers.com/hibernate/hibernate-advantages/"&gt;http://javapapers.com/hibernate/hibernate-advantages/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/3633/hibernate-interview-questions-and-answers#hibernate-benefits"&gt;http://www.journaldev.com/3633/hibernate-interview-questions-and-answers#hibernate-benefits&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.careerride.com/Hibernate-advantageous-over-JDBC.aspx"&gt;http://www.careerride.com/Hibernate-advantageous-over-JDBC.aspx&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/hibernate/hibernate_interview_questions.htm"&gt;http://www.tutorialspoint.com/hibernate/hibernate_interview_questions.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;ol&gt;&lt;li&gt;Hibernate supports lazy initialization using proxy objects and perform actual database queries only when it&amp;rsquo;s required&lt;/li&gt;&lt;li&gt;Hibernate cache helps us in getting better performance&lt;/li&gt;&lt;li&gt;Hibernate implicitly provides transaction management, in fact most of the queries can&amp;rsquo;t be executed outside transaction&lt;/li&gt;&lt;li&gt;Hibernate Query Language (HQL) is more object oriented and close to java programming language.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Database Independent:&amp;nbsp;&lt;/strong&gt;Hibernate is independent of the database engine at the backend. List of Hibernate Dialect are provided for connecting whatever database we prefer&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Built-In Connection Pool Implementation:&amp;nbsp;&lt;/strong&gt;Hibernate has integrated automatically with the most reliable connection pool implementation (C3P0)&lt;/li&gt;&lt;/ol&gt;</answer>
        <description>&lt;p&gt;Advantages of Hibernate framework&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="hibernate" name="Hibernate" type="sub"/>
    </question>
    <question id="95">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/hibernate/hibernate_architecture.htm"&gt;http://www.tutorialspoint.com/hibernate/hibernate_architecture.htm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://javapapers.com/hibernate/hibernate-architecture/"&gt;http://javapapers.com/hibernate/hibernate-architecture/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.javatpoint.com/hibernate-architecture"&gt;http://www.javatpoint.com/hibernate-architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;img alt="Hibernate High Level View" src="http://www.tutorialspoint.com/hibernate/images/hibernate_high_level.jpg" /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;img alt="Hibernate Architecture" src="http://www.tutorialspoint.com/hibernate/images/hibernate_architecture.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img alt="Hibernate Simple Architecture" src="http://javapapers.com/wp-content/uploads/2014/09/Hibernate-Simple-Architecture.png" /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;img alt="Hibernate Full Architecture" src="http://javapapers.com/wp-content/uploads/2014/09/Hibernate-Full-Architecture.png" /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;img alt="hibernate architecture" src="http://www.javatpoint.com/images/hibernate/arc2.jpg" /&gt;&amp;nbsp; &amp;nbsp;&lt;img alt="hibernate architecture" src="http://www.javatpoint.com/images/hibernate/architecture.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Hibernate architecture&lt;/p&gt;
</description>
        <topic parent_id="frameworks" id="hibernate" name="Hibernate" type="sub"/>
    </question>
    <question id="96">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://javapapers.com/hibernate/hibernate-configuration-and-sessionfactory-instantiation/"&gt;http://javapapers.com/hibernate/hibernate-configuration-and-sessionfactory-instantiation/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/hibernate/hibernate_configuration.htm"&gt;http://www.tutorialspoint.com/hibernate/hibernate_configuration.htm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/hibernate/hibernate_interview_questions.htm"&gt;http://www.tutorialspoint.com/hibernate/hibernate_interview_questions.htm&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.journaldev.com/3633/hibernate-interview-questions-and-answers"&gt;http://www.journaldev.com/3633/hibernate-interview-questions-and-answers&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;The Configuration object is the first Hibernate object you create in any Hibernate application and usually created only once during application initialization. It represents a configuration or properties file required by the Hibernate. The Configuration object provides two keys components:&lt;/p&gt;

&lt;p&gt;This component creates the connection between the Java classes and database tables&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;p&gt;&lt;strong&gt;Database Connection:&lt;/strong&gt;&amp;nbsp;This is handled through one or more configuration files supported by Hibernate. These files are&lt;strong&gt;hibernate.properties&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;hibernate.cfg.xml&lt;/strong&gt;.&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;p&gt;&lt;strong&gt;Class Mapping Setup&lt;/strong&gt;&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This component creates the connection between the Java classes and database tables&lt;/p&gt;

&lt;p&gt;Hibernate requires to know in advance where to find the mapping information that defines how your Java classes relate to the database tables. Hibernate also requires a set of configuration settings related to database and other related parameters. All such information is usually supplied as a standard Java properties file called&amp;nbsp;&lt;strong&gt;hibernate.properties&lt;/strong&gt;, or as an XML file named&lt;strong&gt;hibernate.cfg.xml&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2&gt;Hibernate Properties:&lt;/h2&gt;

&lt;p&gt;Following is the list of important properties you would require to configure for a databases in a standalone situation:&lt;/p&gt;

&lt;table&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th&gt;S.N.&lt;/th&gt;
			&lt;th&gt;Properties and Description&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;1&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.dialect&lt;/strong&gt;&amp;nbsp;&lt;br /&gt;
			This property makes Hibernate generate the appropriate SQL for the chosen database.&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;2&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.driver_class&lt;/strong&gt;
			&lt;p&gt;The JDBC driver class.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;3&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.url&lt;/strong&gt;
			&lt;p&gt;The JDBC URL to the database instance.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;4&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.username&lt;/strong&gt;
			&lt;p&gt;The database username.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;5&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.password&lt;/strong&gt;
			&lt;p&gt;The database password.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;6&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.pool_size&lt;/strong&gt;
			&lt;p&gt;Limits the number of connections waiting in the Hibernate database connection pool.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;7&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.autocommit&lt;/strong&gt;
			&lt;p&gt;Allows autocommit mode to be used for the JDBC connection.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you are using a database along with an application server and JNDI then you would have to configure the following properties:&lt;/p&gt;

&lt;table&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;th&gt;S.N.&lt;/th&gt;
			&lt;th&gt;Properties and Description&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;1&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.datasource&lt;/strong&gt;
			&lt;p&gt;The JNDI name defined in the application server context you are using for the application.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;2&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.jndi.class&lt;/strong&gt;
			&lt;p&gt;The InitialContext class for JNDI.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;3&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.jndi.&amp;lt;JNDIpropertyname&amp;gt;&lt;/strong&gt;
			&lt;p&gt;Passes any JNDI property you like to the JNDI&amp;nbsp;&lt;em&gt;InitialContext&lt;/em&gt;.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;4&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.jndi.url&lt;/strong&gt;
			&lt;p&gt;Provides the URL for JNDI.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;5&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.username&lt;/strong&gt;
			&lt;p&gt;The database username.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;6&lt;/td&gt;
			&lt;td&gt;&lt;strong&gt;hibernate.connection.password&lt;/strong&gt;
			&lt;p&gt;The database password.&lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;
</answer>
        <description>&lt;p&gt;Configuration object&lt;/p&gt;
</description>
        <topic parent_id="frameworks" id="hibernate" name="Hibernate" type="sub"/>
    </question>
    <question id="142">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/hibernate/hibernate_caching.htm"&gt;http://www.tutorialspoint.com/hibernate/hibernate_caching.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/2969/hibernate-first-level-cache-example-with-explanation"&gt;http://www.journaldev.com/2969/hibernate-first-level-cache-example-with-explanation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/hibernate/how-hibernate-second-level-cache-works/"&gt;http://howtodoinjava.com/hibernate/how-hibernate-second-level-cache-works/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.dineshonjava.com/p/cacheing-in-hibernate-first-level-and.html"&gt;http://www.dineshonjava.com/p/cacheing-in-hibernate-first-level-and.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;img src="http://www.tutorialspoint.com/hibernate/images/hibernate_cache.jpg" /&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;First level cache :&amp;nbsp;&lt;/strong&gt;First level cache is associated with session object in hibernate and hibernate provides it by default.&amp;nbsp;&lt;br /&gt;The first-level cache is the Session cache and is a mandatory cache through which all requests must pass. The Session object keeps an object under its own power before committing it to the database.&amp;nbsp;If you issue multiple updates to an object, Hibernate tries to delay doing the update as long as possible to reduce the number of update SQL statements issued. If you close the session, all the objects being cached are lost and either persisted or updated in the database.&lt;br /&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Second level cache :&amp;nbsp;&lt;/strong&gt;Second level cache associates with session factory object. To avail second level cache, we need to configure it in our application.&amp;nbsp;&lt;br /&gt;Second level cache is an optional cache and first-level cache will always be consulted before any attempt is made to locate an object in the second-level cache. The second-level cache can be configured on a per-class and per-collection basis and mainly responsible for caching objects across sessions.&lt;br /&gt;Any third-party cache can be used with Hibernate. An&lt;strong&gt;org.hibernate.cache.CacheProvider&lt;/strong&gt;&amp;nbsp;interface is provided, which must be implemented to provide Hibernate with a handle to the cache implementation.&lt;br /&gt;The Hibernate second-level cache is set up in two steps. First, you have to decide which concurrency strategy to use. After that, you configure cache expiration and physical cache attributes using the cache provider.&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Query-level cache:&amp;nbsp;&lt;/strong&gt;Hibernate also implements a cache for query resultsets that integrates closely with the second-level cache.&amp;nbsp;&lt;br /&gt;This is an optional feature and requires two additional physical cache regions that hold the cached query results and the timestamps when a table was last updated. This is only useful for queries that are run frequently with the same parameters.&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;For Disabling the second level of cache we have to made following change to hibernate configuration file.&lt;/p&gt;&lt;pre&gt;&amp;lt;!-- Disable the second-level cache --&amp;gt;  
&amp;lt;property name=&amp;quot;cache.provider_class&amp;quot;&amp;gt;org.hibernate.cache.NoCacheProvider&amp;lt;/property&amp;gt; 
&lt;/pre&gt;&amp;nbsp;&lt;p&gt;For Enabling the second level of cache we have to made following change to hibernate configuration file.&lt;/p&gt;&lt;pre&gt;&amp;lt;!-- Enable the second-level cache --&amp;gt;  
&amp;lt;property name=&amp;quot;cache.use_second_level_cache&amp;quot;&amp;gt;true&amp;lt;/property&amp;gt;
   &amp;lt;property name=&amp;quot;cache.provider_class&amp;quot;&amp;gt;org.hibernate.cache.EhCacheProvider&amp;lt;/property&amp;gt; 
&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;1. Cache Strategy using with Annotation as some changes made to the Model class a&lt;/strong&gt;&lt;strong&gt;lso.&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;@Cacheable
@Cache(usage = CacheConcurrencyStrategy.READ_ONLY)
@Entity
@Table(name=&amp;quot;STUDENT&amp;quot;)
public class Student implements Serializable 
{
  ....
&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2. Cache Strategy using with Mapping file(.hbm.xml) .&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&amp;lt;hibernate-mapping&amp;gt;
   &amp;lt;class name=&amp;quot;Student&amp;quot; table=&amp;quot;STUDENT&amp;quot;&amp;gt;
      
         This class contains the student detail. 
      
      &amp;lt;cache usage=&amp;quot;read-only&amp;quot;&amp;gt;
      &amp;lt;id column=&amp;quot;ID&amp;quot; name=&amp;quot;id&amp;quot; type=&amp;quot;java.lang.Long&amp;quot;&amp;gt;
         &amp;lt;generator class=&amp;quot;native&amp;quot;&amp;gt;
      &amp;lt;/generator&amp;gt;&amp;lt;/id&amp;gt;
      &amp;lt;property column=&amp;quot;STUDENT_NAME&amp;quot; name=&amp;quot;studentName&amp;quot; type=&amp;quot;java.lang.String&amp;quot;&amp;gt;
      &amp;lt;property column=&amp;quot;lCOURSE&amp;quot; name=&amp;quot;course&amp;quot; type=&amp;quot;java.lang.String&amp;quot;&amp;gt;
      &amp;lt;property column=&amp;quot;ROLL_NUMBER&amp;quot; name=&amp;quot;rollNumber&amp;quot; type=&amp;quot;java.lang.Long&amp;quot;&amp;gt;
   &amp;lt;/property&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/cache&amp;gt;&amp;lt;/class&amp;gt;
&amp;lt;/hibernate-mapping&amp;gt;
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;&lt;strong&gt;Cache strategies&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Strategy:&lt;strong&gt; read only&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If your application needs to read, but not modify, instances of a persistent class, a&amp;nbsp;&lt;code&gt;read-only&lt;/code&gt;&amp;nbsp;cache can be used. This is the simplest and optimal performing strategy. It is even safe for use in a cluster.&lt;/p&gt;&lt;pre&gt;&amp;lt;class name=&amp;quot;eg.Immutable&amp;quot; mutable=&amp;quot;false&amp;quot;&amp;gt;
    &amp;lt;cache usage=&amp;quot;read-only&amp;quot;/&amp;gt;
    ....
&amp;lt;/class&amp;gt;&lt;/pre&gt;&lt;p&gt;2. Strategy:&lt;strong&gt; read/write&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If the application needs to update data, a&amp;nbsp;&lt;code&gt;read-write&lt;/code&gt;&amp;nbsp;cache might be appropriate. This cache strategy should never be used if serializable transaction isolation level is required. If the cache is used in a JTA environment, you must specify the property&amp;nbsp;&lt;code&gt;hibernate.transaction.manager_lookup_class&lt;/code&gt;&amp;nbsp;and naming a strategy for obtaining the JTA&amp;nbsp;&lt;code&gt;TransactionManager&lt;/code&gt;. In other environments, you should ensure that the transaction is completed when&amp;nbsp;&lt;code&gt;Session.close()&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;Session.disconnect()&lt;/code&gt;&amp;nbsp;is called. If you want to use this strategy in a cluster, you should ensure that the underlying cache implementation supports locking. The built-in cache providers&amp;nbsp;&lt;em&gt;do not&lt;/em&gt;&amp;nbsp;support locking.&lt;/p&gt;&lt;pre&gt;&amp;lt;class name=&amp;quot;eg.Cat&amp;quot; .... &amp;gt;
    &amp;lt;cache usage=&amp;quot;read-write&amp;quot;/&amp;gt;
    ....
    &amp;lt;set name=&amp;quot;kittens&amp;quot; ... &amp;gt;
        &amp;lt;cache usage=&amp;quot;read-write&amp;quot;/&amp;gt;
        ....
    &amp;lt;/set&amp;gt;
&amp;lt;/class&amp;gt;&lt;/pre&gt;&lt;p&gt;3.&amp;nbsp;Strategy:&lt;strong&gt; nonstrict read/write&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If the application only occasionally needs to update data (i.e. if it is extremely unlikely that two transactions would try to update the same item simultaneously), and strict transaction isolation is not required, a&lt;code&gt;nonstrict-read-write&lt;/code&gt;&amp;nbsp;cache might be appropriate. If the cache is used in a JTA environment, you must specify&amp;nbsp;&lt;code&gt;hibernate.transaction.manager_lookup_class&lt;/code&gt;. In other environments, you should ensure that the transaction is completed when&amp;nbsp;&lt;code&gt;Session.close()&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;Session.disconnect()&lt;/code&gt;&amp;nbsp;is called.&lt;/p&gt;&lt;p&gt;4.&amp;nbsp;Strategy: &lt;strong&gt;transactional&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The&amp;nbsp;&lt;code&gt;transactional&lt;/code&gt;&amp;nbsp;cache strategy provides support for fully transactional cache providers such as JBoss TreeCache. Such a cache can only be used in a JTA environment and you must specify&lt;code&gt;hibernate.transaction.manager_lookup_class&lt;/code&gt;.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Hibernate Cache&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="hibernate" name="Hibernate" type="sub"/>
    </question>
    <question id="157">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://howtoprogramwithjava.com/hibernate-eager-vs-lazy-fetch-type/"&gt;https://howtoprogramwithjava.com/hibernate-eager-vs-lazy-fetch-type/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://dzone.com/articles/lazyeager-loading-using"&gt;https://dzone.com/articles/lazyeager-loading-using&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.mkyong.com/hibernate/hibernate-fetching-strategies-examples/"&gt;https://www.mkyong.com/hibernate/hibernate-fetching-strategies-examples/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;Relationships&lt;/strong&gt;&amp;nbsp;are important to understand when talking about fetch types in Hibernate. This is the case because whenever you define a relationship in Hibernate, you&amp;rsquo;ll also need to define the fetch type. The fetch type essentially decides whether or not to load all of the relationships of a particular object/table as soon as the object/table is initially fetched.&lt;/p&gt;&lt;p&gt;Any time you see a&amp;nbsp;&lt;code&gt;@OneToOne&lt;/code&gt;,&amp;nbsp;&lt;code&gt;@OneToMany&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;@ManyToMany&lt;/code&gt;&amp;nbsp;annotations, you&amp;rsquo;ve got a relationship. What&amp;rsquo;s important to note is that the fetch type should be specified within those annotations, if you don&amp;rsquo;t specify one then it defaults to&amp;nbsp;&lt;code&gt;FetchType.LAZY&lt;/code&gt;.&amp;nbsp;Eager will by default load ALL of the relationships related to a particular object loaded by Hibernate.&lt;/p&gt;&lt;p&gt;&lt;code&gt;FetchType.LAZY&lt;/code&gt;&amp;nbsp;= Doesn&amp;rsquo;t load the relationships unless explicitly &amp;ldquo;asked for&amp;rdquo; via getter&lt;br /&gt;&lt;code&gt;FetchType.EAGER&lt;/code&gt;&amp;nbsp;= Loads ALL relationships&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;EAGER&lt;/strong&gt;: Convenient, but slow&lt;/li&gt;&lt;li&gt;&lt;strong&gt;LAZY&lt;/strong&gt;: More coding, but much more efficient&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Lazy/Eager Loading&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="hibernate" name="Hibernate" type="sub"/>
    </question>
    <question id="158">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.mkyong.com/hibernate/different-between-session-get-and-session-load/"&gt;https://www.mkyong.com/hibernate/different-between-session-get-and-session-load/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/3472/hibernate-session-get-vs-load-difference-with-examples"&gt;http://www.journaldev.com/3472/hibernate-session-get-vs-load-difference-with-examples&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.in/2012/07/hibernate-get-and-load-difference-interview-question.html"&gt;http://javarevisited.blogspot.in/2012/07/hibernate-get-and-load-difference-interview-question.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;1. session.load()&lt;/p&gt;&lt;ul&gt;&lt;li&gt;It will always return a &amp;ldquo;&lt;strong&gt;proxy&lt;/strong&gt;&amp;rdquo; (Hibernate term) without hitting the database. In Hibernate, proxy is an object with the given identifier value, its properties are not initialized yet, it just look like a temporary fake object.&lt;/li&gt;&lt;li&gt;If no row found , it will throws an&amp;nbsp;&lt;strong&gt;ObjectNotFoundException&lt;/strong&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2. session.get()&lt;/p&gt;&lt;ul&gt;&lt;li&gt;It always&amp;nbsp;&lt;strong&gt;hit the database&lt;/strong&gt;&amp;nbsp;and return the real object, an object that represent the database row, not proxy.&lt;/li&gt;&lt;li&gt;If no row found , it return&amp;nbsp;&lt;strong&gt;null&lt;/strong&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;load() and get()&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="hibernate" name="Hibernate" type="sub"/>
    </question>
    <question id="58">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/html.html"&gt;http://www.thatjsdude.com/interview/html.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;div is a block element and span is inline element.&lt;br /&gt;
It is illegal to put block element inside inline element. div can have a p tag and a p tag can have a span. However, span can&amp;#39;t have a div or p tag inside.&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;What is the difference between span and div?&lt;/p&gt;
</description>
        <topic parent_id="web_development" id="html" name="HTML" type="sub"/>
    </question>
    <question id="131">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.programmerinterview.com/index.php/java-questions/java-reflection-example/"&gt;http://www.programmerinterview.com/index.php/java-questions/java-reflection-example/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.javatpoint.com/java-reflection"&gt;http://www.javatpoint.com/java-reflection&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1789/java-reflection-example-tutorial"&gt;http://www.journaldev.com/1789/java-reflection-example-tutorial&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Reflection in Java is the ability to examine and/or modify the properties or behavior of an&amp;nbsp;&lt;strong&gt;&lt;em&gt;object&lt;/em&gt;&lt;/strong&gt;&amp;nbsp;at run-time. It&amp;rsquo;s important to note that reflection specifically applies to&lt;strong&gt;&lt;em&gt;objects&lt;/em&gt;&lt;/strong&gt;&amp;nbsp;&amp;ndash; so you need an object of a class to get information for that particular class.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Reflection in Java consists of 2 primary things that you should remember:&lt;/p&gt;&lt;p&gt;1. Metadata. Metadata literally means data about the data. In this case, metadata means extra data that has to do with your Java program &amp;ndash; like data about your Java classes, constructors, methods, fields, etc.&lt;/p&gt;&lt;p&gt;2. Functionality that allows you to&amp;nbsp;&lt;em&gt;manipulate&lt;/em&gt;&amp;nbsp;the metadata as well. So, functionality that would allow you to manipulate those fields, methods, constructors, etc. You can actually call methods and constructors using Java reflection &amp;ndash; which is an important fact to remember.&lt;/p&gt;&lt;p&gt;&amp;nbsp;Some of the frameworks that use java reflection are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;JUnit&lt;/strong&gt;&amp;nbsp;&amp;ndash; uses reflection to parse @Test annotation to get the test methods and then invoke it.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Spring&lt;/strong&gt;&amp;nbsp;&amp;ndash; dependency injection, read more at&amp;nbsp;&lt;a href="http://www.journaldev.com/2410/spring-dependency-injection"&gt;Spring Dependency Injection&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tomcat&lt;/strong&gt;&amp;nbsp;web container to forward the request to correct module by parsing their web.xml files and request URI.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Eclipse&lt;/strong&gt;&amp;nbsp;auto completion of method names&lt;/li&gt;&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.journaldev.com/dev/struts-2"&gt;Struts&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Hibernate&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;One of the main drawbacks of reflection in Java is the fact that Reflection can slow down performance because reflection involves types that are resolved at&amp;nbsp;&lt;strong&gt;run-time&lt;/strong&gt;&amp;nbsp;&amp;ndash; and not at compile time. In our example above, note how the findInheritedMethod method accepts a &amp;ldquo;Class&amp;rdquo; type as one of its parameters &amp;ndash; clearly, at run time that parameter will be a concrete class when the method is actually invoked, but at compile time we do not know what class will be passed for that method parameter. Because a lot of the JVM optimizations are performed at compile time, this means that portions of code that use reflection will run slower than if that same code did not contain &amp;ldquo;reflective&amp;rdquo; code. For this reason, reflection should be avoided in sections of code that are important in applications that need to be very efficient in their performance.&lt;/p&gt;&lt;p&gt;Another drawback of reflection is the fact that code which uses reflection can basically access information that is usually not allowed in non-reflexive code. For instance, reflection allows you to access private methods and fields in a class that would otherwise be inaccessible in non-reflective code, and that could potentially ruin the code or make it non-portable.&lt;/p&gt;</answer>
        <description>&lt;p&gt;What is Reflection?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="java_reflections" name="Reflections" type="sub"/>
    </question>
    <question id="132">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://onjavahell.blogspot.in/2009/05/testing-private-methods-using.html"&gt;http://onjavahell.blogspot.in/2009/05/testing-private-methods-using.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;One of the more common uses of Java reflection is with JUnit, which is a popular unit testing framework for Java. One commonly used feature of JUnit uses annotations to mark certain methods as&amp;nbsp;&lt;em&gt;test&lt;/em&gt;&amp;nbsp;methods that which are meant to help you test your Java code. Then, when you actually decide to run your unit tests, JUnit will look for the methods which you marked with the &amp;ldquo;@Test&amp;rdquo; annotation, and will execute those methods.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;How to test private methods in JUnit?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="java_reflections" name="Reflections" type="sub"/>
    </question>
    <question id="147">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/02/serialization-top-25-interview.html"&gt;http://www.javamadesoeasy.com/2015/02/serialization-top-25-interview.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;img src="https://4.bp.blogspot.com/-0v0DwGs6Ep0/VJ10DnPNs7I/AAAAAAAACQo/QVe5P1_y4DQ/s1600/Serialization%2Bin%2BJava.JPG" /&gt;&lt;/p&gt;&lt;p&gt;Java provides a mechanism, called object serialization where an object can be represented as a sequence of bytes that includes the object&amp;#39;s data as well as information about the object&amp;#39;s type and the types of data stored in the object.&lt;/p&gt;&lt;p&gt;After a serialized object has been written into a file, it can be read from the file and deserialized that is, the type information and bytes that represent the object and its data can be used to recreate the object in memory.&lt;/p&gt;&lt;p&gt;Classes&amp;nbsp;&lt;strong&gt;ObjectInputStream&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;ObjectOutputStream&lt;/strong&gt;&amp;nbsp;are high-level streams that contain the methods for serializing and deserializing an object.&lt;/p&gt;&lt;p&gt;Serialization is process of converting object into byte stream.&lt;/p&gt;&lt;p&gt;Serialized object (byte stream) can be:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Transferred over network.&lt;/li&gt;&lt;li&gt;Persisted/saved into file.&lt;/li&gt;&lt;li&gt;Persisted/saved into database.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Once, object have have been transferred over network or persisted in file or in database, we could deserialize the object and retain its state as it is in which it was serialized&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;FileOutputStream fout = new FileOutputStream("ser.txt");
ObjectOutputStream oout = new ObjectOutputStream(fout);
System.out.println("Serialization process has started, serializing employee objects...");
oout.writeObject(object1);&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class="language-java"&gt;FileInputStreamfin=new FileInputStream("ser.txt");
ObjectInputStream oin=new ObjectInputStream(fin);
System.out.println("DeSerialization process has started, displaying employee objects...");
Employee emp;
emp=(Employee)oin.readObject();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Serialization and Deserialization&lt;/p&gt;</description>
        <topic parent_id="core_java" id="java_serialization" name="Serialization" type="sub"/>
    </question>
    <question id="69">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.javatpoint.com/steps-to-connect-to-the-database-in-java"&gt;http://www.javatpoint.com/steps-to-connect-to-the-database-in-java&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2012/12/top-10-jdbc-interview-questions-answers.html"&gt;http://javarevisited.blogspot.com/2012/12/top-10-jdbc-interview-questions-answers.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;strong&gt;Load the Driver&lt;/strong&gt;: First step is to load the database specific driver which communicates with database.&lt;br /&gt;
&lt;strong&gt;Make Connection&lt;/strong&gt;: Next step is get connection from the database using connection object, which is used to send SQL statement also and get result back from the database.&lt;br /&gt;
&lt;strong&gt;Get Statement object&lt;/strong&gt;: From connection object we can get statement object which is used to query the database&lt;br /&gt;
&lt;strong&gt;Execute the Query&lt;/strong&gt;:Using statement object we execute the SQL or database query and get result set from the query.&lt;br /&gt;
&lt;strong&gt;Close the connection&lt;/strong&gt;:After getting resultset and all required operation performed the last step should be closing the database connection&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;How to connect&amp;nbsp;to database using JDBC?&lt;/p&gt;
</description>
        <topic parent_id="j2ee" id="jdbc" name="JDBC" type="sub"/>
    </question>
    <question id="70">
        <references></references>
        <answer>&lt;p&gt;-&amp;nbsp;&lt;strong&gt;Statement&lt;/strong&gt;: It is used to run simple SQL statements like select and update. Statement interfaces use for general-purpose access to your database. It is useful when you are using static SQL statements at runtime. The Statement interface cannot accept parameters.&lt;br /&gt;&lt;br /&gt;-&amp;nbsp;&lt;strong&gt;PreparedStatement&lt;/strong&gt;: A SQL statement is pre-compiled and stored in a PreparedStatement object. It is used to run Pre compiled SQL. This object can then be used to efficiently execute this statement multiple times. The object of Prepared Statement class can be created using Connection.prepareStatement() method. This extends Statement interface.&lt;br /&gt;&lt;br /&gt;-&amp;nbsp;&lt;strong&gt;CallableStatement&lt;/strong&gt;: This interface is used to execute the stored procedures. This extends Prepared Statement interface. The object of Callable Statement class can be created using Connection.prepareCall() method.&lt;/p&gt;</answer>
        <description>&lt;p&gt;What are the types of statements in JDBC?&lt;/p&gt;</description>
        <topic parent_id="j2ee" id="jdbc" name="JDBC" type="sub"/>
    </question>
    <question id="168">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://javarevisited.blogspot.com/2012/06/junit4-annotations-test-examples-and.html"&gt;https://javarevisited.blogspot.com/2012/06/junit4-annotations-test-examples-and.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;@Before &lt;/strong&gt;(setUp method for each&amp;nbsp; @Test method)&lt;br /&gt;&lt;strong&gt;@BeforeClass&amp;nbsp;&lt;/strong&gt;(setUp method for whole Test class, runs only one per class)&lt;br /&gt;&lt;strong&gt;@After&amp;nbsp;&lt;/strong&gt;(tearDown method for each @Test method)&lt;br /&gt;&lt;strong&gt;@AfterClass&amp;nbsp;&lt;/strong&gt;(tearDown method for whole Test class, runs only one per class)&lt;br /&gt;&lt;strong&gt;@Test&lt;/strong&gt; (method which tests some scenario)&lt;br /&gt;&lt;strong&gt;@Ignore&lt;/strong&gt; (JUnit4 ignores method annotated with&amp;nbsp;@Ignore&amp;nbsp;and doesn&amp;#39;t run during test)&lt;br /&gt;&lt;strong&gt;@Test(timeout=500)&lt;/strong&gt; &amp;nbsp;(JUnit4 test will fail after 500 millisecond)&lt;br /&gt;&lt;strong&gt;@Test(expected=IllegalArgumentException.class)&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;JUnit Annotations and Life Cycle&lt;/p&gt;</description>
        <topic parent_id="testing" id="junits" name="JUnits" type="sub"/>
    </question>
    <question id="45">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.java2blog.com/2014/07/find-nth-element-from-end-of-linkedlist.html"&gt;http://www.java2blog.com/2014/07/find-nth-element-from-end-of-linkedlist.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/c-program-return-nth-node-linked-list/"&gt;http://www.crazyforcode.com/c-program-return-nth-node-linked-list/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;ul&gt;
	&lt;li&gt;Use two pointer firstPtr and secondPtr and initialize both to head of linkedlist&lt;/li&gt;
	&lt;li&gt;Move firstPtr by n-1 nodes.&lt;/li&gt;
	&lt;li&gt;Increment firstPtr and secondPtr until firstPtr.next not equal to null.&lt;/li&gt;
	&lt;li&gt;SecondPtr will be at nth from end node.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;public SingleNode getNthNodeFromEnd(SingleLinkedList list,int n) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;SingleNode head = list.head;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;SingleNode ptr1 = head;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;SingleNode ptr2 = head;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int i = 0;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(i!=n){&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;ptr1 = ptr1.next;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;i++;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(ptr1!=null){&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;ptr2 = ptr2.next;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;ptr1 = ptr1.next;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return ptr2;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;
</answer>
        <description>&lt;p&gt;How to find nth element from end of linked list?&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="linkedlist_dsa" name="Linked List" type="sub"/>
    </question>
    <question id="46">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.java2blog.com/2014/07/how-to-detect-loop-in-linkedlist-in.html"&gt;http://www.java2blog.com/2014/07/how-to-detect-loop-in-linkedlist-in.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.java2blog.com/2014/07/how-to-detect-loop-in-linkedlist-in.html"&gt;http://www.java2blog.com/2014/07/how-to-detect-loop-in-linkedlist-in.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;public static SingleNode getLoopEntry(SingleLinkedList loopedLL) {&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;SingleNode ptr1 = loopedLL.head;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;SingleNode ptr2 = loopedLL.head;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(ptr1!=null &amp;amp;&amp;amp; ptr2!=null &amp;amp;&amp;amp; ptr2.next!=null){&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;ptr1 = ptr1.next;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;ptr2 = ptr2.next.next;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(ptr1.data == ptr2.data){&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return ptr1.next;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;return null;&lt;br /&gt;
&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;
</answer>
        <description>&lt;p&gt;How to detect loop in a linked list?&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="linkedlist_dsa" name="Linked List" type="sub"/>
    </question>
    <question id="47">
        <references></references>
        <answer></answer>
        <description>&lt;p&gt;How to reverse a single linked list?&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="linkedlist_dsa" name="Linked List" type="sub"/>
    </question>
    <question id="48">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.mytechinterviews.com/singly-linked-list-delete-node"&gt;http://www.mytechinterviews.com/singly-linked-list-delete-node&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Supposed the linked list is 1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 4 and you are given the third node with value 3, the linked list should become 1 -&amp;gt; 2 -&amp;gt; 4 after calling your function.&lt;/p&gt;

&lt;pre&gt;
&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; deleteNode(ListNode node) {
    node.val = node.next.val;
    node.next = node.next.next;
}&lt;/pre&gt;
</answer>
        <description>&lt;p&gt;Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="linkedlist_dsa" name="Linked List" type="sub"/>
    </question>
    <question id="49">
        <references></references>
        <answer></answer>
        <description>&lt;p&gt;You have two numbers represented by a linked list, where each node contains a single digit. The digits are stored in reverse order, such that the 1&amp;rsquo;s digit is at the head of the list. Write a function that adds the two numbers and returns the sum as a linked list.&lt;br /&gt;
EXAMPLE&lt;br /&gt;
Input: (3 -&amp;gt; 1 -&amp;gt; 5) + (5 -&amp;gt; 9 -&amp;gt; 2)&lt;br /&gt;
Output: 8 -&amp;gt; 0 -&amp;gt; 8&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="linkedlist_dsa" name="Linked List" type="sub"/>
    </question>
    <question id="50">
        <references></references>
        <answer></answer>
        <description>&lt;p&gt;Write code to remove duplicates from an unsorted linked list.&lt;br /&gt;
FOLLOW UP&lt;br /&gt;
How would you solve this problem if a temporary buffer is not allowed?&lt;/p&gt;
</description>
        <topic parent_id="dsa" id="linkedlist_dsa" name="Linked List" type="sub"/>
    </question>
    <question id="108">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/2856/java-jvm-memory-model-memory-management-in-java"&gt;http://www.journaldev.com/2856/java-jvm-memory-model-memory-management-in-java&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html"&gt;https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/core-java/garbage-collection/revisiting-memory-management-and-garbage-collection-mechanisms-in-java/"&gt;http://howtodoinjava.com/core-java/garbage-collection/revisiting-memory-management-and-garbage-collection-mechanisms-in-java/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://dzone.com/articles/jvm-and-garbage-collection"&gt;https://dzone.com/articles/jvm-and-garbage-collection&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</references>
        <answer>&lt;p&gt;&lt;img src="http://cdn.journaldev.com/wp-content/uploads/2014/05/Java-Memory-Model-450x186.png" /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img src="https://4.bp.blogspot.com/-Db-jQ5O7vD4/VvPh3zEgudI/AAAAAAAAFQY/OkoQnacXX34PAyH-OBnDWgNOI-CQCr1_Q/s640/Garbage%2BCollection%2Band%2BJVM%2Bparameters.jpg" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Java (JVM) Memory Model&amp;nbsp;&lt;/p&gt;</description>
        <topic parent_id="core_java" id="memory_java" name="Memory" type="sub"/>
    </question>
    <question id="109">
        <references></references>
        <answer>&lt;p&gt;Young generation is the place where all the new objects are created. When young generation is filled, garbage collection is performed. This garbage collection is called&amp;nbsp;&lt;strong&gt;Minor GC&lt;/strong&gt;. Young Generation is divided into three parts &amp;ndash;&amp;nbsp;&lt;strong&gt;Eden Memory&lt;/strong&gt;&amp;nbsp;and two&amp;nbsp;&lt;strong&gt;Survivor Memory&lt;/strong&gt;&amp;nbsp;spaces.&lt;/p&gt;&lt;p&gt;Important Points about Young Generation Spaces:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Most of the newly created objects are located in the Eden memory space.&lt;/li&gt;&lt;li&gt;When Eden space is filled with objects, Minor GC is performed and all the survivor objects are moved to one of the survivor spaces.&lt;/li&gt;&lt;li&gt;Minor GC also checks the survivor objects and move them to the other survivor space. So at a time, one of the survivor space is always empty.&lt;/li&gt;&lt;li&gt;Objects that are survived after many cycles of GC, are moved to the Old generation memory space. Usually it&amp;rsquo;s done by setting a threshold for the age of the young generation objects before they become eligible to promote to Old generation.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Most applications have a high volume&amp;nbsp;of short lived objects. &amp;nbsp;Analyzing&amp;nbsp;all objects in an application during a GC would be slow and time consuming, so it therefore makes sense to separate the shortlived objects so that they can be quickly collected. As a result all new Objects are placed into the new generation. New gen is split up further:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Eden Space: all new objects are placed in here. &amp;nbsp;When it becomes full, a minor GC occurs. &amp;nbsp;all objects that are still referenced are then promoted to a&amp;nbsp;&lt;strong&gt;survivor space&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Survivor spaces: The implementation of survivor spaces varies based on the JVM but the premise is the same. &amp;nbsp;Each GC of the New Generation increments the age of objects in the survivor space. &amp;nbsp;When an object has survived a sufficient number of minor GCs (Defaults vary but normally start at 15) it will then be promoted to the Old Generation. &amp;nbsp;Some implementations use two survivor spaces, a From space and a To space. During each collection these will swap roles, with all promoted Eden objects and surviving objects move to the To space, leaving From empty.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A GC in the NewGen is known as a&amp;nbsp;&lt;strong&gt;minor GC&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;One of the benefits of using a New Generation is the reduction of&amp;nbsp;the impact of fragmentation. When an Object is garbage collected, it leaves a gap in the memory where it was. &amp;nbsp;We can compact the remaining Objects (a stop-the-world scenario) or we can leave them and slot new Objects in. &amp;nbsp; By having a Generational GC we limit the amount that this happens in the Old Generation as it is generally more stable which is good for improving latencies by reducing stop the world. &amp;nbsp;However if we do not compact we may find Objects cannot just fit in the spaces inbetween, perhaps due to size concerns. &amp;nbsp;If this is the case then you will see objects failing to be promoted from New Generation.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Young Generation / Minor GC&lt;/p&gt;</description>
        <topic parent_id="core_java" id="memory_java" name="Memory" type="sub"/>
    </question>
    <question id="15">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javascriptissexy.com/javascript-objects-in-detail/"&gt;http://javascriptissexy.com/javascript-objects-in-detail/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.phpied.com/3-ways-to-define-a-javascript-class/"&gt;http://www.phpied.com/3-ways-to-define-a-javascript-class/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://eloquentjavascript.net/1st_edition/chapter4.html"&gt;http://eloquentjavascript.net/1st_edition/chapter4.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Javascript object is an unordered list of primitive data types (and sometimes reference data types) that is stored as a series of name-value pairs. Each item in the list is called a&amp;nbsp;&lt;em&gt;property&lt;/em&gt;&amp;nbsp;(functions are called&amp;nbsp;&lt;em&gt;methods&lt;/em&gt;).&lt;/p&gt;&lt;p&gt;Creating Objects&lt;br /&gt;These are the two common ways to create objects: &lt;/p&gt;&lt;ol&gt;&lt;li&gt;Object Literals&lt;br /&gt;The most common and, indeed, the easiest way to create objects is with the object literal described here:&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;// This is an empty object initialized using the object literal notation​&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;​var myBooks = {};&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;​&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;​// This is an object with 4 items, again using object literal​&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;code class="language-javascript"&gt;​var mango = {

color: "yellow",

shape: "round",

sweetness: 8,

​​howSweetAmI: function () {

console.log("Hmm Hmm Good");

}

}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;&lt;li&gt;Object Constructor&lt;br /&gt; The second most common way to create objects is with Object constructor. A constructor is a function used for initializing new objects, and you use the new keyword to call the constructor.&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;code class="language-javascript"&gt;var mango = new Object ();

mango.color = "yellow";

mango.shape= "round";

mango.sweetness = 8;

mango.howSweetAmI = function () {

console.log("Hmm Hmm Good");

}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&lt;span style="line-height:1.6"&gt;While you can use some reserved word such as &amp;ldquo;for&amp;rdquo; as property names in your objects, it is wise to avoid this altogether.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Objects can contain any other data type, including Numbers, Arrays, and even other Objects.&lt;/p&gt;</answer>
        <description>&lt;p&gt;How to create an Object in javascript?&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="16">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://javascript.info/tutorial/array"&gt;http://javascript.info/tutorial/array&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.impressivewebs.com/javascript-array-methods-reference/"&gt;http://www.impressivewebs.com/javascript-array-methods-reference/&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.dyn-web.com/javascript/arrays/add.php"&gt;http://www.dyn-web.com/javascript/arrays/add.php&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://colintoh.com/blog/5-array-methods-that-you-should-use-today"&gt;http://colintoh.com/blog/5-array-methods-that-you-should-use-today&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.w3schools.com/js/js_array_methods.asp"&gt;http://www.w3schools.com/js/js_array_methods.asp&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;You can create an array using either&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;an array initializer (array literal) or&lt;/li&gt;
	&lt;li&gt;the&amp;nbsp;&lt;code&gt;Array&lt;/code&gt;&amp;nbsp;constructor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The array initializer (array literal) syntax is simple: a comma-separated list of values in square brackets. Here are some examples:&lt;/p&gt;

&lt;pre&gt;
var myArray1 = [1,3,5,7,9]      // an array with 5 elements
var myArray2 = [5]              // an array with 1 element
var myArray3 = [true,&amp;#39;Hi&amp;#39;,[7]]  // element types need not be the same!
&lt;/pre&gt;

&lt;p&gt;The&amp;nbsp;&lt;code&gt;Array&lt;/code&gt;&amp;nbsp;constructor syntax has three different forms. If you call the constructor with two or more arguments, the arguments initialize the array elements. If you only supply one argument&amp;nbsp;to the&amp;nbsp;&lt;code&gt;Array&lt;/code&gt;&amp;nbsp;constructor, the argument initializes the&amp;nbsp;&lt;em&gt;length&lt;/em&gt;&amp;nbsp;of the new array; the new array&amp;rsquo;s elements are not initialized. Finally, if you call the constructor without arguments, the new array&amp;rsquo;s length is set to zero, and its elements are not initialized. Here are examples:&lt;/p&gt;

&lt;pre&gt;
var myArray4 = new Array(1,3,5,7,9)  // an array with 5 elements
var myArray5 = new Array(100)        // an empty array of length 100
var myArray6 = new Array()           // an empty array of length 0&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Delete:&lt;/strong&gt; Two different ways to delete an element&amp;nbsp;&lt;code&gt;myArray[n]&lt;/code&gt;&amp;nbsp;from&amp;nbsp;&lt;code&gt;myArray&lt;/code&gt;&amp;nbsp;are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;delete myArray[n]&lt;/code&gt;&amp;nbsp;(faster, but leaves a gap at index&amp;nbsp;&lt;code&gt;n&lt;/code&gt;)&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;myArray.splice(n,1)&lt;/code&gt;&amp;nbsp;(slower, but does not leave a gap in the array&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Insert:&amp;nbsp;&lt;/strong&gt;The array&amp;nbsp;&lt;code&gt;push&lt;/code&gt;&amp;nbsp;method allows you to add one or more elements to the end of an array.&lt;/p&gt;

&lt;p&gt;For more examples, please see References section&lt;/p&gt;
</answer>
        <description>&lt;p&gt;How to create an array in Javascript? What are the important array actions/methods?&lt;/p&gt;
</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="55">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.w3schools.com/js/js_datatypes.asp"&gt;http://www.w3schools.com/js/js_datatypes.asp&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</references>
        <answer>&lt;p&gt;Following are the JavaScript types:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Number&lt;/li&gt;&lt;li&gt;String&lt;/li&gt;&lt;li&gt;Boolean&lt;/li&gt;&lt;li&gt;Function&lt;/li&gt;&lt;li&gt;Object&lt;/li&gt;&lt;li&gt;Null&lt;/li&gt;&lt;li&gt;Undefined&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;What are JavaScript types?&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="56">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.w3schools.com/js/js_scope.asp"&gt;http://www.w3schools.com/js/js_scope.asp&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.javatpoint.com/javascript-global-variable"&gt;http://www.javatpoint.com/javascript-global-variable&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;A&amp;nbsp;&lt;strong&gt;JavaScript global variable&lt;/strong&gt;&amp;nbsp;is declared outside the function or declared with window object. It can be accessed from any function.&lt;/p&gt;

&lt;p&gt;To declare JavaScript global variables inside function, you need to use&amp;nbsp;&lt;strong&gt;window object&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you assign a value to a variable that has not been declared, it will automatically become a&amp;nbsp;&lt;strong&gt;GLOBAL&lt;/strong&gt;&amp;nbsp;variable.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;What is a Global Variable in javascript?&lt;/p&gt;
</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="57">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://java67.blogspot.de/2013/07/difference-between-equality-strict-vs-operator-in-JavaScript-Interview-Question.html"&gt;http://java67.blogspot.de/2013/07/difference-between-equality-strict-vs-operator-in-JavaScript-Interview-Question.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://jquery-howto.blogspot.de/2012/11/jquery-double-tripple-equal-difference.html"&gt;http://jquery-howto.blogspot.de/2012/11/jquery-double-tripple-equal-difference.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;A quick and short explanation is that&amp;nbsp;&lt;code&gt;==&lt;/code&gt;&amp;nbsp;does type coercion (conversion) before checking for equality; and&amp;nbsp;&lt;code&gt;===&lt;/code&gt;&amp;nbsp;does strict equation which requires values to have the same type as well.&lt;/p&gt;

&lt;p&gt;Here is what it means:&lt;/p&gt;

&lt;pre&gt;
0 == false &amp;nbsp; &amp;nbsp; // true
0 === false &amp;nbsp; &amp;nbsp;// false, because they have different types (int, bool)
1 == &amp;quot;1&amp;quot; &amp;nbsp; &amp;nbsp; &amp;nbsp; // true
1 === &amp;quot;1&amp;quot; &amp;nbsp; &amp;nbsp; &amp;nbsp;// false, because they have different types (int, string)
null == undefined // true
null === undefined // false&lt;/pre&gt;
</answer>
        <description>&lt;p&gt;what is the difference between == and === equal Operator in JavaScript?&lt;/p&gt;
</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="149">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://wildlyinaccurate.com/understanding-javascript-inheritance-and-the-prototype-chain/"&gt;https://wildlyinaccurate.com/understanding-javascript-inheritance-and-the-prototype-chain/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/06/07/understanding-javascript-prototypes/"&gt;https://javascriptweblog.wordpress.com/2010/06/07/understanding-javascript-prototypes/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Almost everything in JavaScript is an object, which you can think of&amp;nbsp;as sort of like associative arrays - objects contain&amp;nbsp;named properties which can be accessed with&amp;nbsp;&lt;code&gt;obj.propName&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;obj[&amp;#39;propName&amp;#39;]&lt;/code&gt;. Each object has an internal property called&amp;nbsp;&lt;em&gt;prototype&lt;/em&gt;, which links to another object. The prototype object has a prototype object of its own, and so on &amp;ndash;&amp;nbsp;this is referred to as the&amp;nbsp;&lt;em&gt;prototype chain&lt;/em&gt;. If you follow an object&amp;rsquo;s prototype chain, you will eventually reach the core&amp;nbsp;&lt;code&gt;Object&lt;/code&gt;&amp;nbsp;prototype whose prototype is&amp;nbsp;&lt;code&gt;null&lt;/code&gt;, signalling the end of the chain.&lt;/p&gt;&lt;p&gt;So what is the prototype chain used for? When you request a property which the object does not contain, JavaScript will look down the prototype chain until it either finds the requested property, or until it reaches the end of the chain. This behaviour is what allows us to create &amp;ldquo;classes&amp;rdquo;, and implement inheritance.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function Animal() {}

var animal = new Animal();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can add properties to the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;class in two ways: either by setting them as&amp;nbsp;&lt;em&gt;instance properties&lt;/em&gt;, or by adding them to the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;prototype.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function Animal(name) {
    // Instance properties can be set on each instance of the class
    this.name = name;
}

// Prototype properties are shared across all instances of the class. However, they can still be overwritten on a per-instance basis with the `this` keyword.
Animal.prototype.speak = function() {
    console.log("My name is " + this.name);
};

var animal = new Animal('Monty');
animal.speak(); // My name is Monty&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The structure of the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;object becomes clear when we inspect it in the console. We can see that the&amp;nbsp;&lt;code&gt;name&lt;/code&gt;&amp;nbsp;property belongs to the object itself, while&amp;nbsp;&lt;code&gt;speak&lt;/code&gt;&amp;nbsp;is part of the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;prototype.&lt;/p&gt;&lt;p&gt;&lt;img src="https://wildlyinaccurate.com/assets/Animal.png" /&gt;&lt;/p&gt;&lt;p&gt;Now let&amp;rsquo;s look at how we can extend the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;class to create a&amp;nbsp;&lt;code&gt;Cat&lt;/code&gt;&amp;nbsp;class:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function Cat(name) {
    Animal.call(this, name);
}

Cat.prototype = new Animal();

var cat = new Cat('Monty');
cat.speak(); // My name is Monty
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;What we are doing here is setting&amp;nbsp;&lt;code&gt;Cat&lt;/code&gt;&amp;rsquo;s prototype to an instance of&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;, so that&lt;code&gt;Cat&lt;/code&gt;&amp;nbsp;inherits all of&amp;nbsp;&lt;code&gt;Animal&amp;#39;s&lt;/code&gt;&amp;nbsp;properties. We&amp;rsquo;re also using&amp;nbsp;&lt;code&gt;Animal.call&lt;/code&gt;&amp;nbsp;to inherit the&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;constructor (sort of like&amp;nbsp;&lt;code&gt;parent&lt;/code&gt;&amp;nbsp;or&amp;nbsp;&lt;code&gt;super&lt;/code&gt;&amp;nbsp;in other languages).&amp;nbsp;&lt;code&gt;call&lt;/code&gt;&amp;nbsp;is a special function which lets us call a function and specify the value of&amp;nbsp;&lt;code&gt;this&lt;/code&gt;&amp;nbsp;&lt;em&gt;within that function&lt;/em&gt;. So when&amp;nbsp;&lt;code&gt;this.name&lt;/code&gt;&amp;nbsp;is set inside the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;nbsp;constructor, it&amp;rsquo;s the&amp;nbsp;&lt;code&gt;Cat&lt;/code&gt;&amp;rsquo;s name property being set, not the&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;rsquo;s.&lt;/p&gt;&lt;p&gt;Let&amp;rsquo;s take a look at the&amp;nbsp;&lt;code&gt;Cat&lt;/code&gt;&amp;nbsp;object to get a better view of what&amp;rsquo;s going on.&lt;/p&gt;&lt;p&gt;&lt;img src="https://wildlyinaccurate.com/assets/Cat.png" /&gt;&lt;/p&gt;&lt;p&gt;The&amp;nbsp;&lt;code&gt;Cat&lt;/code&gt;&amp;nbsp;object has its own&amp;nbsp;&lt;code&gt;name&lt;/code&gt;&amp;nbsp;instance property, like we expected. When we look at the object&amp;rsquo;s prototype we see that it has also inherited&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;&amp;rsquo;s&amp;nbsp;&lt;code&gt;name&lt;/code&gt;&amp;nbsp;instance property as well as the&amp;nbsp;&lt;code&gt;speak&lt;/code&gt;&amp;nbsp;prototype property. This is where the prototype chain comes in &amp;ndash; when we request&amp;nbsp;&lt;code&gt;cat.name&lt;/code&gt;, JavaScript finds the&amp;nbsp;&lt;code&gt;name&lt;/code&gt;&amp;nbsp;instance property and doesn&amp;rsquo;t bother going down the prototype chain. However when we request&lt;code&gt;cat.speak&lt;/code&gt;, JavaScript has to travel down the prototype chain until it finds the&amp;nbsp;&lt;code&gt;speak&lt;/code&gt;property inherited from&amp;nbsp;&lt;code&gt;Animal&lt;/code&gt;.&lt;/p&gt;</answer>
        <description>&lt;p&gt;JavaScript Prototypes&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="150">
        <references></references>
        <answer>&lt;p&gt;A closure is an inner function that has access to the variables in the outer (enclosing) function&amp;rsquo;s scope chain. The closure has access to variables in three scopes; specifically: (1) variable in its own scope, (2) variables in the enclosing function&amp;rsquo;s scope, and (3) global variables.&lt;/p&gt;&lt;p&gt;Here is a simple example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;var globalVar = "xyz";

(function outerFunc(outerArg) {
  var outerVar = 'a';
  
  (function innerFunc(innerArg) {
    var innerVar = 'b';
    
    console.log(
      "outerArg = " + outerArg + "\n" +
      "innerArg = " + innerArg + "\n" +
      "outerVar = " + outerVar + "\n" +
      "innerVar = " + innerVar + "\n" +
      "globalVar = " + globalVar);
    
  })(456);
})(123);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the above example, variables from&amp;nbsp;&lt;code&gt;innerFunc&lt;/code&gt;,&amp;nbsp;&lt;code&gt;outerFunc&lt;/code&gt;, and the global namespace are&amp;nbsp;&lt;strong&gt;all&lt;/strong&gt;&amp;nbsp;in scope in the&amp;nbsp;&lt;code&gt;innerFunc&lt;/code&gt;. The above code will therefore produce the following output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;outerArg = 123
innerArg = 456
outerVar = a
innerVar = b
globalVar = xyz&lt;/code&gt;&lt;/pre&gt;</answer>
        <description>&lt;p&gt;Closure in JavaScript&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="151">
        <references></references>
        <answer>&lt;p&gt;One of the drawbacks of creating true private methods in JavaScript is that they are very memory-inefficient, as a new copy of the method would be created for each instance.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;var Employee = function (name, company, salary) {
    this.name = name || "";       //Public attribute default value is null
    this.company = company || ""; //Public attribute default value is null
    this.salary = salary || 5000; //Public attribute default value is null

    // Private method
    var increaseSalary = function () {
        this.salary = this.salary + 1000;
    };

    // Public method
    this.dispalyIncreasedSalary = function() {
        increaseSlary();
        console.log(this.salary);
    };
};

// Create Employee class object
var emp1 = new Employee("John","Pluto",3000);
// Create Employee class object
var emp2 = new Employee("Merry","Pluto",2000);
// Create Employee class object
var emp3 = new Employee("Ren","Pluto",2500);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here each instance variable&amp;nbsp;&lt;code&gt;emp1&lt;/code&gt;,&amp;nbsp;&lt;code&gt;emp2&lt;/code&gt;,&amp;nbsp;&lt;code&gt;emp3&lt;/code&gt;&amp;nbsp;has its own copy of the&amp;nbsp;&lt;code&gt;increaseSalary&lt;/code&gt;&amp;nbsp;private method.&lt;/p&gt;&lt;p&gt;So, as a recommendation, don&amp;rsquo;t use private methods unless it&amp;rsquo;s necessary.&lt;/p&gt;</answer>
        <description>&lt;p&gt;What is the drawback of creating true private methods in JavaScript?&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="152">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.laurencegellert.com/2012/01/associative-arrays-in-javascript/"&gt;http://www.laurencegellert.com/2012/01/associative-arrays-in-javascript/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;If we have a JavaScript associative array&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  var counterArray = {
           A : 3,
           B : 4
  };
  counterArray["C"] = 1;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;How can we calculate the length of the above associative array&amp;#39;s&amp;nbsp;&lt;code&gt;counterArray&lt;/code&gt;?&lt;/p&gt;&lt;p&gt;There are no in-built functions and properties available to calculate the length of associative array object here. However, there are other ways by which we can calculate the length of an associative array object. In addition to this, we can also extend an&amp;nbsp;&lt;code&gt;Object&lt;/code&gt;&amp;nbsp;by adding a method or property to the prototype in order to calculate length. However, extending an object might break enumeration in various libraries or might create cross-browser issues, so it&amp;#39;s not recommended unless it&amp;#39;s necessary. Again, there are various ways by which we can calculate length.&lt;/p&gt;&lt;p&gt;&lt;code&gt;Object&lt;/code&gt;&amp;nbsp;has the&amp;nbsp;&lt;code&gt;keys&lt;/code&gt;&amp;nbsp;method which can be used to calculate the length of an object:&lt;/p&gt;&lt;pre&gt;&lt;code&gt; Object.keys(counterArray).length // Output 2 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can also calculate the length of an object by iterating through an object and by counting the object&amp;#39;s own property.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function getSize(object){
    var count = 0;
    for(key in object){
      // hasOwnProperty method check own property of object
      if(object.hasOwnProperty(key)) count++;
    }
    return count;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can also add a&amp;nbsp;&lt;code&gt;length&lt;/code&gt;&amp;nbsp;method directly on&amp;nbsp;&lt;code&gt;Object&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  Object.length = function(){
      var count = 0;
    for(key in object){
      // hasOwnProperty method check own property of object
      if(object.hasOwnProperty(key)) count++;
    }
    return count;
  }
  //Get the size of any object using
  console.log(Object.length(counterArray))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Bonus&lt;/strong&gt;: We can also use&amp;nbsp;&lt;code&gt;Underscore&lt;/code&gt;&amp;nbsp;(recommended, As it&amp;#39;s lightweight) to calculate object length.&lt;/p&gt;</answer>
        <description>&lt;p&gt;JavaScript Associative Array and it&amp;#39;s length&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="153">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://sunfishempire.wordpress.com/2014/08/19/5-ways-to-use-a-javascript-hashmap/"&gt;https://sunfishempire.wordpress.com/2014/08/19/5-ways-to-use-a-javascript-hashmap/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;&lt;code class="language-javascript"&gt;function HashMap() {
    this.items = {};
}
HashMap.prototype.put = function(key, value) {
    this.items[key] = value;
}

HashMap.prototype.get = function(key) {
    for (var k in this.items) {
        if (k == key) {
            return this.items[key];
        }
    }
    return undefined;
}

HashMap.prototype.remove = function(key) {
    for (var k in this.items) {
        if (k == key) {
            delete this.items[key];
            return true;
        }
    }
    return false;
}

HashMap.prototype.display = function() {
    for (var k in this.items) {
        console.log(this.items[k]);
    }
}

var map = new HashMap();
map.put(1, "one");
map.put(2, "two");
map.put(3, "three");
map.put(3, "four");
map.display();
console.log(map.get(7));
map.remove(2);
map.display();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;HashMap in JavaScript&lt;/p&gt;</description>
        <topic parent_id="javascript" id="plain_javascript" name="Plain/Vanilla Javascript" type="sub"/>
    </question>
    <question id="35">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/burning-ropes-puzzle/"&gt;http://www.crazyforcode.com/burning-ropes-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;He will burn one of the rope at both the ends and the second rope at one end. After half an hour, the first one burns completely and at this point of time, he will burn the other end of the second rope so now it will take 15 mins more to completely burn. so total time is 30+15 i.e. 45mins.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;A man has two ropes of varying thickness (Those two ropes are not identical, they aren&amp;rsquo;t the same density nor the same length nor the same width). Each rope burns in 60 minutes. He actually wants to measure 45 mins. How can he measure 45 mins using only these two ropes.&lt;br /&gt;
He can&amp;rsquo;t cut the one rope in half because the ropes are non-homogeneous and he can&amp;rsquo;t be sure how long it will burn.&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="36">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/bad-king-wine-bottles-puzzle/"&gt;http://www.crazyforcode.com/bad-king-wine-bottles-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Number the bottles 1 to 1000 and write the number in binary format.&lt;/p&gt;

&lt;p&gt;bottle 1 = 0000000001 (10 digit binary)&lt;/p&gt;

&lt;p&gt;bottle 2 = 0000000010&lt;/p&gt;

&lt;p&gt;bottle 500 = 0111110100&lt;/p&gt;

&lt;p&gt;bottle 1000 = 1111101000&lt;/p&gt;

&lt;p&gt;Now take 10 prisoners and number them 1 to 10, now let prisoner 1 take a sip from every bottle that has a 1 in its least significant bit. Let prisoner 10 take a sip from every bottle with a 1 in its most significant bit. etc.&lt;/p&gt;

&lt;p&gt;prisoner = 10 9 8 7 6 5 4 3 2 1&lt;/p&gt;

&lt;p&gt;bottle 924 = 1 1 1 0 0 1 1 1 0 0&lt;/p&gt;

&lt;p&gt;For instance, bottle no. 924 would be sipped by 10,9,8,5,4 and 3. That way if bottle no. 924 was the poisoned one, only those prisoners would die.&lt;br /&gt;
After four weeks, line the prisoners up in their bit order and read each living prisoner as a 0 bit and each dead prisoner as a 1 bit. The number that you get is the bottle of wine that was poisoned.&lt;br /&gt;
1000 is less than 1024 (2^10). If there were 1024 or more bottles of wine it would take more than 10 prisoners.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;A bad king has a cellar of 1000 bottles of delightful and very expensive wine. A neighboring queen plots to kill the bad king and sends a servant to poison the wine. Fortunately (or say unfortunately) the bad king&amp;rsquo;s guards catch the servant after he has only poisoned one bottle. Alas, the guards don&amp;rsquo;t know which bottle but know that the poison is so strong that even if diluted 100,000 times it would still kill the king. Furthermore, it takes one month to have an effect. The bad king decides he will get some of the prisoners in his vast dungeons to drink the wine. Being a clever bad king he knows he needs to murder no more than 10 prisoners &amp;ndash; believing he can fob off such a low death rate &amp;ndash; and will still be able to drink the rest of the wine (999 bottles) at his anniversary party in 5 weeks time. Explain what is in mind of the king, how will he be able to do so ? (of course he has less then 1000 prisoners in his prisons)&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="37">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/gold-bar-cuts-puzzle/"&gt;http://www.crazyforcode.com/gold-bar-cuts-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Lets split the chain as,&lt;br /&gt;
&lt;a href="http://www.crazyforcode.com/wp-content/uploads/2013/07/gold-bar-cut.png"&gt;&lt;img alt="gold bar cut puzzle" src="http://www.crazyforcode.com/wp-content/uploads/2013/07/gold-bar-cut-300x73.png" style="height:auto; margin:20px 0px; width:300px" /&gt;&lt;/a&gt;&lt;br /&gt;
Day 1: Give A (+1)&lt;br /&gt;
Day 2: Get back A, give B (-1, +2)&lt;br /&gt;
Day 3: Give A (+1)&lt;br /&gt;
Day 4:Get back A and B, give C (-2,-1,+4)&lt;br /&gt;
Day 5:Give A (+1)&lt;br /&gt;
Day 6:Get back A, give B &amp;nbsp;(-1,+2)&lt;br /&gt;
Day 7:Give A (+1)&lt;/p&gt;
</answer>
        <description>&lt;p&gt;You&amp;rsquo;ve got someone working for you for seven days and a gold bar to pay him. The gold bar is segmented into seven connected pieces. You must give them a piece of gold at the end of every day.&amp;nbsp;What and where are the fewest number of cuts to the bar of gold that will allow you to pay him 1/7th each day?&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.crazyforcode.com/wp-content/uploads/2013/07/gold-bar.png"&gt;&lt;img alt="gold bar puzzle for interview" src="http://www.crazyforcode.com/wp-content/uploads/2013/07/gold-bar-300x56.png" style="height:auto; margin:20px 0px; width:300px" /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="38">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/10-identical-bottles-pills/"&gt;http://www.crazyforcode.com/10-identical-bottles-pills/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;First, arrange the bottles on shelf and now take, 1 pill from the first bottle, 2 pills from the second bottle, 3 pills from the third bottle, and so on. Ideally you would have (10)*(11)/2=55 pills weighing 55 grams, when you put the entire pile of pills on the weighing scale.The deviation from 55 g would tell you which bottle contains the heavy pills.&lt;/p&gt;

&lt;p&gt;If it is .1 gram more, it is 1st bottle which has heavy pill, if it is .2 more, gram 2nd bottle has heavy pills, if it is .3 more, gram 3rd bottle has heavy pills.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;We have 10 identical bottles of identical pills (each bottle contain hundred of pills). Out of 10 bottles 9 have 1 gram of pills but 1 bottle has pills of weight of 1.1 gram. Given a measurement scale, how would you find the heavy bottle? You can use the scale only once.&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="39">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/8-balls-puzzle/"&gt;http://www.crazyforcode.com/8-balls-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Defective ball is light&lt;/p&gt;

&lt;p&gt;Make three Groups G1 &amp;ndash; 3 balls G2 &amp;ndash; 3 balls G3 &amp;ndash; 2 balls&lt;/p&gt;

&lt;p&gt;First weight- G1 and G2 if G1 = G2 then defective ball in G3 ,&lt;br /&gt;
weigh the the 2 balls in G3 if EQUAL then 3rd ball of G3 is defective&lt;br /&gt;
else whichever lighter in 1st or 2nd is defective ball&lt;/p&gt;

&lt;p&gt;else if G1 &amp;lt; G2 defective ball in G1&lt;br /&gt;
weigh 1 and 2 ball of G1 if EQUAL then 3rd ball of G1 is defective&lt;br /&gt;
else whichever lighter in 1st or 2nd is defective ball&lt;/p&gt;

&lt;p&gt;else if G1 &amp;gt; G2 defective in G2&lt;br /&gt;
Again in 1 comparison we can find the odd ball.&lt;/p&gt;

&lt;p&gt;So by following above steps in 2 steps, lighter ball can be find out.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;You have 8 balls. One of them is defective and weighs less than others. You have a balance to measure balls against each other. In 2&amp;nbsp;weighing,&amp;nbsp;how do you find the defective one?&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="40">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/10-coins-puzzle/"&gt;http://www.crazyforcode.com/10-coins-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Make 2 piles with equal number of coins. Now, flip all the coins in one of the pile.&lt;/p&gt;

&lt;p&gt;How this will work? lets take an example.&lt;/p&gt;

&lt;p&gt;So initially there are 5 heads, so suppose you divide it in 2 piles.&lt;/p&gt;

&lt;p&gt;Case:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P1 : H H T T T&lt;br /&gt;
P2 : H H H T T&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now when P1 will be flipped&lt;br /&gt;
P1 : T T H H H&lt;/p&gt;

&lt;p&gt;P1(Heads) = P2(Heads)&lt;/p&gt;

&lt;p&gt;Another case:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P1 : H T T T T&lt;br /&gt;
P2 : H H H H T&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now when P1 will be flipped&lt;br /&gt;
P1 : H H H H T&lt;/p&gt;

&lt;p&gt;P1(Heads) = P2(Heads)&lt;/p&gt;
</answer>
        <description>&lt;p&gt;You are blindfolded and 10 coins are place in front of you on table. You are allowed to touch the coins, but can&amp;rsquo;t tell which way up they are by feel. You are told that there are 5 coins head up, and 5 coins tails up but not which ones are which. How do you make two piles of coins each with the same number of heads up? You can flip the coins any number of times.&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="41">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/rope-escape-puzzle/"&gt;http://www.crazyforcode.com/rope-escape-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;1. Cut the rope into two parts, 50m and 100m.&lt;br /&gt;
2. Tie one end of the 50m piece to the top hook and make a knot at the other end with a fixed loop.&lt;br /&gt;
3. Pass the 100m piece through the loop and tie its two ends to form a loop.&lt;br /&gt;
4. Now, Jim can climb down 100m to the ledge. Now, cut the 100m loop using the knife. Collect this piece by holding one end, pulling at it and letting the other end slide through the loop.&lt;br /&gt;
5. Finally, tie one end of this 100m piece to the hook at the ledge and slide.&lt;/p&gt;

&lt;p&gt;Jim escaped.&amp;nbsp;&lt;img alt=";)" src="http://www.crazyforcode.com/wp-includes/images/smilies/icon_wink.gif" style="height:auto !important; margin:0px" /&gt;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Jim is trapped at the top of a building which is 200m high. He has with him a rope 150m long. There is a hook at the top where he stands. Looking down, he notices that midway between him and the ground, at a height of 100m, there is a ledge with another hook. In his pocket lies a sharp knife. how might he be able to come down using the rope, the two hooks and the knife?&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="42">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/secret-mail-problem/"&gt;http://www.crazyforcode.com/secret-mail-problem/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Send the box with the lock to B.&lt;/p&gt;

&lt;p&gt;B can&amp;rsquo;t open it, but can put another lock on the box.&lt;/p&gt;

&lt;p&gt;B sends this box with the 2 locks back to A, A unlock his lock and send it back to B again.&lt;/p&gt;

&lt;p&gt;So there is just B&amp;rsquo;s lock on the box and B can now open it.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;A wants to send a secret message to his friend B in the mail.&lt;br /&gt;
But C (A&amp;rsquo;s Friend), who A don&amp;rsquo;t trust, has access to all A&amp;rsquo;s mail. So A put his message in a box with a lock. But A is not allowed to send a key!&lt;/p&gt;

&lt;p&gt;How can A send his message through securely?&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="43">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/3-mislabeled-jars/"&gt;http://www.crazyforcode.com/3-mislabeled-jars/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;Let&amp;rsquo;s take a scenario. Suppose you pick from jar labelled as Apple and Oranges and you got Apple from it. That means that jar should be Apple as it is incorrectly labelled. So it has to be Apple jar.&lt;br /&gt;
Now the jar labelled Oranges has to be Mixed as it cannot be the Oranges jar as they are wrongly labelled and the jar labelled Apple has to be Oranges.&lt;/p&gt;

&lt;p&gt;Similar scenario applies if it&amp;rsquo;s a Oranges taken out from the jar labelled as Apple and Oranges. So&amp;nbsp;you need to pick just one fruit from the jar labelled as Apple and Oranges to correctly label the jars.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;You have 3 jars that are all mislabeled. One jar contains Apple, another contains Oranges and the third jar contains a mixture of both Apple and Oranges.&lt;/p&gt;

&lt;p&gt;You are allowed to pick as many fruits as you want from each jar to fix the labels on the jars. What is the minimum number of fruits that you have to pick and from which jars to correctly label them?&lt;/p&gt;

&lt;p&gt;Labels on jars are as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.crazyforcode.com/wp-content/uploads/2013/07/Three_mislabeled_jars.jpg"&gt;&lt;img alt="3 mislabeled jars of Apple and Orange" src="http://www.crazyforcode.com/wp-content/uploads/2013/07/Three_mislabeled_jars-300x152.jpg" style="height:auto; margin:20px auto; width:300px" /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="44">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.crazyforcode.com/100-lockerdoors-puzzle/"&gt;http://www.crazyforcode.com/100-lockerdoors-puzzle/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;You can figure out that for any given door, say door #38, you will visit it for every divisor it has. so &amp;nbsp;has 1 &amp;amp; 38, 2 &amp;amp; 19. so on pass 1 i will open the door, pass 2 i will close it, pass 19 open, pass 38 close. For every pair of divisors the door will just end up back in its initial state. so you might think that every door will end up closed? well what about door #9. 9 has the divisors 1 &amp;amp; 9, 3 &amp;amp; 3. but 3 is repeated because 9 is a perfect square, so you will only visit door #9, on pass 1, 3, and 9&amp;hellip; leaving it open at the end. only perfect square doors will be open at the end.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;You have 100 doors in a row that are all initially closed. you make 100 passes by the doors starting with the first door every time. the first time through you visit every door and toggle the door (if the door is closed, you open it, if its open, you close it). the second time you only visit every 2nd door (door #2, #4, #6). the third time, every 3rd door (door #3, #6, #9), ec, until you only visit the 100th door.&lt;/p&gt;

&lt;p&gt;What state are the doors in after the last pass? Which are open which are closed?&lt;/p&gt;
</description>
        <topic parent_id="home" id="puzzles" name="Puzzles" type="main"/>
    </question>
    <question id="121">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.1keydata.com/database-normalization/first-normal-form-1nf.php"&gt;https://www.1keydata.com/database-normalization/first-normal-form-1nf.php&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/First_normal_form"&gt;https://en.wikipedia.org/wiki/First_normal_form&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;First normal form&lt;/strong&gt;&amp;nbsp;(&lt;strong&gt;1NF&lt;/strong&gt;) is a property of a&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Relation_(database)"&gt;relation&lt;/a&gt;&amp;nbsp;in a&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Relational_database"&gt;relational database&lt;/a&gt;. A relation is in first normal form if and only if the&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Data_domain"&gt;domain&lt;/a&gt;&amp;nbsp;of each&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Column_(database)"&gt;attribute&lt;/a&gt;&amp;nbsp;contains only&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/First_normal_form#Atomicity"&gt;atomic&lt;/a&gt;&amp;nbsp;(indivisible) values, and the value of each attribute contains only a single value from that domain.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;First normal form enforces these criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Eliminate repeating groups in individual tables.&lt;/li&gt;&lt;li&gt;Create a separate table for each set of related data.&lt;/li&gt;&lt;li&gt;Identify each set of related data with a primary key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As per First Normal Form, no two Rows of data must contain repeating group of information i.e each set of column must have a unique value, such that multiple columns cannot be used to fetch the same row. Each table should be organized into rows, and each row should have a primary key that distinguishes it as unique.&lt;/p&gt;&lt;p&gt;The&amp;nbsp;&lt;strong&gt;Primary key&lt;/strong&gt;&amp;nbsp;is usually a single column, but sometimes more than one column can be combined to create a single primary key. For example consider a table which is not in First normal form&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Student Table :&lt;/strong&gt;&lt;/p&gt;&lt;table border="1"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Student&lt;/th&gt;&lt;th&gt;Age&lt;/th&gt;&lt;th&gt;Subject&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Adam&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;Biology, Maths&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Alex&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;Maths&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stuart&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Maths&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;In First Normal Form, any row must not have a column in which more than one value is saved, like separated with commas. Rather than that, we must separate such data into multiple rows.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Student Table following 1NF will be :&lt;/strong&gt;&lt;/p&gt;&lt;table border="1"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Student&lt;/th&gt;&lt;th&gt;Age&lt;/th&gt;&lt;th&gt;Subject&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Adam&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;Biology&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Adam&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;Maths&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Alex&lt;/td&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;Maths&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stuart&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;Maths&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Using the First Normal Form, data redundancy increases, as there will be many columns with same data in multiple rows but each row as a whole will be unique.&lt;/p&gt;</answer>
        <description>&lt;p&gt;First Normal Form (1NF) : Normalization&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="122">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.1keydata.com/database-normalization/second-normal-form-2nf.php"&gt;https://www.1keydata.com/database-normalization/second-normal-form-2nf.php&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.studytonight.com/dbms/database-normalization.php"&gt;http://www.studytonight.com/dbms/database-normalization.php&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.essentialsql.com/get-ready-to-learn-sql-10-database-second-normal-form-explained-in-simple-english/"&gt;http://www.essentialsql.com/get-ready-to-learn-sql-10-database-second-normal-form-explained-in-simple-english/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;A table that is in&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/First_normal_form"&gt;first normal form&lt;/a&gt;&amp;nbsp;(1NF) must meet additional criteria if it is to qualify for second normal form. Specifically: a table is in 2NF if it is in 1NF and no non-prime attribute is&lt;a href="https://en.wikipedia.org/wiki/Functional_dependency"&gt;dependent&lt;/a&gt;&amp;nbsp;on any proper&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Subset"&gt;subset&lt;/a&gt;&amp;nbsp;of any&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Candidate_key"&gt;candidate key&lt;/a&gt;&amp;nbsp;of the table.&amp;nbsp;&lt;strong&gt;A non-prime attribute of a table&lt;/strong&gt;&amp;nbsp;is an attribute that is not a part of any candidate key of the table.&lt;/p&gt;&lt;p&gt;Put simply, a table is in 2NF if it is in 1NF and every non-prime attribute of the table is dependent on the whole of every candidate key.&lt;/p&gt;&lt;p&gt;A table is in 2nd&amp;nbsp;Normal Form if:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The table is in 1st&amp;nbsp;normal form, and&lt;/li&gt;&lt;li&gt;All the non-key columns are dependent on the table&amp;rsquo;s primary key.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Multiple candidate keys occur in the following table:&lt;/p&gt;&lt;table border="1"&gt;&lt;caption&gt;Electric Toothbrush Models&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Manufacturer&lt;/th&gt;&lt;th&gt;Model&lt;/th&gt;&lt;th&gt;Model Full Name&lt;/th&gt;&lt;th&gt;Manufacturer Country&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Forte&lt;/td&gt;&lt;td&gt;X-Prime&lt;/td&gt;&lt;td&gt;Forte X-Prime&lt;/td&gt;&lt;td&gt;Italy&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Forte&lt;/td&gt;&lt;td&gt;Ultraclean&lt;/td&gt;&lt;td&gt;Forte Ultraclean&lt;/td&gt;&lt;td&gt;Italy&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dent-o-Fresh&lt;/td&gt;&lt;td&gt;EZbrush&lt;/td&gt;&lt;td&gt;Dent-o-Fresh EZbrush&lt;/td&gt;&lt;td&gt;USA&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Kobayashi&lt;/td&gt;&lt;td&gt;ST-60&lt;/td&gt;&lt;td&gt;Kobayashi ST-60&lt;/td&gt;&lt;td&gt;Japan&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hoch&lt;/td&gt;&lt;td&gt;Toothmaster&lt;/td&gt;&lt;td&gt;Hoch Toothmaster&lt;/td&gt;&lt;td&gt;Germany&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hoch&lt;/td&gt;&lt;td&gt;X-Prime&lt;/td&gt;&lt;td&gt;Hoch X-Prime&lt;/td&gt;&lt;td&gt;Germany&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Even if the designer has specified the primary key as {Model Full Name}, the table is not in 2NF. {Manufacturer, Model} is also a candidate key, and Manufacturer Country is dependent on a proper subset of it: Manufacturer. To make the design conform to 2NF, it is necessary to have two tables:&lt;/p&gt;&lt;table border="1"&gt;&lt;caption&gt;Electric Toothbrush Manufacturers&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Manufacturer&lt;/th&gt;&lt;th&gt;Manufacturer Country&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Forte&lt;/td&gt;&lt;td&gt;Italy&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dent-o-Fresh&lt;/td&gt;&lt;td&gt;USA&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Kobayashi&lt;/td&gt;&lt;td&gt;Japan&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hoch&lt;/td&gt;&lt;td&gt;Germany&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table border="1"&gt;&lt;caption&gt;Electric Toothbrush Models&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Manufacturer&lt;/th&gt;&lt;th&gt;Model&lt;/th&gt;&lt;th&gt;Model Full Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Forte&lt;/td&gt;&lt;td&gt;X-Prime&lt;/td&gt;&lt;td&gt;Forte X-Prime&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Forte&lt;/td&gt;&lt;td&gt;Ultraclean&lt;/td&gt;&lt;td&gt;Forte Ultraclean&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dent-o-Fresh&lt;/td&gt;&lt;td&gt;EZbrush&lt;/td&gt;&lt;td&gt;Dent-o-Fresh EZbrush&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Kobayashi&lt;/td&gt;&lt;td&gt;ST-60&lt;/td&gt;&lt;td&gt;Kobayashi ST-60&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hoch&lt;/td&gt;&lt;td&gt;Toothmaster&lt;/td&gt;&lt;td&gt;Hoch Toothmaster&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Hoch&lt;/td&gt;&lt;td&gt;X-Prime&lt;/td&gt;&lt;td&gt;Hoch X-Prime&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;Second Normal Form (2NF) : Normalization&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="123">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Third_normal_form"&gt;https://en.wikipedia.org/wiki/Third_normal_form&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.1keydata.com/database-normalization/third-normal-form-3nf.php"&gt;https://www.1keydata.com/database-normalization/third-normal-form-3nf.php&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;A table is in 3NF&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/If_and_only_if"&gt;if and only if&lt;/a&gt;both of the following conditions hold:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Relation_(database)"&gt;relation&lt;/a&gt;&amp;nbsp;R (table) is in&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Second_normal_form"&gt;second normal form&lt;/a&gt;&amp;nbsp;(2NF)&lt;/li&gt;&lt;li&gt;Every non-prime attribute of R is non-transitively dependent on every key of R.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A&amp;nbsp;&lt;em&gt;non-prime attribute&lt;/em&gt;&amp;nbsp;of R is an attribute that does not belong to any&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Candidate_key"&gt;candidate key&lt;/a&gt;&amp;nbsp;of R.&lt;a href="https://en.wikipedia.org/wiki/Third_normal_form#cite_note-Codd2-3"&gt;[3]&lt;/a&gt;&amp;nbsp;A&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Transitive_dependency"&gt;transitive dependency&lt;/a&gt;&amp;nbsp;is a&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Functional_dependency"&gt;functional dependency&lt;/a&gt;&amp;nbsp;in which&amp;nbsp;&lt;em&gt;X&lt;/em&gt;&amp;nbsp;&amp;rarr;&amp;nbsp;&lt;em&gt;Z&lt;/em&gt;&amp;nbsp;(&lt;em&gt;X&lt;/em&gt;&amp;nbsp;determines&amp;nbsp;&lt;em&gt;Z&lt;/em&gt;) indirectly, by virtue of&amp;nbsp;&lt;em&gt;X&lt;/em&gt;&amp;nbsp;&amp;rarr;&amp;nbsp;&lt;em&gt;Y&lt;/em&gt;&amp;nbsp;and&amp;nbsp;&lt;em&gt;Y&lt;/em&gt;&amp;nbsp;&amp;rarr;&amp;nbsp;&lt;em&gt;Z&lt;/em&gt;&amp;nbsp;(where it is not the case that&amp;nbsp;&lt;em&gt;Y&lt;/em&gt;&amp;nbsp;&amp;rarr;&amp;nbsp;&lt;em&gt;X&lt;/em&gt;)&lt;/p&gt;&lt;p&gt;An example of a 2NF table that fails to meet the requirements of 3NF is:&lt;/p&gt;&lt;table border="1"&gt;&lt;caption&gt;Tournament Winners&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Tournament&lt;/th&gt;&lt;th&gt;Year&lt;/th&gt;&lt;th&gt;Winner&lt;/th&gt;&lt;th&gt;Winner Date of Birth&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Indiana Invitational&lt;/td&gt;&lt;td&gt;1998&lt;/td&gt;&lt;td&gt;Al Fredrickson&lt;/td&gt;&lt;td&gt;21 July 1975&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Cleveland Open&lt;/td&gt;&lt;td&gt;1999&lt;/td&gt;&lt;td&gt;Bob Albertson&lt;/td&gt;&lt;td&gt;28 September 1968&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Des Moines Masters&lt;/td&gt;&lt;td&gt;1999&lt;/td&gt;&lt;td&gt;Al Fredrickson&lt;/td&gt;&lt;td&gt;21 July 1975&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Indiana Invitational&lt;/td&gt;&lt;td&gt;1999&lt;/td&gt;&lt;td&gt;Chip Masterson&lt;/td&gt;&lt;td&gt;14 March 1977&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;In order to express the same facts without violating 3NF, it is necessary to split the table into two:&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;table border="1"&gt;&lt;caption&gt;Tournament Winners&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;&lt;span style="display:none"&gt;&amp;nbsp;&lt;/span&gt;Tournament&lt;/th&gt;&lt;th&gt;&lt;span style="display:none"&gt;&amp;nbsp;&lt;/span&gt;Year&lt;/th&gt;&lt;th&gt;Winner&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Indiana Invitational&lt;/td&gt;&lt;td&gt;1998&lt;/td&gt;&lt;td&gt;Al Fredrickson&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Cleveland Open&lt;/td&gt;&lt;td&gt;1999&lt;/td&gt;&lt;td&gt;Bob Albertson&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Des Moines Masters&lt;/td&gt;&lt;td&gt;1999&lt;/td&gt;&lt;td&gt;Al Fredrickson&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Indiana Invitational&lt;/td&gt;&lt;td&gt;1999&lt;/td&gt;&lt;td&gt;Chip Masterson&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;td&gt;&lt;table border="1"&gt;&lt;caption&gt;Winner Dates of Birth&lt;/caption&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Winner&lt;/th&gt;&lt;th&gt;Date of Birth&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Chip Masterson&lt;/td&gt;&lt;td&gt;14 March 1977&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Al Fredrickson&lt;/td&gt;&lt;td&gt;21 July 1975&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Bob Albertson&lt;/td&gt;&lt;td&gt;28 September 1968&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;Third Normal Form (3NF) : Normalization&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="124">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.studytonight.com/dbms/database-key.php"&gt;http://www.studytonight.com/dbms/database-key.php&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.techopedia.com/definition/24475/superkey"&gt;https://www.techopedia.com/definition/24475/superkey&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.techopedia.com/definition/21/candidate-key"&gt;https://www.techopedia.com/definition/21/candidate-key&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://sqlwithmanoj.com/2014/09/15/db-basics-what-are-candidate-primary-composite-super-keys-and-difference-between-them/"&gt;https://sqlwithmanoj.com/2014/09/15/db-basics-what-are-candidate-primary-composite-super-keys-and-difference-between-them/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.techopedia.com/definition/6572/composite-key"&gt;https://www.techopedia.com/definition/6572/composite-key&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.javatpoint.com/sql-composite-key"&gt;http://www.javatpoint.com/sql-composite-key&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.1keydata.com/sql/sql-foreign-key.html"&gt;https://www.1keydata.com/sql/sql-foreign-key.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;Super Key&lt;/strong&gt;&amp;nbsp;is defined as a set of attributes within a table that uniquely identifies each record within a table. Super Key is a superset of Candidate key.&lt;br /&gt;A superkey is a combination of columns that uniquely identifies any row within a relational database management system (RDBMS) table. A candidate key is a closely related concept where the superkey is reduced to the minimum number of columns required to uniquely identify each row.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Candidate Key&amp;nbsp;&lt;/strong&gt;is a column, or set of columns, in a table that can uniquely identify any database record without referring to any other data. Each table may have one or more candidate keys, but one candidate key is special, and it is called the &lt;strong&gt;primary key&lt;/strong&gt;. This is usually the best among the candidate keys.&lt;br /&gt;When a key is composed of more than one column, it is known as a composite key.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Primary key&lt;/strong&gt; is a &lt;strong&gt;candidate key&lt;/strong&gt; that is most appropriate to become main key of the table. It is a key that uniquely identify each record in a table.&lt;br /&gt;A &lt;strong&gt;primary key&lt;/strong&gt; is a special relational database table column (or combination of columns) designated to uniquely identify all table records.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;A &lt;strong&gt;primary key&lt;/strong&gt;&amp;rsquo;s main features are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;It must contain a unique value for each row of data.&lt;/li&gt;&lt;li&gt;It cannot contain null values.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A &lt;strong&gt;primary key&lt;/strong&gt; is either an existing table column or a column that is specifically generated by the database according to a defined sequence.&lt;/p&gt;&lt;p&gt;Key that consist of two or more attributes that uniquely identify an entity occurance is called&amp;nbsp;&lt;strong&gt;Composite key&lt;/strong&gt;. But any attribute that makes up the&amp;nbsp;&lt;strong&gt;Composite key&lt;/strong&gt;&amp;nbsp;is not a simple key in its own.&lt;br /&gt;&lt;br /&gt;A&lt;strong&gt; composite key&lt;/strong&gt;, in the context of relational databases, is a combination of two or more columns in a table that can be used to uniquely identify each row in the table. Uniqueness is only guaranteed when the columns are combined; when taken individually the columns do not guarantee uniqueness.&lt;/p&gt;&lt;p&gt;A&amp;nbsp;&lt;strong&gt;foreign key&lt;/strong&gt;&amp;nbsp;is a column (or columns) that references a column (most often the primary&amp;nbsp;&lt;strong&gt;key&lt;/strong&gt;) of another table. The purpose of the&amp;nbsp;&lt;strong&gt;foreign key&lt;/strong&gt;&amp;nbsp;is to ensure referential integrity of the data. In other words, only values that are supposed to appear in the database are permitted.&lt;/p&gt;&lt;p&gt;A&amp;nbsp;&lt;strong&gt;table&lt;/strong&gt;&amp;nbsp;may&amp;nbsp;&lt;strong&gt;have multiple foreign keys&lt;/strong&gt;, and each&amp;nbsp;&lt;strong&gt;foreign key can have&lt;/strong&gt;&amp;nbsp;a different parent&amp;nbsp;&lt;strong&gt;table&lt;/strong&gt;. Each&amp;nbsp;&lt;strong&gt;foreign key&lt;/strong&gt;&amp;nbsp;is enforced independently by the database system. Therefore, cascading relationships between&amp;nbsp;&lt;strong&gt;tables can&lt;/strong&gt;&amp;nbsp;be established using&amp;nbsp;&lt;strong&gt;foreign keys.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;A column with a&amp;nbsp;&lt;strong&gt;FOREIGN KEY&lt;/strong&gt;&amp;nbsp;constraint&amp;nbsp;&lt;strong&gt;can contain NULL values&lt;/strong&gt;&amp;nbsp;if it does not also&amp;nbsp;&lt;strong&gt;have&lt;/strong&gt;&amp;nbsp;a NOT&amp;nbsp;&lt;strong&gt;NULL&lt;/strong&gt;&amp;nbsp;constraint, even though the&amp;nbsp;NULL value&amp;nbsp;does not appear in the PRIMARY&amp;nbsp;KEY&amp;nbsp;column of the dimension table. This allows rows to be inserted into the table even if the&amp;nbsp;&lt;strong&gt;foreign key&lt;/strong&gt;&amp;nbsp;is not yet known.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Explain Super Key, Candidate Key, Primary Key, Composite Key, Foreign Key&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="125">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-using-joins.htm"&gt;http://www.tutorialspoint.com/sql/sql-using-joins.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.studytonight.com/dbms/joining-in-sql.php"&gt;http://www.studytonight.com/dbms/joining-in-sql.php&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;There are different types of joins available in SQL:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-inner-joins.htm"&gt;INNER JOIN:&lt;/a&gt;&amp;nbsp;returns rows when there is a match in both tables.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-left-joins.htm"&gt;LEFT JOIN:&lt;/a&gt;&amp;nbsp;returns all rows from the left table, even if there are no matches in the right table.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-right-joins.htm"&gt;RIGHT JOIN:&lt;/a&gt;&amp;nbsp;returns all rows from the right table, even if there are no matches in the left table.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-full-joins.htm"&gt;FULL JOIN:&lt;/a&gt;&amp;nbsp;returns rows when there is a match in one of the tables.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-self-joins.htm"&gt;SELF JOIN:&lt;/a&gt;&amp;nbsp;is used to join a table to itself as if the table were two tables, temporarily renaming at least one table in the SQL statement.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-cartesian-joins.htm"&gt;CARTESIAN JOIN:&lt;/a&gt;&amp;nbsp;returns the Cartesian product of the sets of records from the two or more joined tables.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;Types of Joins&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="126">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/dbms/dbms_indexing.htm"&gt;http://www.tutorialspoint.com/dbms/dbms_indexing.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.eazynotes.com/pages/database-management-system/indexing.html"&gt;http://www.eazynotes.com/pages/database-management-system/indexing.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.tutorialcup.com/dbms/indexing.htm"&gt;https://www.tutorialcup.com/dbms/indexing.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;An index is a small table having only two columns. The first column contains a copy of the primary or candidate key of a table and the second column contains a set of pointers holding the address of the disk block where that particular key value can be found.&lt;/p&gt;&lt;p&gt;The only minor disadvantage of using index is that it takes up a little more space than the main table. Additionally, index needs to be updated periodically for insertion or deletion of records in the main table. However, the advantages are so huge that these disadvantages can be considered negligible.&lt;/p&gt;&lt;p&gt;Indexing can be of the following types &amp;minus;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Primary Index&lt;/strong&gt;&amp;nbsp;&amp;minus; Primary index is defined on an ordered data file. The data file is ordered on a&amp;nbsp;&lt;strong&gt;key field&lt;/strong&gt;. The key field is generally the primary key of the relation.&lt;br /&gt;In primary index, there is a one-to-one relationship between the entries in the index table and the records in the main table.&lt;br /&gt;Primary index can be of two types:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Dense primary index:&lt;/strong&gt; the number of entries in the index table is the same as the number of entries in the main table. In other words, each and every record in the main table has an entry in the index&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Sparse or Non-Dense Primary Index: &lt;/strong&gt;data blocks have been divided in to several blocks, each containing a fixed number of records (in our case 10). The pointer in the index table points to the first record of each data block, which is known as the Anchor Record for its important function. If you are searching for roll 14, the index is first searched to find out the highest entry which is smaller than or equal to 14. We have 11. The pointer leads us to roll 11 where a short sequential search is made to find out roll 14.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Secondary Index&lt;/strong&gt;&amp;nbsp;&amp;minus; Secondary index may be generated from a field which is a candidate key and has a unique value in every record, or a non-key with duplicate values.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Clustering Index&lt;/strong&gt;&amp;nbsp;&amp;minus; Clustering index is defined on an ordered data file. The data file is ordered on a non-key field.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://www.eazynotes.com/images/types-of-index.jpg" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Indexing&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="127">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://code.tutsplus.com/articles/sql-for-beginners-part-3-database-relationships--net-8561"&gt;http://code.tutsplus.com/articles/sql-for-beginners-part-3-database-relationships--net-8561&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.careerride.com/DB-types-of-relationships.aspx"&gt;http://www.careerride.com/DB-types-of-relationships.aspx&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://databases.about.com/od/specificproducts/a/Database-Relationships-An-Introduction-To-Foreign-Keys-Joins-And-E-R-Diagrams.htm"&gt;http://databases.about.com/od/specificproducts/a/Database-Relationships-An-Introduction-To-Foreign-Keys-Joins-And-E-R-Diagrams.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;ul&gt;&lt;li&gt;&lt;strong&gt;One to One Relationships&lt;/strong&gt;&lt;br /&gt;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/ss_1.png" /&gt;&amp;nbsp; &amp;nbsp;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/ss_2.png" /&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/graph_1.png" /&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;One to Many and Many to One Relationships&lt;/strong&gt;&lt;br /&gt;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/ss_3.png" /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/graph_2.png" /&gt;&lt;br /&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Many to Many Relationships&lt;/strong&gt;&lt;br /&gt;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/ss_4.png" /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/graph_3.png" /&gt;&lt;img src="https://cdn.tutsplus.com/net/uploads/legacy/538_sql3/graph_4.png" /&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;Types of Relationships&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="128">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.studytonight.com/dbms/sql-constraints.php"&gt;http://www.studytonight.com/dbms/sql-constraints.php&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-constraints.htm"&gt;http://www.tutorialspoint.com/sql/sql-constraints.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://michaelmclaughlin.info/db1/lesson-2-creating-tables/database-constraints/"&gt;http://michaelmclaughlin.info/db1/lesson-2-creating-tables/database-constraints/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Constraints are the rules enforced on data columns on table. These are used to limit the type of data that can go into a table. This ensures the accuracy and reliability of the data in the database.&lt;/p&gt;&lt;p&gt;Constraints could be column level or table level. Column level constraints are applied only to one column, whereas table level constraints are applied to the whole table.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-not-null.htm"&gt;NOT NULL Constraint&lt;/a&gt;: Ensures that a column cannot have NULL value.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-default.htm"&gt;DEFAULT Constraint&lt;/a&gt;: Provides a default value for a column when none is specified.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-unique.htm"&gt;UNIQUE Constraint&lt;/a&gt;: Ensures that all values in a column are different.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-primary-key.htm"&gt;PRIMARY Key&lt;/a&gt;: Uniquely identified each rows/records in a database table.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-foreign-key.htm"&gt;FOREIGN Key&lt;/a&gt;: Uniquely identified a rows/records in any another database table.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-check.htm"&gt;CHECK Constraint&lt;/a&gt;: The CHECK constraint ensures that all values in a column satisfy certain conditions.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href="http://www.tutorialspoint.com/sql/sql-index.htm"&gt;INDEX&lt;/a&gt;: Use to create and retrieve data from the database very quickly.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;Types of Constraints&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="130">
        <references></references>
        <answer></answer>
        <description>&lt;p&gt;Database Transactions&lt;/p&gt;</description>
        <topic parent_id="database" id="rdbms" name="RDBMS" type="sub"/>
    </question>
    <question id="110">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/restful/restful_interview_questions.htm"&gt;http://www.tutorialspoint.com/restful/restful_interview_questions.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;REST stands for REpresentational State Transfer.&lt;/p&gt;&lt;p&gt;REST is web standards based architecture and uses HTTP Protocol for data communication. It revolves around resource where every component is a resource and a resource is accessed by a common interface using HTTP standard methods. REST was first introduced by Roy Fielding in 2000.&lt;/p&gt;&lt;p&gt;In REST architecture, a REST Server simply provides access to resources and REST client accesses and presents the resources. Here each resource is identified by URIs/ global IDs. REST uses various representations to represent a resource like text, JSON and XML. Now a days JSON is the most popular format being used in web services.&lt;/p&gt;</answer>
        <description>&lt;p&gt;what is REST?&lt;/p&gt;</description>
        <topic parent_id="web_services" id="rest_api" name="REST API" type="sub"/>
    </question>
    <question id="111">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/restful/restful_interview_questions.htm"&gt;http://www.tutorialspoint.com/restful/restful_interview_questions.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt;&amp;nbsp;&amp;minus; Provides a read only access to a resource or&amp;nbsp;retrieve information. GET requests must be safe and&amp;nbsp;&lt;a href="http://en.wikipedia.org/wiki/Idempotence#Computer_science_meaning"&gt;idempotent&lt;/a&gt;, meaning regardless of how many times it repeats with the same parameters, the results are the same. They can have side effects, but the user doesn&amp;#39;t expect them, so they cannot be critical to the operation of the system.&amp;nbsp;HTTP&amp;nbsp;&lt;code&gt;GET&lt;/code&gt;&amp;nbsp;verb tells the service to&amp;nbsp;&lt;strong&gt;get&lt;/strong&gt;, or retrieve, the resource designated by a URI. How it does this is, of course, implementation specific. The backend code might talk to a database, a file system, another webservice, etc. The client doesn&amp;rsquo;t need to be aware of this, though. To the client, all resources are HTTP resources, and in the world of HTTP, there&amp;rsquo;s only one way to ask for data:&amp;nbsp;&lt;code&gt;GET&lt;/code&gt;.&amp;nbsp;&lt;code&gt;GET&lt;/code&gt;&amp;nbsp;calls have no body in the request, but typically return a body. The response to an HTTP&amp;nbsp;&lt;code&gt;GET&lt;/code&gt;&amp;nbsp;request for&amp;nbsp;&lt;code&gt;/bob/bookmarks/6&lt;/code&gt;might look like:&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;pre&gt;&lt;code&gt; 	{
		id: 6,
		uri: "http://bookmark.com/2/bob",
		description: "A description"
	}&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;&amp;nbsp;&amp;minus; Used to create a new resource.&amp;nbsp;PUT if&amp;nbsp;you are sending the full content of the specified resource (URL).&amp;nbsp;PUT if&amp;nbsp;you are updating the full content of the specified resource.&amp;nbsp;HTTP&amp;nbsp;&lt;code&gt;PUT&lt;/code&gt;&amp;nbsp;verb tells the service to update the resource designated by a URI with the body of the enclosed request. Thus, to update the resource at&amp;nbsp;&lt;code&gt;/bob/bookmarks&lt;/code&gt;, I might send the same JSON representation returned from the&amp;nbsp;&lt;code&gt;GET&lt;/code&gt;&amp;nbsp;call, with updated fields. The service will&amp;nbsp;&lt;strong&gt;replace&lt;/strong&gt;&amp;nbsp;the value.&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&amp;nbsp;&amp;minus; Ued to remove a resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&amp;nbsp;&amp;minus; Used to update a existing resource or create a new resource.&amp;nbsp;POST if you are sending a command to the server to create a subordinate of the specified resource, using some server-side algorithm.&amp;nbsp;POST if you are requesting the server to update one or more subordinates of the specified resource.&lt;br /&gt;HTTP&amp;nbsp;&lt;code&gt;POST&lt;/code&gt;&amp;nbsp;verb tells the service to&amp;nbsp;&lt;strong&gt;do something&lt;/strong&gt;&amp;nbsp;with the enclosed body of the request. There&amp;rsquo;s no hard and fast rules here, but typically an HTTP&amp;nbsp;&lt;code&gt;POST&lt;/code&gt;&amp;nbsp;call to&lt;code&gt;/bob/bookmarks&lt;/code&gt;&amp;nbsp;will&amp;nbsp;&lt;strong&gt;add&lt;/strong&gt;, or&amp;nbsp;&lt;strong&gt;append&lt;/strong&gt;, the enclosed body to the collection (database, filesystem, whatever) designated by the&amp;nbsp;&lt;code&gt;/bob/bookmarks&lt;/code&gt;&amp;nbsp;URI. It can be a little confusing, though. An HTTP&amp;nbsp;&lt;code&gt;POST&lt;/code&gt;&amp;nbsp;to&amp;nbsp;&lt;code&gt;/bob/bookmarks/1&lt;/code&gt;, on the other hand, might be treated in the same way as an HTTP&amp;nbsp;&lt;code&gt;PUT&lt;/code&gt;&amp;nbsp;call; the service could take the enclosed body and use it to&lt;strong&gt;replace&lt;/strong&gt;&amp;nbsp;the resource designated by the URI.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;OPTIONS&lt;/strong&gt;&amp;nbsp;&amp;minus; Used to get the supported operations on a resource.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;HTTP methods used in REST based architecture&lt;/p&gt;</description>
        <topic parent_id="web_services" id="rest_api" name="REST API" type="sub"/>
    </question>
    <question id="112">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.restapitutorial.com/httpstatuscodes.html"&gt;http://www.restapitutorial.com/httpstatuscodes.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Status codes indicate the result of the HTTP request.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;1XX&lt;/strong&gt;&amp;nbsp;- informational&lt;/li&gt;&lt;li&gt;&lt;strong&gt;2XX&lt;/strong&gt;&amp;nbsp;- success&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;200 OK&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;201 Created&lt;/li&gt;&lt;li&gt;&lt;strong&gt;3XX&lt;/strong&gt;&amp;nbsp;- redirection&lt;/li&gt;&lt;li&gt;&lt;strong&gt;4XX&lt;/strong&gt;&amp;nbsp;- client error&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;400 Bad Request&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 401&amp;nbsp;Unauthorized&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 403 Forbidden&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; 404 Not Found&lt;/li&gt;&lt;li&gt;&lt;strong&gt;5XX&lt;/strong&gt;&amp;nbsp;- server error&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;500 Internal Server Error&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;HTTP status codes&lt;/p&gt;</description>
        <topic parent_id="web_services" id="rest_api" name="REST API" type="sub"/>
    </question>
    <question id="113">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2015/08/difference-between-soap-and-restfull-webservice-java.html"&gt;http://javarevisited.blogspot.com/2015/08/difference-between-soap-and-restfull-webservice-java.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javapapers.com/web-service/rest-vs-soap/"&gt;http://javapapers.com/web-service/rest-vs-soap/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;table border="1"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;SOAP&lt;/th&gt;&lt;th&gt;REST&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP is a standard protocol for creating web services.&lt;/td&gt;&lt;td&gt;REST is an architectural style to create web services.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP is acronym for Simple Object Access Protocol.&lt;/td&gt;&lt;td&gt;REST is acronym for REpresentational State Transfer.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP uses WSDL to expose supported methods and technical details.&lt;/td&gt;&lt;td&gt;REST exposes methods through URIs, there are no technical details.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP web services and client programs are bind with WSDL contract&lt;/td&gt;&lt;td&gt;REST doesn&amp;rsquo;t have any contract defined between server and client&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP web services and client are tightly coupled with contract.&lt;/td&gt;&lt;td&gt;REST web services are loosely coupled.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP learning curve is hard, requires us to learn about WSDL generation, client stubs creation etc.&lt;/td&gt;&lt;td&gt;REST learning curve is simple, POJO classes can be generated easily and works on simple HTTP methods.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP supports XML data format only&lt;/td&gt;&lt;td&gt;REST supports any data type such as XML, JSON, image etc.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP web services are hard to maintain, any change in WSDL contract requires us to create client stubs again and then make changes to client code.&lt;/td&gt;&lt;td&gt;REST web services are easy to maintain when compared to SOAP, a new method can be added without any change at client side for existing resources.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SOAP web services can be tested through programs or software such as Soap UI.&lt;/td&gt;&lt;td&gt;&lt;p&gt;REST can be easily tested through CURL command, Browsers and extensions such as Chrome Postman.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="https://3.bp.blogspot.com/-zg3xuzcWTXg/Vaj0gLvGabI/AAAAAAAADZU/fhE-v_AXJFA/s640/SOAP%2Bvs%2BREST%2Bin%2BJava.png" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Difference between SOAP and REST web services&lt;/p&gt;</description>
        <topic parent_id="web_services" id="rest_api" name="REST API" type="sub"/>
    </question>
    <question id="115">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://spring.io/guides/tutorials/bookmarks/"&gt;http://spring.io/guides/tutorials/bookmarks/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.genuitec.com/spring-frameworkrestcontroller-vs-controller/"&gt;https://www.genuitec.com/spring-frameworkrestcontroller-vs-controller/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Controller annotations&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;@RestController
@RequestMapping("/rest/questions")
public class QuestionsController {&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;URI with http method GET&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;@RequestMapping(value="/{topicId}",headers="Accept=application/json",method=RequestMethod.GET)
	public @ResponseBody List&amp;lt;Question&amp;gt; getAllQuestions(@PathVariable String topicId){&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;URI with http method POST&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;@RequestMapping(value="/addOrEditQuestion",headers="Accept=application/json",consumes="application/json",method=RequestMethod.POST)
	public @ResponseBody Map&amp;lt;String,Object&amp;gt; saveOrUpdateQuestion(@RequestBody String questionJSONString){&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;code&gt;@RestController&lt;/code&gt;&amp;nbsp;exposes the annotated bean&amp;rsquo;s methods as HTTP endpoints using metadata furnished by the&amp;nbsp;&lt;code&gt;@RequestMapping&lt;/code&gt;&amp;nbsp;annotation on each method. A method will be put into service if an incoming HTTP request matches the qualifications stipulated by the&lt;code&gt;@RequestMapping&lt;/code&gt;&amp;nbsp;annotation on the method.&lt;/p&gt;&lt;p&gt;When an HTTP request comes in that specifies an&amp;nbsp;&lt;code&gt;Accept&lt;/code&gt;&amp;nbsp;header, Spring MVC loops through the configured&amp;nbsp;&lt;code&gt;HttpMessageConverter&lt;/code&gt;&amp;nbsp;until it finds one that can convert from the POJO domain model types into the content-type specified in the&amp;nbsp;&lt;code&gt;Accept&lt;/code&gt;header, if so configured. Spring Boot automatically wires up an&amp;nbsp;&lt;code&gt;HttpMessageConverter&lt;/code&gt;&amp;nbsp;that can convert generic&amp;nbsp;&lt;code&gt;Object&lt;/code&gt;&amp;nbsp;s to&amp;nbsp;&lt;a href="http://www.json.org/"&gt;JSON&lt;/a&gt;, absent any more specific converter.&lt;code&gt;HttpMessageConverter&lt;/code&gt;&amp;nbsp;s work in both directions: incoming requests bodies are converted to Java objects, and Java objects are converted into HTTP response bodies.&lt;/p&gt;&lt;p&gt;The&amp;nbsp;&lt;code&gt;add&lt;/code&gt;&amp;nbsp;method accepts incoming HTTP requests, saves them and then sends back a&lt;code&gt;ResponseEntity&amp;lt;T&amp;gt;&lt;/code&gt;.&amp;nbsp;&lt;code&gt;ResponseEntity&lt;/code&gt;&amp;nbsp;is a wrapper for a response and, optionally, HTTP headers and a status code. The&amp;nbsp;&lt;code&gt;add&lt;/code&gt;&amp;nbsp;method sends back a&amp;nbsp;&lt;code&gt;ResponseEntity&lt;/code&gt;&amp;nbsp;with a status code of 201 (&lt;code&gt;CREATED&lt;/code&gt;) and a header (&lt;code&gt;Location&lt;/code&gt;) that the client can consult to learn how the newly created record is referencable. It&amp;rsquo;s a bit like extracting the just generated primary key after saving a record in the database.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Build REST service in Spring&lt;/p&gt;</description>
        <topic parent_id="web_services" id="rest_api" name="REST API" type="sub"/>
    </question>
    <question id="116">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://javabeat.net/spring-mvc-requestparam-pathvariable/"&gt;http://javabeat.net/spring-mvc-requestparam-pathvariable/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;code&gt;@RequestParam&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;&lt;a href="http://www.javabeat.net/pathvariable-template-patterns-spring-mvc/"&gt;@PathVariable&lt;/a&gt;&lt;/code&gt;&amp;nbsp;annotations are used for accessing the values from the request. Both the the annotations have the significant purpose and use respectively. The key difference between&amp;nbsp;&lt;code&gt;@RequestParam&lt;/code&gt;&amp;nbsp;and&amp;nbsp;&lt;code&gt;@PathVariable&lt;/code&gt;&amp;nbsp;is that @RequestParam used for accessing the values of the query parameters where as @PathVariable used for accessing the values from the URI template.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Difference Between @RequestParam and @PathVariable in Spring MVC&lt;/p&gt;</description>
        <topic parent_id="web_services" id="rest_api" name="REST API" type="sub"/>
    </question>
    <question id="118">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://docs.oracle.com/cd/E24191_01/common/tutorials/authn_http_basic.html"&gt;https://docs.oracle.com/cd/E24191_01/common/tutorials/authn_http_basic.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;em&gt;HTTP Basic Auth&lt;/em&gt;&amp;nbsp;(or&amp;nbsp;&lt;a target="_blank" href="http://en.wikipedia.org/wiki/Basic_access_authentication"&gt;Basic access authentication&lt;/a&gt;) is a widely used protocol for simple username/password authentication&lt;br /&gt;&lt;a target="_blank" href="http://en.wikipedia.org/wiki/Basic_access_authentication"&gt;HTTP Basic access authentication&lt;/a&gt;&amp;nbsp;is one of the easiest authentication methods and it&amp;#39;s only safe with a secure SSL/HTTPS connection. The header generated is:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Basic {TOKEN}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;where the&amp;nbsp;&lt;code&gt;{TOKEN}&lt;/code&gt;&amp;nbsp;is the base 64 of the username and password separated by a colon. In pseudo-code, it would be:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;base64(username + ':' + password)&lt;/code&gt;&lt;/pre&gt;</answer>
        <description>&lt;p&gt;Basic Auth&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="security" name="Security" type="sub"/>
    </question>
    <question id="119">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://mark-kirby.co.uk/2013/how-to-authenticate-apis-http-basic-vs-http-digest/"&gt;http://mark-kirby.co.uk/2013/how-to-authenticate-apis-http-basic-vs-http-digest/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/2384230/what-is-digest-authentication"&gt;http://stackoverflow.com/questions/2384230/what-is-digest-authentication&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;Digest access authentication&lt;/strong&gt;&amp;nbsp;is one of the agreed-upon methods a&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Web_server"&gt;web server&lt;/a&gt;&amp;nbsp;can use to negotiate credentials, such as username or password, with a user&amp;#39;s&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Web_browser"&gt;web browser&lt;/a&gt;. This can be used to confirm the identity of a user before sending sensitive information, such as online banking transaction history. It applies a&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Hash_function"&gt;hash function&lt;/a&gt;&amp;nbsp;to the username and&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Password"&gt;password&lt;/a&gt;&amp;nbsp;before sending them over the network. In contrast,&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Basic_access_authentication"&gt;basic access authentication&lt;/a&gt;&amp;nbsp;uses the easily reversible&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Base64"&gt;Base64&lt;/a&gt;&amp;nbsp;encoding instead of encryption, making it non-secure unless used in conjunction with&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Transport_Layer_Security"&gt;SSL&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Technically, digest authentication is an application of&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/MD5"&gt;MD5&lt;/a&gt;&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Cryptographic_hash"&gt;cryptographic hashing&lt;/a&gt;&amp;nbsp;with usage of&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Cryptographic_nonce"&gt;nonce&lt;/a&gt;&amp;nbsp;values to prevent&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Replay_attack"&gt;replay attacks&lt;/a&gt;. It uses the&amp;nbsp;&lt;a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"&gt;HTTP&lt;/a&gt;&amp;nbsp;protocol.&lt;/p&gt;&lt;p&gt;HTTP Digest access authentication is a more complex form of authentication that works as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;STEP 1 &amp;ndash; a client sends a request to a server&lt;/li&gt;&lt;li&gt;STEP 2 -the server responds with a special code (called a nonce), another string representing the &amp;lsquo;realm&amp;rsquo; and asks the client to authenticate&lt;/li&gt;&lt;li&gt;STEP 3 &amp;ndash;&amp;nbsp;the client responds with this nonce and an encrypted version of the username, password and realm (a hash)&lt;/li&gt;&lt;li&gt;STEP 4 &amp;ndash;&amp;nbsp;the server responds with the requested information if the client hash matches their own hash of the username, password and realm, or an error if not&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Pros&lt;/p&gt;&lt;ul&gt;&lt;li&gt;No usernames or passwords are sent to the server in plaintext, making a non-SSL connection more secure than an HTTP Basic request that isn&amp;rsquo;t sent over SSL. This means SSL isn&amp;rsquo;t required, which makes each call&amp;nbsp;&lt;strong&gt;slightly faster&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Cons&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For every call needed, the client must make 2, making the process&amp;nbsp;&lt;strong&gt;slightly slower&amp;nbsp;&lt;/strong&gt;than HTTP Basic&lt;/li&gt;&lt;li&gt;HTTP Digest is&amp;nbsp;&lt;strong&gt;vulnerable&lt;/strong&gt;&amp;nbsp;to a man-in-the-middle security attack which basically means it&amp;nbsp;&lt;strong&gt;could be hacked&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;HTTP Digest prevents use of the strong password encryption, meaning the passwords stored on the server&amp;nbsp;&lt;strong&gt;could be hacked&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Digest Auth&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="security" name="Security" type="sub"/>
    </question>
    <question id="120">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://developers.google.com/identity/protocols/OAuth2"&gt;https://developers.google.com/identity/protocols/OAuth2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.google.com/identity/protocols/OAuth2WebServer"&gt;https://developers.google.com/identity/protocols/OAuth2WebServer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.cubrid.org/blog/dev-platform/dancing-with-oauth-understanding-how-authorization-works/"&gt;http://www.cubrid.org/blog/dev-platform/dancing-with-oauth-understanding-how-authorization-works/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4727226/on-a-high-level-how-does-oauth-2-work"&gt;http://stackoverflow.com/questions/4727226/on-a-high-level-how-does-oauth-2-work&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;em&gt;OAuth is&amp;nbsp;an authorization framework that enables a third-party application to obtain a limited access to an HTTP service.&lt;/em&gt;&lt;br /&gt;&lt;br /&gt;Assume we have a company where employees gain access to its building using their employee ID card. Now assume that an external guest needs to visit the company. If&amp;nbsp;&lt;strong&gt;login&lt;/strong&gt;&amp;nbsp;stands for&amp;nbsp;&lt;em&gt;an employee accessing the building&lt;/em&gt;,&amp;nbsp;&lt;strong&gt;OAuth&lt;/strong&gt;&amp;nbsp;stands for&amp;nbsp;&lt;em&gt;a guest receiving a visitor card and accessing the building&lt;/em&gt;.&amp;nbsp;See the following example.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;An external&amp;nbsp;&lt;strong&gt;Guest A&lt;/strong&gt;&amp;nbsp;says&amp;nbsp;to the reception desk that he&amp;nbsp;wants to meet&amp;nbsp;&lt;strong&gt;Employee B&amp;nbsp;&lt;/strong&gt;for business purposes.&lt;/li&gt;&lt;li&gt;The&amp;nbsp;&lt;strong&gt;reception desk&lt;/strong&gt;&amp;nbsp;notifies&amp;nbsp;&lt;strong&gt;Employee B&lt;/strong&gt;&amp;nbsp;that&amp;nbsp;&lt;strong&gt;Guest A&lt;/strong&gt;&amp;nbsp;has&amp;nbsp;come to visit him.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Employee B&lt;/strong&gt;&amp;nbsp;comes&amp;nbsp;to the reception desk and&amp;nbsp;identifies&amp;nbsp;&lt;strong&gt;Guest A&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Employee B&lt;/strong&gt;&amp;nbsp;records&amp;nbsp;the business purpose and identity of&amp;nbsp;&lt;strong&gt;Guest A&lt;/strong&gt;&amp;nbsp;at the reception desk.&lt;/li&gt;&lt;li&gt;The&amp;nbsp;&lt;strong&gt;reception desk&lt;/strong&gt;&amp;nbsp;issues&amp;nbsp;a visitor card to&amp;nbsp;&lt;strong&gt;Guest A&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Employee B&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;Guest A&lt;/strong&gt;&amp;nbsp;go&amp;nbsp;to the specified room to discuss their business.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;SampleApp&amp;nbsp;&lt;/strong&gt;has initially registered themselves as an &amp;ldquo;application&amp;rdquo; with&amp;nbsp;&lt;strong&gt;Linkedin&lt;/strong&gt;. In doing so, they&amp;rsquo;re provided with a token set called &amp;ldquo;consumer key&amp;rdquo; and its paired &amp;ldquo;consumer key secret.&amp;rdquo; These are used by SampleApp in their application code and as a part of the OAuth model in generating requests.&lt;/li&gt;&lt;li&gt;From a user perspective, when you log in to SampleApp and click the &amp;ldquo;Login with Linkedin &amp;rdquo; button, SampleApp uses its consumer key to contact Linkedin and generate a &amp;ldquo;request token.&amp;rdquo; You&amp;rsquo;re then provided with a special URL that redirects you off to Linkedin&amp;rsquo;s website.&lt;/li&gt;&lt;li&gt;If you aren&amp;rsquo;t already logged into Linkedin, you&amp;rsquo;ll be prompted to, and then presented with a screen that asks if you&amp;rsquo;d like to provide SampleApp with access to your account.&lt;/li&gt;&lt;li&gt;Clicking &amp;ldquo;Allow&amp;rdquo; tells Linkedin that SampleApp has requested access using its particular consumer key should have access to your Linkedin account. Linkedin&amp;nbsp; then redirects you back to your SampleApp with an attached coded verification string.&lt;/li&gt;&lt;li&gt;The SampleApp&amp;nbsp; then reads the previously generated request token, and takes the returned verification to ask Linkedin to generate a final token set called &amp;ldquo;access token&amp;rdquo; and &amp;ldquo;access token secret.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img src="https://developers.google.com/accounts/images/webflow.png" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;OAuth&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="security" name="Security" type="sub"/>
    </question>
    <question id="164">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://onlinehelp.tableau.com/current/server/en-us/saml_about.htm"&gt;https://onlinehelp.tableau.com/current/server/en-us/saml_about.htm&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://developers.onelogin.com/saml"&gt;https://developers.onelogin.com/saml&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.mutuallyhuman.com/blog/2013/05/09/choosing-an-sso-strategy-saml-vs-oauth2/"&gt;https://www.mutuallyhuman.com/blog/2013/05/09/choosing-an-sso-strategy-saml-vs-oauth2/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;How SAML works&lt;/p&gt;</description>
        <topic parent_id="design_architecture" id="security" name="Security" type="sub"/>
    </question>
    <question id="148">
        <references></references>
        <answer>&lt;p&gt;Direct Web Remoting&lt;br /&gt;DWR is a Java library that enables Java on the server and JavaScript in a browser to interact and call each other as simply as possible.&lt;br /&gt;&lt;strong&gt;DWR is Easy Ajax for Java&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;@AjaxService
@Name("dwrController")
@javax.inject.Named("dwrController")
@Scope(ScopeType.EVENT)
@org.springframework.context.annotation.Scope(SFContextConstant.SCOPE_EVENT)
public class DWRController {

//Ajax Methods
@AjaxMethod
public List&amp;lt;String&amp;gt; getListofStrings(int id) {
//some logic
return list;
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Generated JavaScript&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class="language-javascript"&gt;function dwrControllerASProxy() {
}

dwrControllerASProxy.getListOfStrings = function getListOfStrings(id,callback) {
//some validation code
dwr.engine._execute('/xi/ajax/remoting', 'dwrControllerProxy', 'getListOfStrings', id, callback);
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Calling the generated AJAX method from another JS file&lt;/p&gt;&lt;pre&gt;&lt;code class="language-javascript"&gt;getListOfStrings : function() {
      var actionReqObj = this._createActionRequestObject();
      actionReqObj.callback = function(response) {
        //do something with response
      };
      var controller = this._getAjaxController("dwrController");
      controller.getListOfStrings(3,actionReqObj);
    },&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;DWR AJAX Controllers&lt;/p&gt;</description>
        <topic parent_id="sap_sf" id="sf_juic" name="JUIC" type="sub"/>
    </question>
    <question id="175">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.vogella.com/tutorials/JavaAlgorithmsMergesort/article.html"&gt;http://www.vogella.com/tutorials/JavaAlgorithmsMergesort/article.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;&lt;code class="language-java"&gt;void mergesort(int low, int high, int[] numbers, int[] helper) {
    //check if low is smaller then high, if not then the array is sorted
    if (low &amp;lt; high) {
      // Get the index of the element which is in the middle
      int middle = low + (high - low) / 2;
      // Sort the left side of the array
      mergesort(low, middle, numbers, helper);
      // Sort the right side of the array
      mergesort(middle + 1, high, numbers, helper);
      // Combine them both
      merge(low, middle, high, numbers, helper);
    }
  }

void merge(int low, int middle, int high,int[] numbers,int[] helper) {
    // Copy both parts into the helper array
    for (int i = low; i &amp;lt;= high; i++) {
      helper[i] = numbers[i];
    }
    int i = low;
    int j = middle + 1;
    int k = low;
    // Copy the smallest values from either the left or the right side back
    // to the original array
    while (i &amp;lt;= middle &amp;amp;&amp;amp; j &amp;lt;= high) {
      if (helper[i] &amp;lt;= helper[j]) {
        numbers[k] = helper[i];
        i++;
      } else {
        numbers[k] = helper[j];
        j++;
      }
      k++;
    }
    // Copy the rest of the left side of the array into the target array
    while (i &amp;lt;= middle) {
      numbers[k] = helper[i];
      k++;
      i++;
    }
  }&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class="language-java"&gt;int[] numbers = {4,7,2,5,9,1,8,6,3,23,45,11,78};
int size = numbers.length;
int[] helper = new int[size];
mergesort(0, size - 1, numbers, helper);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Analysis&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;em&gt;Quicksort&lt;/em&gt;&amp;nbsp;can sort &amp;quot;inline&amp;quot; of an existing collection, e.g. it does not have to create a copy of the collection while&amp;nbsp;&lt;em&gt;Mergesort&lt;/em&gt;&amp;nbsp;requires a copy&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th scope="row"&gt;&lt;a href="https://en.wikipedia.org/wiki/Best,_worst_and_average_case"&gt;Worst case performance&lt;/a&gt;&lt;/th&gt;&lt;td&gt;O(&lt;em&gt;n&lt;/em&gt;&amp;nbsp;log&amp;nbsp;&lt;em&gt;n&lt;/em&gt;)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope="row"&gt;&lt;a href="https://en.wikipedia.org/wiki/Best,_worst_and_average_case"&gt;Best case performance&lt;/a&gt;&lt;/th&gt;&lt;td&gt;&lt;p&gt;O(&lt;em&gt;n&lt;/em&gt;&amp;nbsp;log&amp;nbsp;&lt;em&gt;n&lt;/em&gt;) typical,&lt;/p&gt;O(&lt;em&gt;n&lt;/em&gt;) natural variant&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope="row"&gt;&lt;a href="https://en.wikipedia.org/wiki/Best,_worst_and_average_case"&gt;Average case performance&lt;/a&gt;&lt;/th&gt;&lt;td&gt;O(&lt;em&gt;n&lt;/em&gt;&amp;nbsp;log&amp;nbsp;&lt;em&gt;n&lt;/em&gt;)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope="row"&gt;&lt;a href="https://en.wikipedia.org/wiki/Best,_worst_and_average_case"&gt;Worst case space complexity&lt;/a&gt;&lt;/th&gt;&lt;td&gt;О(&lt;em&gt;n&lt;/em&gt;) total, O(&lt;em&gt;n&lt;/em&gt;) auxiliary&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;Merge Sort&lt;/p&gt;</description>
        <topic parent_id="dsa" id="sorting" name="Sorting" type="sub"/>
    </question>
    <question id="176">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.algolist.net/Algorithms/Sorting/Quicksort"&gt;http://www.algolist.net/Algorithms/Sorting/Quicksort&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Quick Sort&lt;/p&gt;</description>
        <topic parent_id="dsa" id="sorting" name="Sorting" type="sub"/>
    </question>
    <question id="155">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://markchensblog.blogspot.in/2013/02/how-spring-mvc-works.html"&gt;http://markchensblog.blogspot.in/2013/02/how-spring-mvc-works.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.codejava.net/frameworks/spring/understanding-spring-mvc"&gt;http://www.codejava.net/frameworks/spring/understanding-spring-mvc&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/mvc.html"&gt;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/mvc.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;img src="http://1.bp.blogspot.com/-MvyoevkGywE/URdWcURwa9I/AAAAAAAAAT0/D_Zuu9huUks/s320/mvc.png" /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://www.codejava.net/images/articles/frameworks/spring/Understanding%20Spring%20MVC/SpringMVCArchitecture.jpg" /&gt;&lt;/p&gt;&lt;p&gt;SpringMVC is a web framework provided by Spring based on MVC pattern.&amp;nbsp;&amp;nbsp; This framework is built on top of JEE/Servlet and is request-driven.&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;DispatcherServlet is the front controller in Spring MVC.&amp;nbsp;&amp;nbsp; It is a HttpServlet that will receive the request and return the response. &amp;nbsp;DispatcherServlet is the key player in SpringMVC.&amp;nbsp; From the below brief work flow of SpringMVC you can see DispatcherServlet is the driving force that make the request served with the right response sent back to the client.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Receive the request from client&lt;/li&gt;&lt;li&gt;Consult HandleMapping to decide which controller processes the request&lt;/li&gt;&lt;li&gt;Dispatch the request to the controller&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Controller processes the request and returns the logical view name and model back to DispatcherServlet&lt;/li&gt;&lt;li&gt;Consult ViewResolver for appropriate View for the logical view name from Controller&lt;/li&gt;&lt;li&gt;Pass the model to View implementation for rendering&lt;/li&gt;&lt;li&gt;View renders the model and returns the result to DispatcherServlet&lt;/li&gt;&lt;li&gt;Return the rendered result from view to the client&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;It is obvious that DispatcherServlet has a heavy workload.&amp;nbsp; It needs many other strategy objects and configuration to perform these work.&amp;nbsp;&amp;nbsp; Each DispatcherServlet has its own specialized ApplicationContext: WebApplicationContext.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;MappingHandler&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;One important work to be done before DispatcherServlet can dispatch the request to the Controller is to find out which controller is right one for this request.&amp;nbsp; DispatcherServlet uses MappingHandler strategy object to do so.&amp;nbsp;&amp;nbsp; There are many MappingHandler implementations which uses different strategies to map the request to Controller. &amp;nbsp;&amp;nbsp;By default DispatcherServlet will use BeanNameUrlHandlerMapping and DefaultAnnotationHandlerMapping.&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;table border="1" cellpadding="0" cellspacing="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;em&gt;public interface HandlerMapping {&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;}&lt;/em&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;After the mapping is resolved DispatcherServlet will dispatch the request to the Controller.&amp;nbsp; Controller does the real work of processing the request.&amp;nbsp; Also Controller is where programmers need to work most in developing SpringMVC applications.&amp;nbsp; Controller has the knowledge of processing the request and what logical view be used for different result of request processing.&amp;nbsp; Usually Controller doesn&amp;#39;t do the real processing and it delegates the request processing to the service layer.&amp;nbsp; &amp;nbsp;Another thing the Controller to do is to package the result of the processing into the Model, which will be rendered in the View finally.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ViewResolver&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;After the Controller finish the processing of request it will return the logical view name and the data to DispatcherServlet, which will decide the actual view to be used since the view name from Controller is logical name.&amp;nbsp;&amp;nbsp; With the help of ViewResolver strategy object DispatcherServlet can find out physical view from the logical view name.&amp;nbsp;&amp;nbsp; Similar to MappingHandler there are also many different strategies &amp;nbsp;for resolving the view based on the different view technologies. &amp;nbsp;&amp;nbsp;&amp;nbsp;Most commonly used implementation of ViewResolver is InternalResourceViewResolver. &amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;table border="1" cellpadding="0" cellspacing="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;em&gt;public interface ViewResolver {&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; View resolveViewName(String viewName, Locale locale) throws Exception;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;}&lt;/em&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;View&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;View is where the data in the Model is rendered as the required output for the client.&amp;nbsp;&amp;nbsp; SpringMVC provides many implementations of View to generate different output such as JSP,Excel, PDF, XML and etc.&amp;nbsp;&amp;nbsp; DispatcherServlet will invoke render method from selected View implementation to generate the output to be returned to the client.&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;table border="1" cellpadding="0" cellspacing="0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;em&gt;public interface View {&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; String getContentType();&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; void render(Map&amp;lt;String, ?&amp;gt; model, HttpServletRequest request,&amp;nbsp; HttpServletResponse response) throws Exception;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;}&lt;/em&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;How Spring MVC works?&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="spring" name="Spring" type="sub"/>
    </question>
    <question id="156">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.vogella.com/tutorials/SpringDependencyInjection/article.html"&gt;http://www.vogella.com/tutorials/SpringDependencyInjection/article.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/2461/spring-ioc-bean-example-tutorial"&gt;http://www.journaldev.com/2461/spring-ioc-bean-example-tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/spring/spring-core/inversion-of-control-ioc-and-dependency-injection-di-patterns-in-spring-framework-and-related-interview-questions/"&gt;http://howtodoinjava.com/spring/spring-core/inversion-of-control-ioc-and-dependency-injection-di-patterns-in-spring-framework-and-related-interview-questions/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/beans.html"&gt;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/beans.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://javarevisited.blogspot.com/2012/11/difference-between-beanfactory-vs-applicationcontext-spring-framework.html"&gt;https://javarevisited.blogspot.com/2012/11/difference-between-beanfactory-vs-applicationcontext-spring-framework.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;The Spring container uses dependency injection (DI) to manage the components that make up an application. These objects are called Spring Beans.&lt;br /&gt;The container gets its instructions on what objects to instantiate, configure, and assemble by reading configuration metadata provided. The configuration metadata can be represented either by XML, Java annotations, or Java code.&amp;nbsp;The Spring IoC container makes use of Java POJO classes and configuration metadata to produce a fully configured and executable system or application.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://www.tutorialspoint.com/spring/images/spring_ioc_container.jpg" /&gt;&lt;/p&gt;&lt;p&gt;Spring IoC is the mechanism to achieve loose-coupling between Objects dependencies. To achieve loose coupling and dynamic binding of the objects at runtime, objects dependencies are injected by other assembler objects. Spring IoC container is the program that&amp;nbsp;&lt;strong&gt;injects&lt;/strong&gt;&amp;nbsp;dependencies into an object and make it ready for our use.&lt;/p&gt;&lt;p&gt;There are two types of IoC containers. They are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;BeanFactory&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ApplicationContext&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;BeanFactory&amp;nbsp;and&amp;nbsp;ApplicationContext&amp;nbsp;both are&amp;nbsp;&lt;a href="http://javarevisited.blogspot.in/2012/04/10-points-on-interface-in-java-with.html"&gt;Java interfaces&lt;/a&gt;&amp;nbsp;and ApplicationContext&amp;nbsp;extends BeanFactory. Both of them are configuration using&amp;nbsp;&lt;a href="http://javarevisited.blogspot.in/2012/03/how-to-read-properties-file-in-java-xml.html"&gt;XML configuration file&lt;/a&gt;. In short BeanFactory&amp;nbsp;provides basic IOC and DI features while ApplicationContext&amp;nbsp;provides advanced features.&amp;nbsp;&lt;code&gt;BeanFactory&lt;/code&gt;&amp;nbsp;is the root interface of Spring IoC container.&amp;nbsp;&lt;code&gt;ApplicationContext&lt;/code&gt;&amp;nbsp;is the child interface of&lt;code&gt;BeanFactory&lt;/code&gt;&amp;nbsp;interface that provide Spring AOP features, i18n etc.&lt;/p&gt;&lt;p&gt;1) BeanFactory doesn&amp;#39;t provide support for internationalization i.e. i18n but ApplicationContext&amp;nbsp;provides support for it.&lt;/p&gt;&lt;p&gt;2) Another difference between&amp;nbsp;BeanFactory&amp;nbsp;vs&amp;nbsp;ApplicationContext&amp;nbsp;is ability to publish event to beans that are registered as listener.&lt;/p&gt;&lt;p&gt;3) One of the popular implementation of BeanFactory interface is&amp;nbsp;XMLBeanFactory&amp;nbsp;while one of the popular implementation of ApplicationContext interface is&amp;nbsp;ClassPathXmlApplicationContext. On&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2012/08/what-is-jsessionid-in-j2ee-web.html"&gt;Java web application&lt;/a&gt;&amp;nbsp;we useWebApplicationContext&amp;nbsp;&amp;nbsp;which extends ApplicationContext interface and adds getServletContext method&lt;/p&gt;&lt;p&gt;There are following three important methods to provide configuration metadata to the Spring Container:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;XML based configuration file.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Annotation-based configuration&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Java-based configuration&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</answer>
        <description>&lt;p&gt;Dependency Injection (Spring IoC)&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="spring" name="Spring" type="sub"/>
    </question>
    <question id="169">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.codejava.net/frameworks/spring/bootstrapping-a-spring-web-mvc-application-programmatically"&gt;http://www.codejava.net/frameworks/spring/bootstrapping-a-spring-web-mvc-application-programmatically&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;Bean Factory&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This is the simplest container providing basic support for DI and defined by the org.springframework.beans.factory.BeanFactory interface. The BeanFactory and related interfaces, such as BeanFactoryAware, InitializingBean, DisposableBean, are still present in Spring for the purposes of backward compatibility with the large number of third-party frameworks that integrate with Spring.&lt;/p&gt;&lt;p&gt;There are a number of implementations of the BeanFactory interface that come supplied straight out-of-the-box with Spring. The most commonly used BeanFactory implementation is the&amp;nbsp;&lt;strong&gt;XmlBeanFactory&lt;/strong&gt;&amp;nbsp;class. This container reads the configuration metadata from an XML file and uses it to create a fully configured system or application.&lt;/p&gt;&lt;p&gt;The BeanFactory is usually preferred where the resources are limited like mobile devices or applet based applications.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;XmlBeanFactory factory = new XmlBeanFactory(new ClassPathResource("beans.xml"));

HelloWorld obj = (HelloWorld) factory.getBean("helloWorld");
obj.getMessage();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Application Context&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This container adds more enterprise-specific functionality such as the ability to resolve textual messages from a properties file and the ability to publish application events to interested event listeners. This container is defined by the&lt;em&gt;org.springframework.context.ApplicationContext&lt;/em&gt;&amp;nbsp;interface.&lt;/p&gt;&lt;p&gt;Some of the useful child-interfaces of&amp;nbsp;&lt;code&gt;ApplicationContext&lt;/code&gt;&amp;nbsp;are&amp;nbsp;&lt;code&gt;ConfigurableApplicationContext&lt;/code&gt;&amp;nbsp;and&lt;code&gt;WebApplicationContext&lt;/code&gt;. Spring Framework provides a number of useful ApplicationContext implementation classes that we can use to get the spring context and then the Spring Bean.&lt;/p&gt;&lt;p&gt;Some of the useful ApplicationContext implementations that we use are;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;AnnotationConfigApplicationContext&lt;/strong&gt;: If we are using Spring in standalone java applications and using annotations for Configuration, then we can use this to initialize the container and get the bean objects.&amp;nbsp;Bean in spring can be created in java file instead of XML,too. They are created with the help of @Configuration. And that application configuration is loaded by AnnotationConfigApplicationContext in spring container. AnnotationConfigApplicationContext has the&amp;nbsp;&lt;em&gt;register&lt;/em&gt;&amp;nbsp;method that accepts the bean configuration class. AnnotationConfigApplicationContext provides the method&amp;nbsp;&lt;em&gt;getBean&lt;/em&gt;&amp;nbsp;to get the bean object.&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class="language-java"&gt;//AppTest.java

import org.springframework.context.annotation.AnnotationConfigApplicationContext;

public class AppTest {
	public static void main(String[] args) throws SQLException {
		AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();
 
		ctx.register(AppConfig.class);
		ctx.refresh();

		Entitlement ent= (Entitlement)ctx.getBean("entitlement");
	    System.out.println(ent.getName());		
	    System.out.println(ent.getTime());
	
	}
}
 


//AppConfig.java

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AppConfig  {
   
	@Bean(name="entitlement")
	public Entitlement entitlement(){
		Entitlement ent= new Entitlement();
		ent.setName("Entitlement");
		ent.setTime(20);
		return ent;
	}
}

 

//Entitlement.java

public class Entitlement {
	private String name;
	private int time;
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getTime() {
		return time;
	}
	public void setTime(int time) {
		this.time = time;
	}
}
 &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;ClassPathXmlApplicationContext&lt;/strong&gt;: If we have spring bean configuration xml file in standalone application, then we can use this class to load the file and get the container object.&amp;nbsp;This container loads the definitions of the beans from an XML file. Here you do not need to provide the full path of the XML file but you need to set CLASSPATH properly because this container will look bean configuration XML file in CLASSPATH.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class="language-java"&gt;// open/read the application context file
ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("applicationContext.xml");

// instantiate our spring dao object from the application context
FileEventDao fileEventDao = (FileEventDao)ctx.getBean("fileEventDao");

// create a FileEventType object from the application context
FileEventType fileEventType = (FileEventType)ctx.getBean("fileEventType");

// insert the file event with the spring dao
fileEventDao.doInsert(fileEventType);&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;FileSystemXmlApplicationContext&lt;/strong&gt;: This is similar to ClassPathXmlApplicationContext except that the xml configuration file can be loaded from anywhere in the file system.This container loads the definitions of the beans from an XML file. Here you need to provide the full path of the XML bean configuration file to the constructor.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class="language-java"&gt;ApplicationContext context = new FileSystemXmlApplicationContext
            ("C:/Users/ZARA/workspace/HelloSpring/src/Beans.xml");

HelloWorld obj = (HelloWorld) context.getBean("helloWorld");
obj.getMessage();&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&amp;lt;bean id=&amp;quot;helloWorld&amp;quot; class=&amp;quot;com.tutorialspoint.HelloWorld&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;message&amp;quot; value=&amp;quot;Hello World!&amp;quot;/&amp;gt;
   &amp;lt;/bean&amp;gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;AnnotationConfigWebApplicationContext&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;XmlWebApplicationContext&lt;/strong&gt;&amp;nbsp;for web applications.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;Bean Factory and Application Context&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="spring" name="Spring" type="sub"/>
    </question>
    <question id="170">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.javacodegeeks.com/2014/05/spring-interview-questions-and-answers.html"&gt;https://www.javacodegeeks.com/2014/05/spring-interview-questions-and-answers.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://howtodoinjava.com/spring/spring-core/top-spring-core-interview-questions-with-answers/"&gt;http://howtodoinjava.com/spring/spring-core/top-spring-core-interview-questions-with-answers/&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Spring related questions&lt;/p&gt;</description>
        <topic parent_id="frameworks" id="spring" name="Spring" type="sub"/>
    </question>
    <question id="129">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_1001.htm"&gt;https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_1001.htm&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;1. &lt;strong&gt;DDL&lt;/strong&gt; &amp;ndash; Data Definition Language
DDL is used to define the structure that holds the data. For example, Create, Alter, Drop and Truncate table.

2. &lt;strong&gt;DML&lt;/strong&gt;&amp;ndash; Data Manipulation Language
DML is used for manipulation of the data itself. Typical operations are Insert, Delete, Update and retrieving the data from the table. The Select statement is considered as a limited version of the DML, since it can&amp;#39;t change the data in the database. But it can perform operations on data retrieved from the DBMS, before the results are returned to the calling function.

3. &lt;strong&gt;DCL&lt;/strong&gt;&amp;ndash; Data Control Language 
DCL is used to control the visibility of data like granting database access and set privileges to create tables, etc. Example - Grant, Revoke access permission to the user to access data in the database.&lt;/pre&gt;</answer>
        <description>&lt;p&gt;Different type of SQL&amp;nbsp;statements&lt;/p&gt;</description>
        <topic parent_id="database" id="sql" name="SQL" type="sub"/>
    </question>
    <question id="172">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/"&gt;http://www.programmerinterview.com/index.php/database-sql/find-nth-highest-salary-sql/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.com/2016/01/4-ways-to-find-nth-highest-salary-in.html"&gt;http://javarevisited.blogspot.com/2016/01/4-ways-to-find-nth-highest-salary-in.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;img src="https://4.bp.blogspot.com/-6y2k9tb2Bvs/VpUNn0EKVyI/AAAAAAAAEkM/atveP6LTMLI/s640/How%2Bto%2Bfind%2Bthe%2BNth%2BHighest%2BSalary%2Bof%2BEmployee%2Bin%2BSQL.png" /&gt;&lt;/p&gt;&lt;p&gt;2nd highest salary&lt;/p&gt;&lt;pre&gt;SELECT MAX(Salary) FROM Employee
WHERE Salary NOT IN (SELECT MAX(Salary) FROM Employee )&lt;/pre&gt;&lt;p&gt;Nth highest salary&lt;/p&gt;&lt;pre&gt;SELECT * /*This is the outer query part */
FROM Employee Emp1
WHERE (N-1) = ( /* Subquery starts here */
SELECT COUNT(DISTINCT(Emp2.Salary))
FROM Employee Emp2
WHERE Emp2.Salary &amp;gt; Emp1.Salary)&lt;/pre&gt;&lt;p&gt;SQL Server&lt;/p&gt;&lt;pre&gt;SELECT TOP 1 Salary
FROM (
      SELECT DISTINCT TOP N Salary
      FROM Employee
      ORDER BY Salary DESC
      ) AS Emp
ORDER BY Salary&lt;/pre&gt;&lt;p&gt;MySQL&lt;/p&gt;&lt;pre&gt;SELECT Salary FROM Employee 
ORDER BY Salary DESC LIMIT n-1,1&lt;/pre&gt;</answer>
        <description>&lt;p&gt;Find Nth highest salary in employee table&lt;/p&gt;</description>
        <topic parent_id="database" id="sql" name="SQL" type="sub"/>
    </question>
    <question id="11">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://java67.blogspot.in/2012/08/can-we-override-static-method-in-java.html"&gt;http://java67.blogspot.in/2012/08/can-we-override-static-method-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.in/2013/03/can-we-overload-and-override-static-method-java.html"&gt;http://javarevisited.blogspot.in/2013/03/can-we-overload-and-override-static-method-java.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://important-java-interview-questions.blogspot.in/2013/05/can-static-methods-be-overridden-in-java.html"&gt;http://important-java-interview-questions.blogspot.in/2013/05/can-static-methods-be-overridden-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;No, you cannot override static method in Java because&amp;nbsp;&lt;a href="http://java67.blogspot.sg/2012/08/what-is-method-overriding-in-java-example-tutorial.html"&gt;method overriding&lt;/a&gt;&amp;nbsp;is based upon dynamic binding at runtime and static methods are bonded using&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2012/03/what-is-static-and-dynamic-binding-in.html"&gt;static binding&lt;/a&gt;&amp;nbsp;at compile time. Though you can declare a method with same name and method signature in sub class which does look like you can override static method in Java but in reality that is method hiding. Java won&amp;#39;t resolve method call at runtime and depending upon type of&amp;nbsp;Objectwhich is used to call&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2011/11/static-keyword-method-variable-java.html"&gt;static method&lt;/a&gt;, corresponding method will be called. It means if you use&amp;nbsp;Parent&amp;nbsp;class&amp;#39;s type to call static method, original static will be called from patent class, on ther other hand if you use&amp;nbsp;Child&amp;nbsp;class&amp;#39;s type to call static method, method from child class will be called. In short you can not override static method in Java. If you use Java&amp;nbsp;IDE&amp;nbsp;like&amp;nbsp;&lt;a href="http://javarevisited.blogspot.sg/2011/02/how-to-setup-remote-debugging-in.html"&gt;Eclipse&lt;/a&gt;&amp;nbsp;or Netbeans, they will show warning that static method should be called using class name and not by using object becaues&amp;nbsp;&lt;em&gt;static method can not be overridden in Java&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;public class StaticDemo {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static void main(String[] args) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;P.m(); //prints P&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;C.m(); //prints C&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;P c = new C();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;c.m(); //calls Parent&amp;#39;s method, prints P&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class P{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;static void m(){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;P&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class C extends P{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;static void m(){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;C&amp;quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;Can we override or overload static method in java?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="static" name="Static" type="sub"/>
    </question>
    <question id="24">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.jusfortechies.com/java/core-java/static-blocks.php"&gt;http://www.jusfortechies.com/java/core-java/static-blocks.php&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.javacode.in/static-block-in-java/"&gt;http://www.javacode.in/static-block-in-java/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;em&gt;Static blocks&amp;nbsp;&lt;/em&gt;are also called&amp;nbsp;&lt;em&gt;Static initialization blocks&amp;nbsp;&lt;/em&gt;. A static initialization block is a normal block of code enclosed in braces, { }, and preceded by the static keyword. Here is an example:&amp;nbsp;&lt;/p&gt;

&lt;pre&gt;
static {
    // whatever code is needed for initialization goes here
}
&lt;/pre&gt;

&lt;p&gt;A class can have any number of static initialization blocks, and they can appear anywhere in the class body. The runtime system guarantees that static initialization blocks are called in the order that they appear in the source code. And dont forget, this code will be executed when JVM loads the class. JVM combines all these blocks into one single static block and then executes. Here are a couple of points I like to mention:&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If you have executable statements in the static block, JVM will automatically execute these statements when the class is loaded into JVM.&lt;/li&gt;
	&lt;li&gt;If you&amp;rsquo;re referring some static variables/methods from the static blocks, these statements will be executed after the class is loaded into JVM same as above i.e., now the static variables/methods referred and the static block both will be executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Lets see an example:&lt;/p&gt;

&lt;pre&gt;
public class StaticExample{
    static {
        System.out.println(&amp;quot;This is first static block&amp;quot;);
    }

    public StaticExample(){
        System.out.println(&amp;quot;This is constructor&amp;quot;);
    }

    public static String staticString = &amp;quot;Static Variable&amp;quot;;

    static {
        System.out.println(&amp;quot;This is second static block and &amp;quot;
		                                        + staticString);
    }

    public static void main(String[] args){
        StaticExample statEx = new StaticExample();
        StaticExample.staticMethod2();
    }

    static {
        staticMethod();
        System.out.println(&amp;quot;This is third static block&amp;quot;);
    }

    public static void staticMethod() {
        System.out.println(&amp;quot;This is static method&amp;quot;);
    }

    public static void staticMethod2() {
        System.out.println(&amp;quot;This is static method2&amp;quot;);
    }
}

&lt;/pre&gt;

&lt;p&gt;What will happen when you execute the above code? You will see below output.&lt;/p&gt;

&lt;pre&gt;
This is first static block
This is second static block and Static Variable
This is static method
This is third static block
This is constructor
This is static method2
&lt;/pre&gt;

&lt;p&gt;Now lets the output. First all static blocks are positioned in the code and they are executed when the class is loaded into JVM. Since the static method staticMethod() is called inside third static block, its executed before calling the main method. But the staticMethod2() static method is executed after the class is instantiated because it is being called after the instantiation of the class.&lt;br /&gt;
&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So what are the advantages of static blocks?&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If you&amp;rsquo;re loading drivers and other items into the namespace. For ex, Class class has a static block where it registers the natives.&lt;/li&gt;
	&lt;li&gt;If you need to do computation in order to initialize your static variables,you can declare a static block which gets executed exactly once,when the class is first loaded.&lt;/li&gt;
	&lt;li&gt;Security related issues or logging related tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Ofcourse there are limitations for static blocks&amp;nbsp;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;There is a limitation of JVM that a static initializer block should not exceed 64K.&lt;/li&gt;
	&lt;li&gt;You cannot throw Checked Exceptions.&lt;/li&gt;
	&lt;li&gt;You cannot use this keyword since there is no instance.&lt;/li&gt;
	&lt;li&gt;You shouldn&amp;rsquo;t try to access super since there is no such a thing for static blocks.&lt;/li&gt;
	&lt;li&gt;You should not return anything from this block.&lt;/li&gt;
	&lt;li&gt;Static blocks make testing a nightmare.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</answer>
        <description>&lt;p&gt;What are static blocks in java?&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="static" name="Static" type="sub"/>
    </question>
    <question id="13">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.journaldev.com/797/what-is-java-string-pool"&gt;http://www.journaldev.com/797/what-is-java-string-pool&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/05/string-pool-string-literal-pool-string.html"&gt;http://www.javamadesoeasy.com/2015/05/string-pool-string-literal-pool-string.html&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="https://dzone.com/articles/string-memory-internals"&gt;https://dzone.com/articles/string-memory-internals&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;String Pool&amp;nbsp;is a pool of Strings stored in&amp;nbsp;&lt;a href="http://www.journaldev.com/4098/java-heap-memory-vs-stack-memory-difference"&gt;Java Heap Memory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can create String object using&amp;nbsp;&lt;code&gt;new&lt;/code&gt;&amp;nbsp;operator like any normal java class or we can use double quotes to create a String object. There are several constructors available in String class to get String from char array, byte array, StringBuffer and StringBuilder.&lt;/p&gt;

&lt;table border="0" cellpadding="0" cellspacing="0" style="height:auto !important; width:748px"&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;td style="height:auto !important; vertical-align:baseline !important; width:auto !important"&gt;
			&lt;p&gt;1&lt;/p&gt;

			&lt;p&gt;2&lt;/p&gt;
			&lt;/td&gt;
			&lt;td style="height:auto !important; vertical-align:baseline !important; width:714px"&gt;
			&lt;div style="background:none !important; border:0px !important; padding:0px !important"&gt;
			&lt;p&gt;&lt;code&gt;String str = &lt;/code&gt;&lt;code&gt;new&lt;/code&gt; &lt;code&gt;String(&lt;/code&gt;&lt;code&gt;&amp;quot;abc&amp;quot;&lt;/code&gt;&lt;code&gt;);&lt;/code&gt;&lt;/p&gt;

			&lt;p&gt;&lt;code&gt;String str1 = &lt;/code&gt;&lt;code&gt;&amp;quot;abc&amp;quot;&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;&lt;/p&gt;
			&lt;/div&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;When we create a String using double quotes, JVM looks in the String pool to find if any other String is stored with same value. If found, it just returns the reference to that String object else it creates a new String object with given value and stores it in the String pool.&lt;br /&gt;
When we use new operator, JVM creates the String object but don&amp;rsquo;t store it into the String Pool. We can use&lt;code&gt;intern()&lt;/code&gt;&amp;nbsp;method to store the String object into String pool or return the reference if there is already a String with equal value present in the pool.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;What is String pool? What are the ways to create a String in java?&lt;/p&gt;
</description>
        <topic parent_id="core_java" id="strings_corejava" name="Strings" type="sub"/>
    </question>
    <question id="133">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.javacodegeeks.com/2014/11/multithreading-concurrency-interview-questions-answers.html"&gt;https://www.javacodegeeks.com/2014/11/multithreading-concurrency-interview-questions-answers.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;pre&gt;public class MainThread {

	public static void main(String[] args) {
		long id = Thread.currentThread().getId();
		String name = Thread.currentThread().getName();
		...
	}
}&lt;/pre&gt;</answer>
        <description>&lt;p&gt;How can a Java application access the current thread?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="134">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/03/thread-states-thread-life-cycle-in-java.html"&gt;http://www.javamadesoeasy.com/2015/03/thread-states-thread-life-cycle-in-java.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;ul&gt;&lt;li&gt;&lt;code&gt;NEW:&lt;/code&gt;&amp;nbsp;A thread that has not yet started is in this state.&lt;/li&gt;&lt;li&gt;&lt;code&gt;RUNNABLE:&lt;/code&gt;&amp;nbsp;A thread executing in the Java virtual machine is in this state.&lt;/li&gt;&lt;li&gt;RUNNING:&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;code&gt;BLOCKED:&lt;/code&gt;&amp;nbsp;A thread that is blocked waiting for a monitor lock is in this state.&lt;/li&gt;&lt;li&gt;&lt;code&gt;WAITING:&lt;/code&gt;&amp;nbsp;A thread that is waiting indefinitely for another thread to perform a particular action is in this state.&lt;/li&gt;&lt;li&gt;&lt;code&gt;TIMED_WAITING:&lt;/code&gt;&amp;nbsp;A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state.&lt;/li&gt;&lt;li&gt;SLEEPING:&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;code&gt;TERMINATED:&lt;/code&gt;&amp;nbsp;A thread that has exited is in this state.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="https://lh6.googleusercontent.com/7jeKUlh2g92iKsBg1K9TKUrkuhNWVn-Rb4yUI1Ey82Varf7_egXGDh9WyABRMhPuAhfA8wJ_Zz1uPuurm2LmzbrZLgLNArUf2vXgVvTP5v5GrZ2Dq1PNv1W7xZGL3YLPqebjXgU" /&gt;&lt;/p&gt;</answer>
        <description>&lt;p&gt;What states can a thread have and what is the meaning of each state?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="135">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/03/threads-top-75-interview-questions-and_9.html"&gt;http://www.javamadesoeasy.com/2015/03/threads-top-75-interview-questions-and_9.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;The first one is to write a class that extends the JDK class&amp;nbsp;&lt;code&gt;java.lang.Thread&lt;/code&gt;&amp;nbsp;and call its method&amp;nbsp;&lt;code&gt;start()&lt;/code&gt;:&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;01&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;class&lt;/code&gt;&amp;nbsp;&lt;code&gt;MyThread&amp;nbsp;&lt;/code&gt;&lt;code&gt;extends&lt;/code&gt;&amp;nbsp;&lt;code&gt;Thread {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;02&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;03&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;MyThread(String name) {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;04&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;super&lt;/code&gt;&lt;code&gt;(name);&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;05&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;06&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;07&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;@Override&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;08&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;void&lt;/code&gt;&amp;nbsp;&lt;code&gt;run() {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;09&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;System.out.println(&lt;/code&gt;&lt;code&gt;&amp;quot;Executing thread &amp;quot;&lt;/code&gt;&lt;code&gt;+Thread.currentThread().getName());&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;11&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;12&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;static&lt;/code&gt;&amp;nbsp;&lt;code&gt;void&lt;/code&gt;&amp;nbsp;&lt;code&gt;main(String[] args)&amp;nbsp;&lt;/code&gt;&lt;code&gt;throws&lt;/code&gt;&amp;nbsp;&lt;code&gt;InterruptedException {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;13&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;MyThread myThread =&amp;nbsp;&lt;/code&gt;&lt;code&gt;new&lt;/code&gt;&amp;nbsp;&lt;code&gt;MyThread(&lt;/code&gt;&lt;code&gt;&amp;quot;myThread&amp;quot;&lt;/code&gt;&lt;code&gt;);&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;14&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;myThread.start();&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;15&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;16&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The second way is to implement the interface&amp;nbsp;&lt;code&gt;java.lang.Runnable&lt;/code&gt;&amp;nbsp;and pass this implementation as a parameter to the constructor of&amp;nbsp;&lt;code&gt;java.lang.Thread&lt;/code&gt;:&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;01&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;class&lt;/code&gt;&amp;nbsp;&lt;code&gt;MyRunnable&amp;nbsp;&lt;/code&gt;&lt;code&gt;implements&lt;/code&gt;&amp;nbsp;&lt;code&gt;Runnable {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;02&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;03&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;void&lt;/code&gt;&amp;nbsp;&lt;code&gt;run() {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;04&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;System.out.println(&lt;/code&gt;&lt;code&gt;&amp;quot;Executing thread &amp;quot;&lt;/code&gt;&lt;code&gt;+Thread.currentThread().getName());&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;05&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;06&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;07&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;public&lt;/code&gt;&amp;nbsp;&lt;code&gt;static&lt;/code&gt;&amp;nbsp;&lt;code&gt;void&lt;/code&gt;&amp;nbsp;&lt;code&gt;main(String[] args)&amp;nbsp;&lt;/code&gt;&lt;code&gt;throws&lt;/code&gt;&amp;nbsp;&lt;code&gt;InterruptedException {&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;08&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;Thread myThread =&amp;nbsp;&lt;/code&gt;&lt;code&gt;new&lt;/code&gt;&amp;nbsp;&lt;code&gt;Thread(&lt;/code&gt;&lt;code&gt;new&lt;/code&gt;&amp;nbsp;&lt;code&gt;MyRunnable(),&amp;nbsp;&lt;/code&gt;&lt;code&gt;&amp;quot;myRunnable&amp;quot;&lt;/code&gt;&lt;code&gt;);&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;09&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;myThread.start();&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;11&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;}&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</answer>
        <description>&lt;p&gt;How is a thread created in Java?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="136">
        <references></references>
        <answer>&lt;p&gt;No, after having started a thread by invoking its&amp;nbsp;&lt;code&gt;start()&lt;/code&gt;&amp;nbsp;method, a second invocation of&amp;nbsp;&lt;code&gt;start()&lt;/code&gt;&amp;nbsp;will throw an&lt;code&gt;IllegalThreadStateException&lt;/code&gt;.&lt;/p&gt;</answer>
        <description>&lt;p&gt;Is it possible to start a thread twice?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="137">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.journaldev.com/1024/java-thread-join-example"&gt;http://www.journaldev.com/1024/java-thread-join-example&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.studytonight.com/java/joining-a-thread.php"&gt;http://www.studytonight.com/java/joining-a-thread.php&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/03/join-method-ensure-all-threads-that.html"&gt;http://www.javamadesoeasy.com/2015/03/join-method-ensure-all-threads-that.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;&lt;strong&gt;Java Thread join&lt;/strong&gt;&amp;nbsp;method can be used to pause the current thread execution until unless the specified thread is dead.&lt;/p&gt;&lt;p&gt;There are three overloaded join functions.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;public final void join()&lt;/strong&gt;: This java thread join method puts the current thread on wait until the thread on which it&amp;rsquo;s called is dead. If the thread is interrupted, it throws InterruptedException.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;public final synchronized void join(long millis)&lt;/strong&gt;: This java thread join method is used to wait for the thread on which it&amp;rsquo;s called to be dead or wait for specified milliseconds. Since thread execution depends on OS implementation, it doesn&amp;rsquo;t guarantee that the current thread will wait only for given time.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;public final synchronized void join(long millis, int nanos)&lt;/strong&gt;: This java thread join method is used to wait for thread to die for given milliseconds plus nanoseconds.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;package com.learning.threads;
public class JoinDemo {

	public static void main(String[] args) throws InterruptedException {
		for(int i=0;i&amp;lt;5;i++){
			Thread t = new Thread(new MyThread());
			t.start();
			t.join();
		}
	}
}
class MyThread implements Runnable{
	@Override
	public void run() {
		System.out.println(Thread.currentThread().getId());
		
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output:&lt;/p&gt;&lt;p&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;13&lt;br /&gt;14&lt;br /&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;join() method&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="138">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/03/wait-and-notify-methods-definition-8.html"&gt;http://www.javamadesoeasy.com/2015/03/wait-and-notify-methods-definition-8.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://javarevisited.blogspot.in/2015/07/how-to-use-wait-notify-and-notifyall-in.html"&gt;http://javarevisited.blogspot.in/2015/07/how-to-use-wait-notify-and-notifyall-in.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Threads can communicate with each other by using &lt;a href="http://www.javamadesoeasy.com/2015/03/wait-and-notify-methods-definition-8.html"&gt;wait(), notify() and notifyAll()&lt;/a&gt; methods.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;wait()&lt;/strong&gt; - Causes the current thread to wait until another thread invokes the notify() or notifyAll() method for this object.&lt;br /&gt;The current thread must own this object&amp;#39;s monitor. The thread releases ownership of this monitor and waits until another thread notifies threads waiting on this object&amp;#39;s monitor to wake up either through a call to the notify()/ notifyAll() method. The thread then waits until it can re-obtain ownership of the monitor and resumes execution.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;notify()&lt;/strong&gt; - Wakes up a single thread that is waiting on this object&amp;#39;s monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is random and occurs at the discretion of the implementation. A thread waits on an object&amp;#39;s monitor by calling one of the wait methods.&lt;/p&gt;&lt;p&gt;The awakened threads will not be able to proceed until the current thread relinquishes the lock on this object.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;notifyAll()&lt;/strong&gt; - Wakes up all threads that are waiting on this object&amp;#39;s monitor. A thread waits on an object&amp;#39;s monitor by calling one of the wait methods.&lt;/p&gt;&lt;p&gt;The awakened threads will not be able to proceed until the current thread relinquishes the lock on this object.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;public class ProducerConsumerDemo {
	public static void main(String[] args) {
		Queue&amp;lt;Integer&amp;gt; queue = new LinkedList&amp;lt;Integer&amp;gt;();
		Thread p = new Thread(new Producer(queue, 1));
		Thread c = new Thread(new Consumer(queue, 1));
		p.start();
		c.start();
	}
}

class Producer implements Runnable {
	Queue&amp;lt;Integer&amp;gt; queue;
	int maxSize;

	Producer(Queue&amp;lt;Integer&amp;gt; queue, int maxSize) {
		this.queue = queue;
		this.maxSize = maxSize;
	}

	@Override
	public void run() {
		for(int i=0;i&amp;lt;5;i++) {
			synchronized (queue) {
				while (queue.size() == maxSize) {
					try {
						System.out.println("Producer is waiting");
						queue.wait();
					} catch (InterruptedException e) {
					}
				}
				int number = new Random().nextInt(100);
				System.out.println("Producer added " + number);
				queue.add(number);
				queue.notifyAll();
			}
		}
	}
}

class Consumer implements Runnable {
	Queue&amp;lt;Integer&amp;gt; queue;
	int maxSize;

	Consumer(Queue&amp;lt;Integer&amp;gt; queue, int maxSize) {
		this.queue = queue;
		this.maxSize = maxSize;
	}

	@Override
	public void run() {
		for(int i=0;i&amp;lt;5;i++){
			synchronized (queue) {
				while (queue.size() == 0) {
					try {
						System.out.println("Consumer is waiting");
						queue.wait();
					} catch (InterruptedException e) {
					}
				}
				int number = queue.remove();
				System.out.println("Consumer consumed " + number);
				queue.notifyAll();
			}
		}
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</answer>
        <description>&lt;p&gt;How threads communicate between each other?&lt;br /&gt;Hint: wait(), notify(), notifyAll()&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="139">
        <references></references>
        <answer>&lt;ol&gt;&lt;li&gt;&lt;p&gt;Every Object has a monitor, acquiring that monitors allow thread to hold lock on object. But Thread class does not have any monitors.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;wait(), notify() and notifyAll() are called on objects only &amp;gt; When wait() method is called on object by thread it waits for another thread on that object to release object monitor by calling &lt;a href="http://www.javamadesoeasy.com/2015/03/difference-between-notify-and-notifyall.html"&gt;notify() or notifyAll()&lt;/a&gt; method on that object.&amp;nbsp;When notify() method is called on object by thread it notifies all the threads&amp;nbsp;which are waiting for that object monitor that object monitor is available now.&amp;nbsp;So, this shows that wait(), notify() and notifyAll() are called on objects only.&amp;nbsp;&lt;a href="http://www.javamadesoeasy.com/2015/03/synchronization-blocks-and-methods.html"&gt;Now, Straight forward question that comes to mind is how thread acquires object lock by acquiring object monitor? Let&amp;rsquo;s try to understand this basic concept in detail?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Wait(), notify() and notifyAll() method being in Object class allows all the threads created on that object to communicate with other. &amp;nbsp;[As multiple threads may exist on same object].&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;As multiple threads exists on same object. Only one thread can hold object monitor at a time. As a result thread can notify other threads of same object that lock is available now. But, thread having these methods does not make any sense because multiple threads exists on object its not other way around (i.e. multiple objects exists on thread).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Now let&amp;rsquo;s discuss one hypothetical scenario, what will happen if Thread class contains wait(), notify() and notifyAll() methods?&lt;br /&gt;Having wait(), notify() and notifyAll() methods means Thread class also must have their monitor.&amp;nbsp;&lt;br /&gt;Every thread having their monitor will create few problems&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Thread communication problem.&lt;/li&gt;&lt;li&gt;Synchronization on object won&amp;rsquo;t be possible- Because object has monitor, one object can have multiple threads and thread hold lock on object by holding object monitor. But if each thread will have monitor, we won&amp;rsquo;t have any way of achieving synchronization.&lt;/li&gt;&lt;li&gt;Inconsistency in state of object (because synchronization won&amp;#39;t be possible).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</answer>
        <description>&lt;p&gt;Why wait(), notify() &amp;nbsp;and notifyAll() are in Object class and not in Thread class?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="140">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/03/solve-consumer-producer-problem-by.html"&gt;http://www.javamadesoeasy.com/2015/03/solve-consumer-producer-problem-by.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;public class ProducerConsumerBlockingQDemo {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public static void main(String[] args) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;BlockingQueue&amp;lt;Integer&amp;gt; sharedQueue = new LinkedBlockingQueue&amp;lt;Integer&amp;gt;();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Thread p = new Thread(new ProducerBQ(sharedQueue));&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Thread c = new Thread(new ConsumerBQ(sharedQueue));&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;p.start();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;c.start();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class ProducerBQ implements Runnable {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;BlockingQueue&amp;lt;Integer&amp;gt; queue;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;ProducerBQ(BlockingQueue&amp;lt;Integer&amp;gt; queue) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.queue = queue;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public void run() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; 5; i++) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int number = new Random().nextInt(100);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;Producer added &amp;quot; + number);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;try {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;queue.put(number);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} catch (InterruptedException e) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;class ConsumerBQ implements Runnable {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;BlockingQueue&amp;lt;Integer&amp;gt; queue;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;ConsumerBQ(BlockingQueue&amp;lt;Integer&amp;gt; queue) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.queue = queue;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;public void run() {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; 5; i++) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;int number = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;try {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;number = queue.take();&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} catch (InterruptedException e) {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;System.out.println(&amp;quot;Consumer consumed &amp;quot; + number);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;/p&gt;</answer>
        <description>&lt;p&gt;How can you solve consumer producer pattern by using BlockingQueue?&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="141">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="http://www.javamadesoeasy.com/2015/03/deadlock-in-multithreading-program-to.html"&gt;http://www.javamadesoeasy.com/2015/03/deadlock-in-multithreading-program-to.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer>&lt;p&gt;Deadlock is a situation where two threads are waiting for each other to release lock holded by them on resources.&lt;/p&gt;&lt;pre&gt;&lt;code class="language-java"&gt;package com.learning.threads;

class A implements Runnable {
	public void run() {
		synchronized (String.class) {
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {
				}
			System.out.println(Thread.currentThread().getName() + "has acquired lock "
					+ "on String class and waiting to acquire lock on Object class...");
			synchronized (Object.class) {
				System.out.println(Thread.currentThread().getName() + " has acquired lock on Object class");
			}
		}
		System.out.println(Thread.currentThread().getName() + " has ENDED");
	}
}

class B extends Thread {
	public void run() {
		synchronized (Object.class) {
			System.out.println(Thread.currentThread().getName() + " has acquired "
					+ "lock on Object class and waiting to acquire lock on String class...");
			try {
				Thread.sleep(100);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			synchronized (String.class) {
				System.out.println(Thread.currentThread().getName() + " has acquired lock on String class");
			}
		}
		System.out.println(Thread.currentThread().getName() + " has ENDED");
	}
}

public class DeadlockDemo {

	public static void main(String[] args) {
		Thread thread1 = new Thread(new A(), "Thread-1");
		Thread thread2 = new Thread(new B(), "Thread-2");
		thread1.start();
		thread2.start();
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Few important measures to avoid &lt;a href="http://www.javamadesoeasy.com/2015/03/deadlock-in-multithreading-program-to.html"&gt;Deadlock&lt;/a&gt; &amp;gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Lock specific member variables of class rather than locking whole class: We must try to lock specific member variables of class rather than locking whole class.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use join() method: If possible try to use join() method, although it may refrain us from taking full advantage of multithreading environment because threads will start and end sequentially, but it can be handy in avoiding deadlocks.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If possible try avoid using nested synchronization blocks.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</answer>
        <description>&lt;p&gt;Deadlock&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="171">
        <references>&lt;ol&gt;&lt;li&gt;&lt;a href="https://www.javacodegeeks.com/2014/11/multithreading-concurrency-interview-questions-answers.html"&gt;https://www.javacodegeeks.com/2014/11/multithreading-concurrency-interview-questions-answers.html&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</references>
        <answer></answer>
        <description>&lt;p&gt;Thread related questions&lt;/p&gt;</description>
        <topic parent_id="core_java" id="threads" name="Threads" type="sub"/>
    </question>
    <question id="59">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/dom.html#windwoVsDocument"&gt;http://www.thatjsdude.com/interview/dom.html#windwoVsDocument&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://eligeske.com/jquery/what-is-the-difference-between-document-and-window-objects-2/"&gt;http://eligeske.com/jquery/what-is-the-difference-between-document-and-window-objects-2/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;JavaScript has a global object and everything runs under it. window is that global object that holds global variables, global functions, location, history everything is under it. Besides, setTimeout, ajax call (XMLHttpRequest), console or localStorage are part of window.&lt;/p&gt;

&lt;p&gt;document is also under window. document is a property of the window object. document represents the DOM and DOM is the object oriented representation of the html markup you have written. All the nodes are part of document. Hence you can use getElementById or addEventListener on document. These methods are not present in the window object.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Difference between window and document.&lt;/p&gt;
</description>
        <topic parent_id="web_development" id="web_development_dom" name="DOM" type="sub"/>
    </question>
    <question id="60">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/dom.html#windwoVsDocument"&gt;http://www.thatjsdude.com/interview/dom.html#windwoVsDocument&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;&lt;code&gt;window.onload&lt;/code&gt;&amp;nbsp;is fired when DOM is ready and all the contents including images, css, scripts, sub-frames, etc. finished loaded. This means everything is loaded.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;document.onload&lt;/code&gt;&amp;nbsp;is fired when DOM (DOM tree built from markup code within the document)is ready which can be prior to images and other external content is loaded.&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Difference between&amp;nbsp;window.onload vs document.onload&lt;/p&gt;
</description>
        <topic parent_id="web_development" id="web_development_dom" name="DOM" type="sub"/>
    </question>
    <question id="61">
        <references>&lt;ol&gt;
	&lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/dom.html#attrVSProperty"&gt;http://www.thatjsdude.com/interview/dom.html#attrVSProperty&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="http://jquery-howto.blogspot.in/2011/06/html-difference-between-attribute-and.html"&gt;http://jquery-howto.blogspot.in/2011/06/html-difference-between-attribute-and.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</references>
        <answer>&lt;p&gt;attributes are just like attribute in your html tag (XML style attribute) inside the starting tag. html attributes are exposed to the DOM via property. Hence, a property is created when DOM is parsed for each attribute in the html tag. If you change an attribute only the value of the property will change. However, the value of attribute will remain same.&lt;/p&gt;

&lt;p&gt;Attributes are in your HTML text document/file, whereas properties are in HTML DOM tree. This means that attributes do not change and always carry initial (default) values. However, HTML properties can change, for example when user checks a checkbox, inputs text to textarea or uses JavaScript to change the property value&lt;/p&gt;
</answer>
        <description>&lt;p&gt;Difference between&amp;nbsp;attribute vs property&lt;/p&gt;
</description>
        <topic parent_id="web_development" id="web_development_dom" name="DOM" type="sub"/>
    </question>
</questions>
